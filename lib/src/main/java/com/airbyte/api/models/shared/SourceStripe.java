/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SourceStripe - The values required to configure the source.
 */
public class SourceStripe {
    /**
     * Your Stripe account ID (starts with 'acct_', find yours <a href="https://dashboard.stripe.com/settings/account">here</a>).
     */
    @JsonProperty("account_id")public String accountId;
    public SourceStripe withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    @JsonProperty("airbyte-source-name")public SourceStripeStripeEnum airbyteSourceName;
    public SourceStripe withAirbyteSourceName(SourceStripeStripeEnum airbyteSourceName) {
        this.airbyteSourceName = airbyteSourceName;
        return this;
    }
    
    /**
     * Stripe API key (usually starts with 'sk_live_'; find yours <a href="https://dashboard.stripe.com/apikeys">here</a>).
     */
    @JsonProperty("client_secret")public String clientSecret;
    public SourceStripe withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }
    
    /**
     * When set, the connector will always re-export data from the past N days, where N is the value set here. This is useful if your data is frequently updated after creation. More info <a href="https://docs.airbyte.com/integrations/sources/stripe#requirements">here</a>
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lookback_window_days")public Long lookbackWindowDays;
    public SourceStripe withLookbackWindowDays(Long lookbackWindowDays) {
        this.lookbackWindowDays = lookbackWindowDays;
        return this;
    }
    
    /**
     * The time increment used by the connector when requesting data from the Stripe API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("slice_range")public Long sliceRange;
    public SourceStripe withSliceRange(Long sliceRange) {
        this.sliceRange = sliceRange;
        return this;
    }
    
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Only data generated after this date will be replicated.
     */
    @JsonProperty("start_date")public String startDate;
    public SourceStripe withStartDate(String startDate) {
        this.startDate = startDate;
        return this;
    }
    
}
