/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SourceAzureBlobStorage - The values required to configure the source.
 */
public class SourceAzureBlobStorage {
    /**
     * The Azure blob storage account key.
     */
    @JsonProperty("azure_blob_storage_account_key")
    public String azureBlobStorageAccountKey;
    public SourceAzureBlobStorage withAzureBlobStorageAccountKey(String azureBlobStorageAccountKey) {
        this.azureBlobStorageAccountKey = azureBlobStorageAccountKey;
        return this;
    }
    
    /**
     * The account's name of the Azure Blob Storage.
     */
    @JsonProperty("azure_blob_storage_account_name")
    public String azureBlobStorageAccountName;
    public SourceAzureBlobStorage withAzureBlobStorageAccountName(String azureBlobStorageAccountName) {
        this.azureBlobStorageAccountName = azureBlobStorageAccountName;
        return this;
    }
    
    /**
     * The Azure blob storage prefix to be applied
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("azure_blob_storage_blobs_prefix")
    public String azureBlobStorageBlobsPrefix;
    public SourceAzureBlobStorage withAzureBlobStorageBlobsPrefix(String azureBlobStorageBlobsPrefix) {
        this.azureBlobStorageBlobsPrefix = azureBlobStorageBlobsPrefix;
        return this;
    }
    
    /**
     * The name of the Azure blob storage container.
     */
    @JsonProperty("azure_blob_storage_container_name")
    public String azureBlobStorageContainerName;
    public SourceAzureBlobStorage withAzureBlobStorageContainerName(String azureBlobStorageContainerName) {
        this.azureBlobStorageContainerName = azureBlobStorageContainerName;
        return this;
    }
    
    /**
     * This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("azure_blob_storage_endpoint")
    public String azureBlobStorageEndpoint;
    public SourceAzureBlobStorage withAzureBlobStorageEndpoint(String azureBlobStorageEndpoint) {
        this.azureBlobStorageEndpoint = azureBlobStorageEndpoint;
        return this;
    }
    
    /**
     * The Azure blob storage blobs to scan for inferring the schema, useful on large amounts of data with consistent structure
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("azure_blob_storage_schema_inference_limit")
    public Long azureBlobStorageSchemaInferenceLimit;
    public SourceAzureBlobStorage withAzureBlobStorageSchemaInferenceLimit(Long azureBlobStorageSchemaInferenceLimit) {
        this.azureBlobStorageSchemaInferenceLimit = azureBlobStorageSchemaInferenceLimit;
        return this;
    }
    
    /**
     * Input data format
     */
    @JsonProperty("format")
    public Object format;
    public SourceAzureBlobStorage withFormat(Object format) {
        this.format = format;
        return this;
    }
    
    @JsonProperty("sourceType")
    public SourceAzureBlobStorageAzureBlobStorageEnum sourceType;
    public SourceAzureBlobStorage withSourceType(SourceAzureBlobStorageAzureBlobStorageEnum sourceType) {
        this.sourceType = sourceType;
        return this;
    }
    
    public SourceAzureBlobStorage(@JsonProperty("azure_blob_storage_account_key") String azureBlobStorageAccountKey, @JsonProperty("azure_blob_storage_account_name") String azureBlobStorageAccountName, @JsonProperty("azure_blob_storage_container_name") String azureBlobStorageContainerName, @JsonProperty("format") Object format, @JsonProperty("sourceType") SourceAzureBlobStorageAzureBlobStorageEnum sourceType) {
        this.azureBlobStorageAccountKey = azureBlobStorageAccountKey;
        this.azureBlobStorageAccountName = azureBlobStorageAccountName;
        this.azureBlobStorageContainerName = azureBlobStorageContainerName;
        this.format = format;
        this.sourceType = sourceType;
  }
}
