/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SourceGooglePagespeedInsights - The values required to configure the source.
 */

public class SourceGooglePagespeedInsights {
    /**
     * Google PageSpeed API Key. See &lt;a href="https://developers.google.com/speed/docs/insights/v5/get-started#APIKey"&gt;here&lt;/a&gt;. The key is optional - however the API is heavily rate limited when using without API Key. Creating and using the API key therefore is recommended. The key is case sensitive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("api_key")
    public String apiKey;

    public SourceGooglePagespeedInsights withApiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }
    
    /**
     * Defines which Lighthouse category to run. One or many of: "accessibility", "best-practices", "performance", "pwa", "seo".
     */
    @JsonProperty("categories")
    public SourceGooglePagespeedInsightsCategories[] categories;

    public SourceGooglePagespeedInsights withCategories(SourceGooglePagespeedInsightsCategories[] categories) {
        this.categories = categories;
        return this;
    }
    
    @JsonProperty("sourceType")
    public SourceGooglePagespeedInsightsGooglePagespeedInsights sourceType;

    public SourceGooglePagespeedInsights withSourceType(SourceGooglePagespeedInsightsGooglePagespeedInsights sourceType) {
        this.sourceType = sourceType;
        return this;
    }
    
    /**
     * The analyses strategy to use. Either "desktop" or "mobile".
     */
    @JsonProperty("strategies")
    public SourceGooglePagespeedInsightsStrategies[] strategies;

    public SourceGooglePagespeedInsights withStrategies(SourceGooglePagespeedInsightsStrategies[] strategies) {
        this.strategies = strategies;
        return this;
    }
    
    /**
     * The URLs to retrieve pagespeed information from. The connector will attempt to sync PageSpeed reports for all the defined URLs. Format: https://(www.)url.domain
     */
    @JsonProperty("urls")
    public String[] urls;

    public SourceGooglePagespeedInsights withUrls(String[] urls) {
        this.urls = urls;
        return this;
    }
    
    public SourceGooglePagespeedInsights(@JsonProperty("categories") SourceGooglePagespeedInsightsCategories[] categories, @JsonProperty("sourceType") SourceGooglePagespeedInsightsGooglePagespeedInsights sourceType, @JsonProperty("strategies") SourceGooglePagespeedInsightsStrategies[] strategies, @JsonProperty("urls") String[] urls) {
        this.categories = categories;
        this.sourceType = sourceType;
        this.strategies = strategies;
        this.urls = urls;
  }
}
