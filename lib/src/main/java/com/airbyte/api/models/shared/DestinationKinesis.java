/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DestinationKinesis - The values required to configure the destination.
 */
public class DestinationKinesis {
    /**
     * Generate the AWS Access Key for current user.
     */
    @JsonProperty("accessKey")
    public String accessKey;
    public DestinationKinesis withAccessKey(String accessKey) {
        this.accessKey = accessKey;
        return this;
    }
    
    /**
     * Buffer size for storing kinesis records before being batch streamed.
     */
    @JsonProperty("bufferSize")
    public Long bufferSize;
    public DestinationKinesis withBufferSize(Long bufferSize) {
        this.bufferSize = bufferSize;
        return this;
    }
    
    @JsonProperty("destinationType")
    public DestinationKinesisKinesisEnum destinationType;
    public DestinationKinesis withDestinationType(DestinationKinesisKinesisEnum destinationType) {
        this.destinationType = destinationType;
        return this;
    }
    
    /**
     * AWS Kinesis endpoint.
     */
    @JsonProperty("endpoint")
    public String endpoint;
    public DestinationKinesis withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }
    
    /**
     * The AWS Private Key - a string of numbers and letters that are unique for each account, also known as a "recovery phrase".
     */
    @JsonProperty("privateKey")
    public String privateKey;
    public DestinationKinesis withPrivateKey(String privateKey) {
        this.privateKey = privateKey;
        return this;
    }
    
    /**
     * AWS region. Your account determines the Regions that are available to you.
     */
    @JsonProperty("region")
    public String region;
    public DestinationKinesis withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * Number of shards to which the data should be streamed.
     */
    @JsonProperty("shardCount")
    public Long shardCount;
    public DestinationKinesis withShardCount(Long shardCount) {
        this.shardCount = shardCount;
        return this;
    }
    
    public DestinationKinesis(@JsonProperty("accessKey") String accessKey, @JsonProperty("bufferSize") Long bufferSize, @JsonProperty("destinationType") DestinationKinesisKinesisEnum destinationType, @JsonProperty("endpoint") String endpoint, @JsonProperty("privateKey") String privateKey, @JsonProperty("region") String region, @JsonProperty("shardCount") Long shardCount) {
        this.accessKey = accessKey;
        this.bufferSize = bufferSize;
        this.destinationType = destinationType;
        this.endpoint = endpoint;
        this.privateKey = privateKey;
        this.region = region;
        this.shardCount = shardCount;
  }
}
