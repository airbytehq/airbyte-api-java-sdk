/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


public class DestinationBigqueryDenormalizedGCSStaging {
    /**
     * An HMAC key is a type of credential and can be associated with a service account or a user account in Cloud Storage. Read more &lt;a href="https://cloud.google.com/storage/docs/authentication/hmackeys"&gt;here&lt;/a&gt;.
     */
    @JsonProperty("credential")
    public Object credential;

    public DestinationBigqueryDenormalizedGCSStaging withCredential(Object credential) {
        this.credential = credential;
        return this;
    }
    
    /**
     * Number of file buffers allocated for writing data. Increasing this number is beneficial for connections using Change Data Capture (CDC) and up to the number of streams within a connection. Increasing the number of file buffers past the maximum number of streams has deteriorating effects
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file_buffer_count")
    public Long fileBufferCount;

    public DestinationBigqueryDenormalizedGCSStaging withFileBufferCount(Long fileBufferCount) {
        this.fileBufferCount = fileBufferCount;
        return this;
    }
    
    /**
     * The name of the GCS bucket. Read more &lt;a href="https://cloud.google.com/storage/docs/naming-buckets"&gt;here&lt;/a&gt;.
     */
    @JsonProperty("gcs_bucket_name")
    public String gcsBucketName;

    public DestinationBigqueryDenormalizedGCSStaging withGcsBucketName(String gcsBucketName) {
        this.gcsBucketName = gcsBucketName;
        return this;
    }
    
    /**
     * Directory under the GCS bucket where data will be written. Read more &lt;a href="https://cloud.google.com/storage/docs/locations"&gt;here&lt;/a&gt;.
     */
    @JsonProperty("gcs_bucket_path")
    public String gcsBucketPath;

    public DestinationBigqueryDenormalizedGCSStaging withGcsBucketPath(String gcsBucketPath) {
        this.gcsBucketPath = gcsBucketPath;
        return this;
    }
    
    /**
     * This upload method is supposed to temporary store records in GCS bucket. By this select you can chose if these records should be removed from GCS when migration has finished. The default "Delete all tmp files from GCS" value is used if not set explicitly.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keep_files_in_gcs-bucket")
    public DestinationBigqueryDenormalizedGCSStagingGCSTmpFilesAfterwardProcessing keepFilesInGcsBucket;

    public DestinationBigqueryDenormalizedGCSStaging withKeepFilesInGcsBucket(DestinationBigqueryDenormalizedGCSStagingGCSTmpFilesAfterwardProcessing keepFilesInGcsBucket) {
        this.keepFilesInGcsBucket = keepFilesInGcsBucket;
        return this;
    }
    
    @JsonProperty("method")
    public DestinationBigqueryDenormalizedGCSStagingMethod method;

    public DestinationBigqueryDenormalizedGCSStaging withMethod(DestinationBigqueryDenormalizedGCSStagingMethod method) {
        this.method = method;
        return this;
    }
    
    public DestinationBigqueryDenormalizedGCSStaging(@JsonProperty("credential") Object credential, @JsonProperty("gcs_bucket_name") String gcsBucketName, @JsonProperty("gcs_bucket_path") String gcsBucketPath, @JsonProperty("method") DestinationBigqueryDenormalizedGCSStagingMethod method) {
        this.credential = credential;
        this.gcsBucketName = gcsBucketName;
        this.gcsBucketPath = gcsBucketPath;
        this.method = method;
  }
}
