/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DestinationLangchainIndexingChromaLocalPersistance - Chroma is a popular vector store that can be used to store and retrieve embeddings. It will build its index in memory and persist it to disk by the end of the sync.
 */

public class DestinationLangchainIndexingChromaLocalPersistance {
    /**
     * Name of the collection to use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collection_name")
    public String collectionName;

    public DestinationLangchainIndexingChromaLocalPersistance withCollectionName(String collectionName) {
        this.collectionName = collectionName;
        return this;
    }
    
    /**
     * Path to the directory where chroma files will be written. The files will be placed inside that local mount.
     */
    @JsonProperty("destination_path")
    public String destinationPath;

    public DestinationLangchainIndexingChromaLocalPersistance withDestinationPath(String destinationPath) {
        this.destinationPath = destinationPath;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mode")
    public DestinationLangchainIndexingChromaLocalPersistanceMode mode;

    public DestinationLangchainIndexingChromaLocalPersistance withMode(DestinationLangchainIndexingChromaLocalPersistanceMode mode) {
        this.mode = mode;
        return this;
    }
    
    public DestinationLangchainIndexingChromaLocalPersistance(@JsonProperty("destination_path") String destinationPath) {
        this.destinationPath = destinationPath;
  }
}
