/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.operations;

import com.airbyte.api.models.shared.CreateDefinitionRequest;
import com.airbyte.api.utils.SpeakeasyMetadata;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class CreateDestinationDefinitionRequest {

    @SpeakeasyMetadata("request:mediaType=application/json")
    private CreateDefinitionRequest createDefinitionRequest;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=workspaceId")
    private String workspaceId;

    @JsonCreator
    public CreateDestinationDefinitionRequest(
            CreateDefinitionRequest createDefinitionRequest,
            String workspaceId) {
        Utils.checkNotNull(createDefinitionRequest, "createDefinitionRequest");
        Utils.checkNotNull(workspaceId, "workspaceId");
        this.createDefinitionRequest = createDefinitionRequest;
        this.workspaceId = workspaceId;
    }

    @JsonIgnore
    public CreateDefinitionRequest createDefinitionRequest() {
        return createDefinitionRequest;
    }

    @JsonIgnore
    public String workspaceId() {
        return workspaceId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public CreateDestinationDefinitionRequest withCreateDefinitionRequest(CreateDefinitionRequest createDefinitionRequest) {
        Utils.checkNotNull(createDefinitionRequest, "createDefinitionRequest");
        this.createDefinitionRequest = createDefinitionRequest;
        return this;
    }

    public CreateDestinationDefinitionRequest withWorkspaceId(String workspaceId) {
        Utils.checkNotNull(workspaceId, "workspaceId");
        this.workspaceId = workspaceId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateDestinationDefinitionRequest other = (CreateDestinationDefinitionRequest) o;
        return 
            Objects.deepEquals(this.createDefinitionRequest, other.createDefinitionRequest) &&
            Objects.deepEquals(this.workspaceId, other.workspaceId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            createDefinitionRequest,
            workspaceId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateDestinationDefinitionRequest.class,
                "createDefinitionRequest", createDefinitionRequest,
                "workspaceId", workspaceId);
    }
    
    public final static class Builder {
 
        private CreateDefinitionRequest createDefinitionRequest;
 
        private String workspaceId;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder createDefinitionRequest(CreateDefinitionRequest createDefinitionRequest) {
            Utils.checkNotNull(createDefinitionRequest, "createDefinitionRequest");
            this.createDefinitionRequest = createDefinitionRequest;
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            Utils.checkNotNull(workspaceId, "workspaceId");
            this.workspaceId = workspaceId;
            return this;
        }
        
        public CreateDestinationDefinitionRequest build() {
            return new CreateDestinationDefinitionRequest(
                createDefinitionRequest,
                workspaceId);
        }
    }
}
