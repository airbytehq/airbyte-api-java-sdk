/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.operations;

import com.airbyte.api.utils.SpeakeasyMetadata;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class DeleteTagRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=tagId")
    private String tagId;

    @JsonCreator
    public DeleteTagRequest(
            String tagId) {
        Utils.checkNotNull(tagId, "tagId");
        this.tagId = tagId;
    }

    @JsonIgnore
    public String tagId() {
        return tagId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public DeleteTagRequest withTagId(String tagId) {
        Utils.checkNotNull(tagId, "tagId");
        this.tagId = tagId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteTagRequest other = (DeleteTagRequest) o;
        return 
            Objects.deepEquals(this.tagId, other.tagId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            tagId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeleteTagRequest.class,
                "tagId", tagId);
    }
    
    public final static class Builder {
 
        private String tagId;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder tagId(String tagId) {
            Utils.checkNotNull(tagId, "tagId");
            this.tagId = tagId;
            return this;
        }
        
        public DeleteTagRequest build() {
            return new DeleteTagRequest(
                tagId);
        }
    }
}
