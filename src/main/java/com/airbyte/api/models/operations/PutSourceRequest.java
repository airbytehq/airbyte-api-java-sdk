/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.operations;

import com.airbyte.api.utils.SpeakeasyMetadata;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class PutSourceRequest {

    @SpeakeasyMetadata("request:mediaType=application/json")
    private Optional<? extends com.airbyte.api.models.shared.SourcePutRequest> sourcePutRequest;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=sourceId")
    private String sourceId;

    public PutSourceRequest(
            Optional<? extends com.airbyte.api.models.shared.SourcePutRequest> sourcePutRequest,
            String sourceId) {
        Utils.checkNotNull(sourcePutRequest, "sourcePutRequest");
        Utils.checkNotNull(sourceId, "sourceId");
        this.sourcePutRequest = sourcePutRequest;
        this.sourceId = sourceId;
    }

    public Optional<? extends com.airbyte.api.models.shared.SourcePutRequest> sourcePutRequest() {
        return sourcePutRequest;
    }

    public String sourceId() {
        return sourceId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PutSourceRequest withSourcePutRequest(com.airbyte.api.models.shared.SourcePutRequest sourcePutRequest) {
        Utils.checkNotNull(sourcePutRequest, "sourcePutRequest");
        this.sourcePutRequest = Optional.ofNullable(sourcePutRequest);
        return this;
    }

    public PutSourceRequest withSourcePutRequest(Optional<? extends com.airbyte.api.models.shared.SourcePutRequest> sourcePutRequest) {
        Utils.checkNotNull(sourcePutRequest, "sourcePutRequest");
        this.sourcePutRequest = sourcePutRequest;
        return this;
    }

    public PutSourceRequest withSourceId(String sourceId) {
        Utils.checkNotNull(sourceId, "sourceId");
        this.sourceId = sourceId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PutSourceRequest other = (PutSourceRequest) o;
        return 
            java.util.Objects.deepEquals(this.sourcePutRequest, other.sourcePutRequest) &&
            java.util.Objects.deepEquals(this.sourceId, other.sourceId);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            sourcePutRequest,
            sourceId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PutSourceRequest.class,
                "sourcePutRequest", sourcePutRequest,
                "sourceId", sourceId);
    }
    
    public final static class Builder {
 
        private Optional<? extends com.airbyte.api.models.shared.SourcePutRequest> sourcePutRequest = Optional.empty();
 
        private String sourceId;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder sourcePutRequest(com.airbyte.api.models.shared.SourcePutRequest sourcePutRequest) {
            Utils.checkNotNull(sourcePutRequest, "sourcePutRequest");
            this.sourcePutRequest = Optional.ofNullable(sourcePutRequest);
            return this;
        }

        public Builder sourcePutRequest(Optional<? extends com.airbyte.api.models.shared.SourcePutRequest> sourcePutRequest) {
            Utils.checkNotNull(sourcePutRequest, "sourcePutRequest");
            this.sourcePutRequest = sourcePutRequest;
            return this;
        }

        public Builder sourceId(String sourceId) {
            Utils.checkNotNull(sourceId, "sourceId");
            this.sourceId = sourceId;
            return this;
        }
        
        public PutSourceRequest build() {
            return new PutSourceRequest(
                sourcePutRequest,
                sourceId);
        }
    }
}

