/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class StreamNameOverrides {

    /**
     * The name you want this stream to appear as in Airbyte and your destination.
     */
    @JsonProperty("custom_stream_name")
    private String customStreamName;

    /**
     * The exact name of the sheet/tab in your Google Spreadsheet.
     */
    @JsonProperty("source_stream_name")
    private String sourceStreamName;

    @JsonCreator
    public StreamNameOverrides(
            @JsonProperty("custom_stream_name") String customStreamName,
            @JsonProperty("source_stream_name") String sourceStreamName) {
        Utils.checkNotNull(customStreamName, "customStreamName");
        Utils.checkNotNull(sourceStreamName, "sourceStreamName");
        this.customStreamName = customStreamName;
        this.sourceStreamName = sourceStreamName;
    }

    /**
     * The name you want this stream to appear as in Airbyte and your destination.
     */
    @JsonIgnore
    public String customStreamName() {
        return customStreamName;
    }

    /**
     * The exact name of the sheet/tab in your Google Spreadsheet.
     */
    @JsonIgnore
    public String sourceStreamName() {
        return sourceStreamName;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The name you want this stream to appear as in Airbyte and your destination.
     */
    public StreamNameOverrides withCustomStreamName(String customStreamName) {
        Utils.checkNotNull(customStreamName, "customStreamName");
        this.customStreamName = customStreamName;
        return this;
    }

    /**
     * The exact name of the sheet/tab in your Google Spreadsheet.
     */
    public StreamNameOverrides withSourceStreamName(String sourceStreamName) {
        Utils.checkNotNull(sourceStreamName, "sourceStreamName");
        this.sourceStreamName = sourceStreamName;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        StreamNameOverrides other = (StreamNameOverrides) o;
        return 
            Objects.deepEquals(this.customStreamName, other.customStreamName) &&
            Objects.deepEquals(this.sourceStreamName, other.sourceStreamName);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            customStreamName,
            sourceStreamName);
    }
    
    @Override
    public String toString() {
        return Utils.toString(StreamNameOverrides.class,
                "customStreamName", customStreamName,
                "sourceStreamName", sourceStreamName);
    }
    
    public final static class Builder {
 
        private String customStreamName;
 
        private String sourceStreamName;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The name you want this stream to appear as in Airbyte and your destination.
         */
        public Builder customStreamName(String customStreamName) {
            Utils.checkNotNull(customStreamName, "customStreamName");
            this.customStreamName = customStreamName;
            return this;
        }

        /**
         * The exact name of the sheet/tab in your Google Spreadsheet.
         */
        public Builder sourceStreamName(String sourceStreamName) {
            Utils.checkNotNull(sourceStreamName, "sourceStreamName");
            this.sourceStreamName = sourceStreamName;
            return this;
        }
        
        public StreamNameOverrides build() {
            return new StreamNameOverrides(
                customStreamName,
                sourceStreamName);
        }
    }
}
