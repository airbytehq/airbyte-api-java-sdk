/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;
/**
 * ServiceAccountKey - For these scenario user should obtain service account's credentials from the Google API Console and provide delegated email.
 */

public class ServiceAccountKey {

    /**
     * The contents of the JSON service account key. See the &lt;a href="https://developers.google.com/admin-sdk/directory/v1/guides/delegation"&gt;docs&lt;/a&gt; for more information on how to generate this key.
     */
    @JsonProperty("credentials_json")
    private String credentialsJson;

    /**
     * Authentication Scenario
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentials_title")
    private Optional<? extends SourceGoogleDirectorySchemasCredentialsTitle> credentialsTitle;

    /**
     * The email of the user, which has permissions to access the Google Workspace Admin APIs.
     */
    @JsonProperty("email")
    private String email;

    @JsonCreator
    public ServiceAccountKey(
            @JsonProperty("credentials_json") String credentialsJson,
            @JsonProperty("email") String email) {
        Utils.checkNotNull(credentialsJson, "credentialsJson");
        Utils.checkNotNull(email, "email");
        this.credentialsJson = credentialsJson;
        this.credentialsTitle = Builder._SINGLETON_VALUE_CredentialsTitle.value();
        this.email = email;
    }

    /**
     * The contents of the JSON service account key. See the &lt;a href="https://developers.google.com/admin-sdk/directory/v1/guides/delegation"&gt;docs&lt;/a&gt; for more information on how to generate this key.
     */
    @JsonIgnore
    public String credentialsJson() {
        return credentialsJson;
    }

    /**
     * Authentication Scenario
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<SourceGoogleDirectorySchemasCredentialsTitle> credentialsTitle() {
        return (Optional<SourceGoogleDirectorySchemasCredentialsTitle>) credentialsTitle;
    }

    /**
     * The email of the user, which has permissions to access the Google Workspace Admin APIs.
     */
    @JsonIgnore
    public String email() {
        return email;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The contents of the JSON service account key. See the &lt;a href="https://developers.google.com/admin-sdk/directory/v1/guides/delegation"&gt;docs&lt;/a&gt; for more information on how to generate this key.
     */
    public ServiceAccountKey withCredentialsJson(String credentialsJson) {
        Utils.checkNotNull(credentialsJson, "credentialsJson");
        this.credentialsJson = credentialsJson;
        return this;
    }

    /**
     * The email of the user, which has permissions to access the Google Workspace Admin APIs.
     */
    public ServiceAccountKey withEmail(String email) {
        Utils.checkNotNull(email, "email");
        this.email = email;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ServiceAccountKey other = (ServiceAccountKey) o;
        return 
            java.util.Objects.deepEquals(this.credentialsJson, other.credentialsJson) &&
            java.util.Objects.deepEquals(this.credentialsTitle, other.credentialsTitle) &&
            java.util.Objects.deepEquals(this.email, other.email);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            credentialsJson,
            credentialsTitle,
            email);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ServiceAccountKey.class,
                "credentialsJson", credentialsJson,
                "credentialsTitle", credentialsTitle,
                "email", email);
    }
    
    public final static class Builder {
 
        private String credentialsJson;
 
        private String email;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The contents of the JSON service account key. See the &lt;a href="https://developers.google.com/admin-sdk/directory/v1/guides/delegation"&gt;docs&lt;/a&gt; for more information on how to generate this key.
         */
        public Builder credentialsJson(String credentialsJson) {
            Utils.checkNotNull(credentialsJson, "credentialsJson");
            this.credentialsJson = credentialsJson;
            return this;
        }

        /**
         * The email of the user, which has permissions to access the Google Workspace Admin APIs.
         */
        public Builder email(String email) {
            Utils.checkNotNull(email, "email");
            this.email = email;
            return this;
        }
        
        public ServiceAccountKey build() {
            return new ServiceAccountKey(
                credentialsJson,
                email);
        }

        private static final LazySingletonValue<Optional<? extends SourceGoogleDirectorySchemasCredentialsTitle>> _SINGLETON_VALUE_CredentialsTitle =
                new LazySingletonValue<>(
                        "credentials_title",
                        "\"Service accounts\"",
                        new TypeReference<Optional<? extends SourceGoogleDirectorySchemasCredentialsTitle>>() {});
    }
}

