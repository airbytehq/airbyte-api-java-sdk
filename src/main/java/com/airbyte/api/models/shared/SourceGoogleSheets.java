/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class SourceGoogleSheets {

    /**
     * Credentials for connecting to the Google Sheets API
     */
    @JsonProperty("credentials")
    private SourceGoogleSheetsAuthentication credentials;

    /**
     * Enables the conversion of column names to a standardized, SQL-compliant format. For example, 'My Name' -&gt; 'my_name'. Enable this option if your destination is SQL-based.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("names_conversion")
    private Optional<? extends Boolean> namesConversion;

    @JsonProperty("sourceType")
    private SourceGoogleSheetsGoogleSheets sourceType;

    /**
     * Enter the link to the Google spreadsheet you want to sync. To copy the link, click the 'Share' button in the top-right corner of the spreadsheet, then click 'Copy link'.
     */
    @JsonProperty("spreadsheet_id")
    private String spreadsheetId;

    public SourceGoogleSheets(
            @JsonProperty("credentials") SourceGoogleSheetsAuthentication credentials,
            @JsonProperty("names_conversion") Optional<? extends Boolean> namesConversion,
            @JsonProperty("spreadsheet_id") String spreadsheetId) {
        Utils.checkNotNull(credentials, "credentials");
        Utils.checkNotNull(namesConversion, "namesConversion");
        Utils.checkNotNull(spreadsheetId, "spreadsheetId");
        this.credentials = credentials;
        this.namesConversion = namesConversion;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
        this.spreadsheetId = spreadsheetId;
    }

    /**
     * Credentials for connecting to the Google Sheets API
     */
    public SourceGoogleSheetsAuthentication credentials() {
        return credentials;
    }

    /**
     * Enables the conversion of column names to a standardized, SQL-compliant format. For example, 'My Name' -&gt; 'my_name'. Enable this option if your destination is SQL-based.
     */
    public Optional<? extends Boolean> namesConversion() {
        return namesConversion;
    }

    public SourceGoogleSheetsGoogleSheets sourceType() {
        return sourceType;
    }

    /**
     * Enter the link to the Google spreadsheet you want to sync. To copy the link, click the 'Share' button in the top-right corner of the spreadsheet, then click 'Copy link'.
     */
    public String spreadsheetId() {
        return spreadsheetId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Credentials for connecting to the Google Sheets API
     */
    public SourceGoogleSheets withCredentials(SourceGoogleSheetsAuthentication credentials) {
        Utils.checkNotNull(credentials, "credentials");
        this.credentials = credentials;
        return this;
    }

    /**
     * Enables the conversion of column names to a standardized, SQL-compliant format. For example, 'My Name' -&gt; 'my_name'. Enable this option if your destination is SQL-based.
     */
    public SourceGoogleSheets withNamesConversion(boolean namesConversion) {
        Utils.checkNotNull(namesConversion, "namesConversion");
        this.namesConversion = Optional.ofNullable(namesConversion);
        return this;
    }

    /**
     * Enables the conversion of column names to a standardized, SQL-compliant format. For example, 'My Name' -&gt; 'my_name'. Enable this option if your destination is SQL-based.
     */
    public SourceGoogleSheets withNamesConversion(Optional<? extends Boolean> namesConversion) {
        Utils.checkNotNull(namesConversion, "namesConversion");
        this.namesConversion = namesConversion;
        return this;
    }

    /**
     * Enter the link to the Google spreadsheet you want to sync. To copy the link, click the 'Share' button in the top-right corner of the spreadsheet, then click 'Copy link'.
     */
    public SourceGoogleSheets withSpreadsheetId(String spreadsheetId) {
        Utils.checkNotNull(spreadsheetId, "spreadsheetId");
        this.spreadsheetId = spreadsheetId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceGoogleSheets other = (SourceGoogleSheets) o;
        return 
            java.util.Objects.deepEquals(this.credentials, other.credentials) &&
            java.util.Objects.deepEquals(this.namesConversion, other.namesConversion) &&
            java.util.Objects.deepEquals(this.sourceType, other.sourceType) &&
            java.util.Objects.deepEquals(this.spreadsheetId, other.spreadsheetId);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            credentials,
            namesConversion,
            sourceType,
            spreadsheetId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceGoogleSheets.class,
                "credentials", credentials,
                "namesConversion", namesConversion,
                "sourceType", sourceType,
                "spreadsheetId", spreadsheetId);
    }
    
    public final static class Builder {
 
        private SourceGoogleSheetsAuthentication credentials;
 
        private Optional<? extends Boolean> namesConversion;
 
        private String spreadsheetId;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Credentials for connecting to the Google Sheets API
         */
        public Builder credentials(SourceGoogleSheetsAuthentication credentials) {
            Utils.checkNotNull(credentials, "credentials");
            this.credentials = credentials;
            return this;
        }

        /**
         * Enables the conversion of column names to a standardized, SQL-compliant format. For example, 'My Name' -&gt; 'my_name'. Enable this option if your destination is SQL-based.
         */
        public Builder namesConversion(boolean namesConversion) {
            Utils.checkNotNull(namesConversion, "namesConversion");
            this.namesConversion = Optional.ofNullable(namesConversion);
            return this;
        }

        /**
         * Enables the conversion of column names to a standardized, SQL-compliant format. For example, 'My Name' -&gt; 'my_name'. Enable this option if your destination is SQL-based.
         */
        public Builder namesConversion(Optional<? extends Boolean> namesConversion) {
            Utils.checkNotNull(namesConversion, "namesConversion");
            this.namesConversion = namesConversion;
            return this;
        }

        /**
         * Enter the link to the Google spreadsheet you want to sync. To copy the link, click the 'Share' button in the top-right corner of the spreadsheet, then click 'Copy link'.
         */
        public Builder spreadsheetId(String spreadsheetId) {
            Utils.checkNotNull(spreadsheetId, "spreadsheetId");
            this.spreadsheetId = spreadsheetId;
            return this;
        }
        
        public SourceGoogleSheets build() {
            if (namesConversion == null) {
                namesConversion = _SINGLETON_VALUE_NamesConversion.value();
            }
            return new SourceGoogleSheets(
                credentials,
                namesConversion,
                spreadsheetId);
        }

        private static final LazySingletonValue<Optional<? extends Boolean>> _SINGLETON_VALUE_NamesConversion =
                new LazySingletonValue<>(
                        "names_conversion",
                        "false",
                        new TypeReference<Optional<? extends Boolean>>() {});

        private static final LazySingletonValue<SourceGoogleSheetsGoogleSheets> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"google-sheets\"",
                        new TypeReference<SourceGoogleSheetsGoogleSheets>() {});
    }
}

