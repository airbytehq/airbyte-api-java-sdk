/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.OffsetDateTime;
import java.util.Optional;


public class SourceSendgrid {

    /**
     * API Key, use &lt;a href="https://app.sendgrid.com/settings/api_keys/"&gt;admin&lt;/a&gt; to generate this key.
     */
    @JsonProperty("apikey")
    private String apikey;

    @JsonProperty("sourceType")
    private Sendgrid sourceType;

    /**
     * Start time in ISO8601 format. Any data before this time point will not be replicated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_time")
    private Optional<? extends OffsetDateTime> startTime;

    public SourceSendgrid(
            @JsonProperty("apikey") String apikey,
            @JsonProperty("start_time") Optional<? extends OffsetDateTime> startTime) {
        Utils.checkNotNull(apikey, "apikey");
        Utils.checkNotNull(startTime, "startTime");
        this.apikey = apikey;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
        this.startTime = startTime;
    }

    /**
     * API Key, use &lt;a href="https://app.sendgrid.com/settings/api_keys/"&gt;admin&lt;/a&gt; to generate this key.
     */
    public String apikey() {
        return apikey;
    }

    public Sendgrid sourceType() {
        return sourceType;
    }

    /**
     * Start time in ISO8601 format. Any data before this time point will not be replicated.
     */
    public Optional<? extends OffsetDateTime> startTime() {
        return startTime;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * API Key, use &lt;a href="https://app.sendgrid.com/settings/api_keys/"&gt;admin&lt;/a&gt; to generate this key.
     */
    public SourceSendgrid withApikey(String apikey) {
        Utils.checkNotNull(apikey, "apikey");
        this.apikey = apikey;
        return this;
    }

    /**
     * Start time in ISO8601 format. Any data before this time point will not be replicated.
     */
    public SourceSendgrid withStartTime(OffsetDateTime startTime) {
        Utils.checkNotNull(startTime, "startTime");
        this.startTime = Optional.ofNullable(startTime);
        return this;
    }

    /**
     * Start time in ISO8601 format. Any data before this time point will not be replicated.
     */
    public SourceSendgrid withStartTime(Optional<? extends OffsetDateTime> startTime) {
        Utils.checkNotNull(startTime, "startTime");
        this.startTime = startTime;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceSendgrid other = (SourceSendgrid) o;
        return 
            java.util.Objects.deepEquals(this.apikey, other.apikey) &&
            java.util.Objects.deepEquals(this.sourceType, other.sourceType) &&
            java.util.Objects.deepEquals(this.startTime, other.startTime);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            apikey,
            sourceType,
            startTime);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceSendgrid.class,
                "apikey", apikey,
                "sourceType", sourceType,
                "startTime", startTime);
    }
    
    public final static class Builder {
 
        private String apikey;
 
        private Optional<? extends OffsetDateTime> startTime = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * API Key, use &lt;a href="https://app.sendgrid.com/settings/api_keys/"&gt;admin&lt;/a&gt; to generate this key.
         */
        public Builder apikey(String apikey) {
            Utils.checkNotNull(apikey, "apikey");
            this.apikey = apikey;
            return this;
        }

        /**
         * Start time in ISO8601 format. Any data before this time point will not be replicated.
         */
        public Builder startTime(OffsetDateTime startTime) {
            Utils.checkNotNull(startTime, "startTime");
            this.startTime = Optional.ofNullable(startTime);
            return this;
        }

        /**
         * Start time in ISO8601 format. Any data before this time point will not be replicated.
         */
        public Builder startTime(Optional<? extends OffsetDateTime> startTime) {
            Utils.checkNotNull(startTime, "startTime");
            this.startTime = startTime;
            return this;
        }
        
        public SourceSendgrid build() {
            return new SourceSendgrid(
                apikey,
                startTime);
        }

        private static final LazySingletonValue<Sendgrid> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"sendgrid\"",
                        new TypeReference<Sendgrid>() {});
    }
}

