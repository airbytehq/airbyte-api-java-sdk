/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;


import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;


public class SourceTvmazeSchedule {

    /**
     * Country code for domestic TV schedule retrieval.
     */
    @JsonProperty("domestic_schedule_country_code")
    private String domesticScheduleCountryCode;

    /**
     * End date for TV schedule retrieval. May be in the future. Optional.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end_date")
    private Optional<String> endDate;

    @JsonProperty("sourceType")
    private TvmazeSchedule sourceType;

    /**
     * Start date for TV schedule retrieval. May be in the future.
     */
    @JsonProperty("start_date")
    private String startDate;

    /**
     * ISO 3166-1 country code for web TV schedule retrieval. Leave blank for
     * all countries plus global web channels (e.g. Netflix). Alternatively,
     * set to 'global' for just global web channels.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("web_schedule_country_code")
    private Optional<String> webScheduleCountryCode;

    @JsonCreator
    public SourceTvmazeSchedule(
            @JsonProperty("domestic_schedule_country_code") String domesticScheduleCountryCode,
            @JsonProperty("end_date") Optional<String> endDate,
            @JsonProperty("start_date") String startDate,
            @JsonProperty("web_schedule_country_code") Optional<String> webScheduleCountryCode) {
        Utils.checkNotNull(domesticScheduleCountryCode, "domesticScheduleCountryCode");
        Utils.checkNotNull(endDate, "endDate");
        Utils.checkNotNull(startDate, "startDate");
        Utils.checkNotNull(webScheduleCountryCode, "webScheduleCountryCode");
        this.domesticScheduleCountryCode = domesticScheduleCountryCode;
        this.endDate = endDate;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
        this.startDate = startDate;
        this.webScheduleCountryCode = webScheduleCountryCode;
    }
    
    public SourceTvmazeSchedule(
            String domesticScheduleCountryCode,
            String startDate) {
        this(domesticScheduleCountryCode, Optional.empty(), startDate, Optional.empty());
    }

    /**
     * Country code for domestic TV schedule retrieval.
     */
    @JsonIgnore
    public String domesticScheduleCountryCode() {
        return domesticScheduleCountryCode;
    }

    /**
     * End date for TV schedule retrieval. May be in the future. Optional.
     * 
     */
    @JsonIgnore
    public Optional<String> endDate() {
        return endDate;
    }

    @JsonIgnore
    public TvmazeSchedule sourceType() {
        return sourceType;
    }

    /**
     * Start date for TV schedule retrieval. May be in the future.
     */
    @JsonIgnore
    public String startDate() {
        return startDate;
    }

    /**
     * ISO 3166-1 country code for web TV schedule retrieval. Leave blank for
     * all countries plus global web channels (e.g. Netflix). Alternatively,
     * set to 'global' for just global web channels.
     * 
     */
    @JsonIgnore
    public Optional<String> webScheduleCountryCode() {
        return webScheduleCountryCode;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Country code for domestic TV schedule retrieval.
     */
    public SourceTvmazeSchedule withDomesticScheduleCountryCode(String domesticScheduleCountryCode) {
        Utils.checkNotNull(domesticScheduleCountryCode, "domesticScheduleCountryCode");
        this.domesticScheduleCountryCode = domesticScheduleCountryCode;
        return this;
    }

    /**
     * End date for TV schedule retrieval. May be in the future. Optional.
     * 
     */
    public SourceTvmazeSchedule withEndDate(String endDate) {
        Utils.checkNotNull(endDate, "endDate");
        this.endDate = Optional.ofNullable(endDate);
        return this;
    }

    /**
     * End date for TV schedule retrieval. May be in the future. Optional.
     * 
     */
    public SourceTvmazeSchedule withEndDate(Optional<String> endDate) {
        Utils.checkNotNull(endDate, "endDate");
        this.endDate = endDate;
        return this;
    }

    /**
     * Start date for TV schedule retrieval. May be in the future.
     */
    public SourceTvmazeSchedule withStartDate(String startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = startDate;
        return this;
    }

    /**
     * ISO 3166-1 country code for web TV schedule retrieval. Leave blank for
     * all countries plus global web channels (e.g. Netflix). Alternatively,
     * set to 'global' for just global web channels.
     * 
     */
    public SourceTvmazeSchedule withWebScheduleCountryCode(String webScheduleCountryCode) {
        Utils.checkNotNull(webScheduleCountryCode, "webScheduleCountryCode");
        this.webScheduleCountryCode = Optional.ofNullable(webScheduleCountryCode);
        return this;
    }

    /**
     * ISO 3166-1 country code for web TV schedule retrieval. Leave blank for
     * all countries plus global web channels (e.g. Netflix). Alternatively,
     * set to 'global' for just global web channels.
     * 
     */
    public SourceTvmazeSchedule withWebScheduleCountryCode(Optional<String> webScheduleCountryCode) {
        Utils.checkNotNull(webScheduleCountryCode, "webScheduleCountryCode");
        this.webScheduleCountryCode = webScheduleCountryCode;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceTvmazeSchedule other = (SourceTvmazeSchedule) o;
        return 
            Objects.deepEquals(this.domesticScheduleCountryCode, other.domesticScheduleCountryCode) &&
            Objects.deepEquals(this.endDate, other.endDate) &&
            Objects.deepEquals(this.sourceType, other.sourceType) &&
            Objects.deepEquals(this.startDate, other.startDate) &&
            Objects.deepEquals(this.webScheduleCountryCode, other.webScheduleCountryCode);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            domesticScheduleCountryCode,
            endDate,
            sourceType,
            startDate,
            webScheduleCountryCode);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceTvmazeSchedule.class,
                "domesticScheduleCountryCode", domesticScheduleCountryCode,
                "endDate", endDate,
                "sourceType", sourceType,
                "startDate", startDate,
                "webScheduleCountryCode", webScheduleCountryCode);
    }
    
    public final static class Builder {
 
        private String domesticScheduleCountryCode;
 
        private Optional<String> endDate = Optional.empty();
 
        private String startDate;
 
        private Optional<String> webScheduleCountryCode = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Country code for domestic TV schedule retrieval.
         */
        public Builder domesticScheduleCountryCode(String domesticScheduleCountryCode) {
            Utils.checkNotNull(domesticScheduleCountryCode, "domesticScheduleCountryCode");
            this.domesticScheduleCountryCode = domesticScheduleCountryCode;
            return this;
        }

        /**
         * End date for TV schedule retrieval. May be in the future. Optional.
         * 
         */
        public Builder endDate(String endDate) {
            Utils.checkNotNull(endDate, "endDate");
            this.endDate = Optional.ofNullable(endDate);
            return this;
        }

        /**
         * End date for TV schedule retrieval. May be in the future. Optional.
         * 
         */
        public Builder endDate(Optional<String> endDate) {
            Utils.checkNotNull(endDate, "endDate");
            this.endDate = endDate;
            return this;
        }

        /**
         * Start date for TV schedule retrieval. May be in the future.
         */
        public Builder startDate(String startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = startDate;
            return this;
        }

        /**
         * ISO 3166-1 country code for web TV schedule retrieval. Leave blank for
         * all countries plus global web channels (e.g. Netflix). Alternatively,
         * set to 'global' for just global web channels.
         * 
         */
        public Builder webScheduleCountryCode(String webScheduleCountryCode) {
            Utils.checkNotNull(webScheduleCountryCode, "webScheduleCountryCode");
            this.webScheduleCountryCode = Optional.ofNullable(webScheduleCountryCode);
            return this;
        }

        /**
         * ISO 3166-1 country code for web TV schedule retrieval. Leave blank for
         * all countries plus global web channels (e.g. Netflix). Alternatively,
         * set to 'global' for just global web channels.
         * 
         */
        public Builder webScheduleCountryCode(Optional<String> webScheduleCountryCode) {
            Utils.checkNotNull(webScheduleCountryCode, "webScheduleCountryCode");
            this.webScheduleCountryCode = webScheduleCountryCode;
            return this;
        }
        
        public SourceTvmazeSchedule build() {
            return new SourceTvmazeSchedule(
                domesticScheduleCountryCode,
                endDate,
                startDate,
                webScheduleCountryCode);
        }

        private static final LazySingletonValue<TvmazeSchedule> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"tvmaze-schedule\"",
                        new TypeReference<TvmazeSchedule>() {});
    }
}

