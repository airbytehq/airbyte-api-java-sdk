/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;


import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;


public class SourceUsCensus {

    /**
     * Your API Key. Get your key &lt;a href="https://api.census.gov/data/key_signup.html"&gt;here&lt;/a&gt;.
     */
    @JsonProperty("api_key")
    private String apiKey;

    /**
     * The query parameters portion of the GET request, without the api key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query_params")
    private Optional<String> queryParams;

    /**
     * The path portion of the GET request
     */
    @JsonProperty("query_path")
    private String queryPath;

    @JsonProperty("sourceType")
    private UsCensus sourceType;

    @JsonCreator
    public SourceUsCensus(
            @JsonProperty("api_key") String apiKey,
            @JsonProperty("query_params") Optional<String> queryParams,
            @JsonProperty("query_path") String queryPath) {
        Utils.checkNotNull(apiKey, "apiKey");
        Utils.checkNotNull(queryParams, "queryParams");
        Utils.checkNotNull(queryPath, "queryPath");
        this.apiKey = apiKey;
        this.queryParams = queryParams;
        this.queryPath = queryPath;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
    }
    
    public SourceUsCensus(
            String apiKey,
            String queryPath) {
        this(apiKey, Optional.empty(), queryPath);
    }

    /**
     * Your API Key. Get your key &lt;a href="https://api.census.gov/data/key_signup.html"&gt;here&lt;/a&gt;.
     */
    @JsonIgnore
    public String apiKey() {
        return apiKey;
    }

    /**
     * The query parameters portion of the GET request, without the api key
     */
    @JsonIgnore
    public Optional<String> queryParams() {
        return queryParams;
    }

    /**
     * The path portion of the GET request
     */
    @JsonIgnore
    public String queryPath() {
        return queryPath;
    }

    @JsonIgnore
    public UsCensus sourceType() {
        return sourceType;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Your API Key. Get your key &lt;a href="https://api.census.gov/data/key_signup.html"&gt;here&lt;/a&gt;.
     */
    public SourceUsCensus withApiKey(String apiKey) {
        Utils.checkNotNull(apiKey, "apiKey");
        this.apiKey = apiKey;
        return this;
    }

    /**
     * The query parameters portion of the GET request, without the api key
     */
    public SourceUsCensus withQueryParams(String queryParams) {
        Utils.checkNotNull(queryParams, "queryParams");
        this.queryParams = Optional.ofNullable(queryParams);
        return this;
    }

    /**
     * The query parameters portion of the GET request, without the api key
     */
    public SourceUsCensus withQueryParams(Optional<String> queryParams) {
        Utils.checkNotNull(queryParams, "queryParams");
        this.queryParams = queryParams;
        return this;
    }

    /**
     * The path portion of the GET request
     */
    public SourceUsCensus withQueryPath(String queryPath) {
        Utils.checkNotNull(queryPath, "queryPath");
        this.queryPath = queryPath;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceUsCensus other = (SourceUsCensus) o;
        return 
            Objects.deepEquals(this.apiKey, other.apiKey) &&
            Objects.deepEquals(this.queryParams, other.queryParams) &&
            Objects.deepEquals(this.queryPath, other.queryPath) &&
            Objects.deepEquals(this.sourceType, other.sourceType);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            apiKey,
            queryParams,
            queryPath,
            sourceType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceUsCensus.class,
                "apiKey", apiKey,
                "queryParams", queryParams,
                "queryPath", queryPath,
                "sourceType", sourceType);
    }
    
    public final static class Builder {
 
        private String apiKey;
 
        private Optional<String> queryParams = Optional.empty();
 
        private String queryPath;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Your API Key. Get your key &lt;a href="https://api.census.gov/data/key_signup.html"&gt;here&lt;/a&gt;.
         */
        public Builder apiKey(String apiKey) {
            Utils.checkNotNull(apiKey, "apiKey");
            this.apiKey = apiKey;
            return this;
        }

        /**
         * The query parameters portion of the GET request, without the api key
         */
        public Builder queryParams(String queryParams) {
            Utils.checkNotNull(queryParams, "queryParams");
            this.queryParams = Optional.ofNullable(queryParams);
            return this;
        }

        /**
         * The query parameters portion of the GET request, without the api key
         */
        public Builder queryParams(Optional<String> queryParams) {
            Utils.checkNotNull(queryParams, "queryParams");
            this.queryParams = queryParams;
            return this;
        }

        /**
         * The path portion of the GET request
         */
        public Builder queryPath(String queryPath) {
            Utils.checkNotNull(queryPath, "queryPath");
            this.queryPath = queryPath;
            return this;
        }
        
        public SourceUsCensus build() {
            return new SourceUsCensus(
                apiKey,
                queryParams,
                queryPath);
        }

        private static final LazySingletonValue<UsCensus> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"us-census\"",
                        new TypeReference<UsCensus>() {});
    }
}

