/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public class SourceAppsflyer {

    /**
     * Pull API token for authentication. If you change the account admin, the token changes, and you must update scripts with the new token. &lt;a href="https://support.appsflyer.com/hc/en-us/articles/360004562377"&gt;Get the API token in the Dashboard&lt;/a&gt;.
     */
    @JsonProperty("api_token")
    private String apiToken;

    /**
     * App identifier as found in AppsFlyer.
     */
    @JsonProperty("app_id")
    private String appId;

    @JsonProperty("sourceType")
    private Appsflyer sourceType;

    /**
     * The default value to use if no bookmark exists for an endpoint. Raw Reports historical lookback is limited to 90 days.
     */
    @JsonProperty("start_date")
    private String startDate;

    /**
     * Time zone in which date times are stored. The project timezone may be found in the App settings in the AppsFlyer console.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timezone")
    private Optional<String> timezone;

    @JsonCreator
    public SourceAppsflyer(
            @JsonProperty("api_token") String apiToken,
            @JsonProperty("app_id") String appId,
            @JsonProperty("start_date") String startDate,
            @JsonProperty("timezone") Optional<String> timezone) {
        Utils.checkNotNull(apiToken, "apiToken");
        Utils.checkNotNull(appId, "appId");
        Utils.checkNotNull(startDate, "startDate");
        Utils.checkNotNull(timezone, "timezone");
        this.apiToken = apiToken;
        this.appId = appId;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
        this.startDate = startDate;
        this.timezone = timezone;
    }
    
    public SourceAppsflyer(
            String apiToken,
            String appId,
            String startDate) {
        this(apiToken, appId, startDate, Optional.empty());
    }

    /**
     * Pull API token for authentication. If you change the account admin, the token changes, and you must update scripts with the new token. &lt;a href="https://support.appsflyer.com/hc/en-us/articles/360004562377"&gt;Get the API token in the Dashboard&lt;/a&gt;.
     */
    @JsonIgnore
    public String apiToken() {
        return apiToken;
    }

    /**
     * App identifier as found in AppsFlyer.
     */
    @JsonIgnore
    public String appId() {
        return appId;
    }

    @JsonIgnore
    public Appsflyer sourceType() {
        return sourceType;
    }

    /**
     * The default value to use if no bookmark exists for an endpoint. Raw Reports historical lookback is limited to 90 days.
     */
    @JsonIgnore
    public String startDate() {
        return startDate;
    }

    /**
     * Time zone in which date times are stored. The project timezone may be found in the App settings in the AppsFlyer console.
     */
    @JsonIgnore
    public Optional<String> timezone() {
        return timezone;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Pull API token for authentication. If you change the account admin, the token changes, and you must update scripts with the new token. &lt;a href="https://support.appsflyer.com/hc/en-us/articles/360004562377"&gt;Get the API token in the Dashboard&lt;/a&gt;.
     */
    public SourceAppsflyer withApiToken(String apiToken) {
        Utils.checkNotNull(apiToken, "apiToken");
        this.apiToken = apiToken;
        return this;
    }

    /**
     * App identifier as found in AppsFlyer.
     */
    public SourceAppsflyer withAppId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }

    /**
     * The default value to use if no bookmark exists for an endpoint. Raw Reports historical lookback is limited to 90 days.
     */
    public SourceAppsflyer withStartDate(String startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = startDate;
        return this;
    }

    /**
     * Time zone in which date times are stored. The project timezone may be found in the App settings in the AppsFlyer console.
     */
    public SourceAppsflyer withTimezone(String timezone) {
        Utils.checkNotNull(timezone, "timezone");
        this.timezone = Optional.ofNullable(timezone);
        return this;
    }

    /**
     * Time zone in which date times are stored. The project timezone may be found in the App settings in the AppsFlyer console.
     */
    public SourceAppsflyer withTimezone(Optional<String> timezone) {
        Utils.checkNotNull(timezone, "timezone");
        this.timezone = timezone;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceAppsflyer other = (SourceAppsflyer) o;
        return 
            Objects.deepEquals(this.apiToken, other.apiToken) &&
            Objects.deepEquals(this.appId, other.appId) &&
            Objects.deepEquals(this.sourceType, other.sourceType) &&
            Objects.deepEquals(this.startDate, other.startDate) &&
            Objects.deepEquals(this.timezone, other.timezone);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            apiToken,
            appId,
            sourceType,
            startDate,
            timezone);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceAppsflyer.class,
                "apiToken", apiToken,
                "appId", appId,
                "sourceType", sourceType,
                "startDate", startDate,
                "timezone", timezone);
    }
    
    public final static class Builder {
 
        private String apiToken;
 
        private String appId;
 
        private String startDate;
 
        private Optional<String> timezone;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Pull API token for authentication. If you change the account admin, the token changes, and you must update scripts with the new token. &lt;a href="https://support.appsflyer.com/hc/en-us/articles/360004562377"&gt;Get the API token in the Dashboard&lt;/a&gt;.
         */
        public Builder apiToken(String apiToken) {
            Utils.checkNotNull(apiToken, "apiToken");
            this.apiToken = apiToken;
            return this;
        }

        /**
         * App identifier as found in AppsFlyer.
         */
        public Builder appId(String appId) {
            Utils.checkNotNull(appId, "appId");
            this.appId = appId;
            return this;
        }

        /**
         * The default value to use if no bookmark exists for an endpoint. Raw Reports historical lookback is limited to 90 days.
         */
        public Builder startDate(String startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = startDate;
            return this;
        }

        /**
         * Time zone in which date times are stored. The project timezone may be found in the App settings in the AppsFlyer console.
         */
        public Builder timezone(String timezone) {
            Utils.checkNotNull(timezone, "timezone");
            this.timezone = Optional.ofNullable(timezone);
            return this;
        }

        /**
         * Time zone in which date times are stored. The project timezone may be found in the App settings in the AppsFlyer console.
         */
        public Builder timezone(Optional<String> timezone) {
            Utils.checkNotNull(timezone, "timezone");
            this.timezone = timezone;
            return this;
        }
        
        public SourceAppsflyer build() {
            if (timezone == null) {
                timezone = _SINGLETON_VALUE_Timezone.value();
            }
            return new SourceAppsflyer(
                apiToken,
                appId,
                startDate,
                timezone);
        }

        private static final LazySingletonValue<Appsflyer> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"appsflyer\"",
                        new TypeReference<Appsflyer>() {});

        private static final LazySingletonValue<Optional<String>> _SINGLETON_VALUE_Timezone =
                new LazySingletonValue<>(
                        "timezone",
                        "\"UTC\"",
                        new TypeReference<Optional<String>>() {});
    }
}
