/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public class SourceImagga {

    /**
     * Your Imagga API key, available in your Imagga dashboard. Could be found at `https://imagga.com/profile/dashboard`
     */
    @JsonProperty("api_key")
    private String apiKey;

    /**
     * Your Imagga API secret, available in your Imagga dashboard. Could be found at `https://imagga.com/profile/dashboard`
     */
    @JsonProperty("api_secret")
    private String apiSecret;

    /**
     * An image for detection endpoints
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("img_for_detection")
    private Optional<String> imgForDetection;

    @JsonProperty("sourceType")
    private Imagga sourceType;

    @JsonCreator
    public SourceImagga(
            @JsonProperty("api_key") String apiKey,
            @JsonProperty("api_secret") String apiSecret,
            @JsonProperty("img_for_detection") Optional<String> imgForDetection) {
        Utils.checkNotNull(apiKey, "apiKey");
        Utils.checkNotNull(apiSecret, "apiSecret");
        Utils.checkNotNull(imgForDetection, "imgForDetection");
        this.apiKey = apiKey;
        this.apiSecret = apiSecret;
        this.imgForDetection = imgForDetection;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
    }
    
    public SourceImagga(
            String apiKey,
            String apiSecret) {
        this(apiKey, apiSecret, Optional.empty());
    }

    /**
     * Your Imagga API key, available in your Imagga dashboard. Could be found at `https://imagga.com/profile/dashboard`
     */
    @JsonIgnore
    public String apiKey() {
        return apiKey;
    }

    /**
     * Your Imagga API secret, available in your Imagga dashboard. Could be found at `https://imagga.com/profile/dashboard`
     */
    @JsonIgnore
    public String apiSecret() {
        return apiSecret;
    }

    /**
     * An image for detection endpoints
     */
    @JsonIgnore
    public Optional<String> imgForDetection() {
        return imgForDetection;
    }

    @JsonIgnore
    public Imagga sourceType() {
        return sourceType;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Your Imagga API key, available in your Imagga dashboard. Could be found at `https://imagga.com/profile/dashboard`
     */
    public SourceImagga withApiKey(String apiKey) {
        Utils.checkNotNull(apiKey, "apiKey");
        this.apiKey = apiKey;
        return this;
    }

    /**
     * Your Imagga API secret, available in your Imagga dashboard. Could be found at `https://imagga.com/profile/dashboard`
     */
    public SourceImagga withApiSecret(String apiSecret) {
        Utils.checkNotNull(apiSecret, "apiSecret");
        this.apiSecret = apiSecret;
        return this;
    }

    /**
     * An image for detection endpoints
     */
    public SourceImagga withImgForDetection(String imgForDetection) {
        Utils.checkNotNull(imgForDetection, "imgForDetection");
        this.imgForDetection = Optional.ofNullable(imgForDetection);
        return this;
    }

    /**
     * An image for detection endpoints
     */
    public SourceImagga withImgForDetection(Optional<String> imgForDetection) {
        Utils.checkNotNull(imgForDetection, "imgForDetection");
        this.imgForDetection = imgForDetection;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceImagga other = (SourceImagga) o;
        return 
            Objects.deepEquals(this.apiKey, other.apiKey) &&
            Objects.deepEquals(this.apiSecret, other.apiSecret) &&
            Objects.deepEquals(this.imgForDetection, other.imgForDetection) &&
            Objects.deepEquals(this.sourceType, other.sourceType);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            apiKey,
            apiSecret,
            imgForDetection,
            sourceType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceImagga.class,
                "apiKey", apiKey,
                "apiSecret", apiSecret,
                "imgForDetection", imgForDetection,
                "sourceType", sourceType);
    }
    
    public final static class Builder {
 
        private String apiKey;
 
        private String apiSecret;
 
        private Optional<String> imgForDetection;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Your Imagga API key, available in your Imagga dashboard. Could be found at `https://imagga.com/profile/dashboard`
         */
        public Builder apiKey(String apiKey) {
            Utils.checkNotNull(apiKey, "apiKey");
            this.apiKey = apiKey;
            return this;
        }

        /**
         * Your Imagga API secret, available in your Imagga dashboard. Could be found at `https://imagga.com/profile/dashboard`
         */
        public Builder apiSecret(String apiSecret) {
            Utils.checkNotNull(apiSecret, "apiSecret");
            this.apiSecret = apiSecret;
            return this;
        }

        /**
         * An image for detection endpoints
         */
        public Builder imgForDetection(String imgForDetection) {
            Utils.checkNotNull(imgForDetection, "imgForDetection");
            this.imgForDetection = Optional.ofNullable(imgForDetection);
            return this;
        }

        /**
         * An image for detection endpoints
         */
        public Builder imgForDetection(Optional<String> imgForDetection) {
            Utils.checkNotNull(imgForDetection, "imgForDetection");
            this.imgForDetection = imgForDetection;
            return this;
        }
        
        public SourceImagga build() {
            if (imgForDetection == null) {
                imgForDetection = _SINGLETON_VALUE_ImgForDetection.value();
            }
            return new SourceImagga(
                apiKey,
                apiSecret,
                imgForDetection);
        }

        private static final LazySingletonValue<Optional<String>> _SINGLETON_VALUE_ImgForDetection =
                new LazySingletonValue<>(
                        "img_for_detection",
                        "\"https://imagga.com/static/images/categorization/child-476506_640.jpg\"",
                        new TypeReference<Optional<String>>() {});

        private static final LazySingletonValue<Imagga> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"imagga\"",
                        new TypeReference<Imagga>() {});
    }
}
