/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.util.Optional;


public class SourceAmazonAds {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_type")
    private Optional<? extends SourceAmazonAdsAuthType> authType;

    /**
     * The client ID of your Amazon Ads developer application. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret"&gt;docs&lt;/a&gt; for more information.
     */
    @JsonProperty("client_id")
    private String clientId;

    /**
     * The client secret of your Amazon Ads developer application. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret"&gt;docs&lt;/a&gt; for more information.
     */
    @JsonProperty("client_secret")
    private String clientSecret;

    /**
     * The amount of days to go back in time to get the updated data from Amazon Ads
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("look_back_window")
    private Optional<? extends Long> lookBackWindow;

    /**
     * Marketplace IDs you want to fetch data for. Note: If Profile IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("marketplace_ids")
    private Optional<? extends java.util.List<String>> marketplaceIds;

    /**
     * Profile IDs you want to fetch data for. See &lt;a href="https://advertising.amazon.com/API/docs/en-us/concepts/authorization/profiles"&gt;docs&lt;/a&gt; for more details. Note: If Marketplace IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profiles")
    private Optional<? extends java.util.List<Long>> profiles;

    /**
     * Amazon Ads refresh token. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens"&gt;docs&lt;/a&gt; for more information on how to obtain this token.
     */
    @JsonProperty("refresh_token")
    private String refreshToken;

    /**
     * Region to pull data from (EU/NA/FE). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints"&gt;docs&lt;/a&gt; for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    private Optional<? extends Region> region;

    /**
     * Optional configuration which accepts an array of string of record types. Leave blank for default behaviour to pull all report types. Use this config option only if you want to pull specific report type(s). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/reporting/v2/report-types"&gt;docs&lt;/a&gt; for more details
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("report_record_types")
    private Optional<? extends java.util.List<ReportRecordTypes>> reportRecordTypes;

    @JsonProperty("sourceType")
    private SourceAmazonAdsAmazonAds sourceType;

    /**
     * The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_date")
    private Optional<? extends LocalDate> startDate;

    /**
     * Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state_filter")
    private Optional<? extends java.util.List<StateFilter>> stateFilter;

    public SourceAmazonAds(
            @JsonProperty("client_id") String clientId,
            @JsonProperty("client_secret") String clientSecret,
            @JsonProperty("look_back_window") Optional<? extends Long> lookBackWindow,
            @JsonProperty("marketplace_ids") Optional<? extends java.util.List<String>> marketplaceIds,
            @JsonProperty("profiles") Optional<? extends java.util.List<Long>> profiles,
            @JsonProperty("refresh_token") String refreshToken,
            @JsonProperty("region") Optional<? extends Region> region,
            @JsonProperty("report_record_types") Optional<? extends java.util.List<ReportRecordTypes>> reportRecordTypes,
            @JsonProperty("start_date") Optional<? extends LocalDate> startDate,
            @JsonProperty("state_filter") Optional<? extends java.util.List<StateFilter>> stateFilter) {
        Utils.checkNotNull(clientId, "clientId");
        Utils.checkNotNull(clientSecret, "clientSecret");
        Utils.checkNotNull(lookBackWindow, "lookBackWindow");
        Utils.checkNotNull(marketplaceIds, "marketplaceIds");
        Utils.checkNotNull(profiles, "profiles");
        Utils.checkNotNull(refreshToken, "refreshToken");
        Utils.checkNotNull(region, "region");
        Utils.checkNotNull(reportRecordTypes, "reportRecordTypes");
        Utils.checkNotNull(startDate, "startDate");
        Utils.checkNotNull(stateFilter, "stateFilter");
        this.authType = Builder._SINGLETON_VALUE_AuthType.value();
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.lookBackWindow = lookBackWindow;
        this.marketplaceIds = marketplaceIds;
        this.profiles = profiles;
        this.refreshToken = refreshToken;
        this.region = region;
        this.reportRecordTypes = reportRecordTypes;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
        this.startDate = startDate;
        this.stateFilter = stateFilter;
    }

    public Optional<? extends SourceAmazonAdsAuthType> authType() {
        return authType;
    }

    /**
     * The client ID of your Amazon Ads developer application. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret"&gt;docs&lt;/a&gt; for more information.
     */
    public String clientId() {
        return clientId;
    }

    /**
     * The client secret of your Amazon Ads developer application. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret"&gt;docs&lt;/a&gt; for more information.
     */
    public String clientSecret() {
        return clientSecret;
    }

    /**
     * The amount of days to go back in time to get the updated data from Amazon Ads
     */
    public Optional<? extends Long> lookBackWindow() {
        return lookBackWindow;
    }

    /**
     * Marketplace IDs you want to fetch data for. Note: If Profile IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
     */
    public Optional<? extends java.util.List<String>> marketplaceIds() {
        return marketplaceIds;
    }

    /**
     * Profile IDs you want to fetch data for. See &lt;a href="https://advertising.amazon.com/API/docs/en-us/concepts/authorization/profiles"&gt;docs&lt;/a&gt; for more details. Note: If Marketplace IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
     */
    public Optional<? extends java.util.List<Long>> profiles() {
        return profiles;
    }

    /**
     * Amazon Ads refresh token. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens"&gt;docs&lt;/a&gt; for more information on how to obtain this token.
     */
    public String refreshToken() {
        return refreshToken;
    }

    /**
     * Region to pull data from (EU/NA/FE). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints"&gt;docs&lt;/a&gt; for more details.
     */
    public Optional<? extends Region> region() {
        return region;
    }

    /**
     * Optional configuration which accepts an array of string of record types. Leave blank for default behaviour to pull all report types. Use this config option only if you want to pull specific report type(s). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/reporting/v2/report-types"&gt;docs&lt;/a&gt; for more details
     */
    public Optional<? extends java.util.List<ReportRecordTypes>> reportRecordTypes() {
        return reportRecordTypes;
    }

    public SourceAmazonAdsAmazonAds sourceType() {
        return sourceType;
    }

    /**
     * The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format
     */
    public Optional<? extends LocalDate> startDate() {
        return startDate;
    }

    /**
     * Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.
     */
    public Optional<? extends java.util.List<StateFilter>> stateFilter() {
        return stateFilter;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The client ID of your Amazon Ads developer application. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret"&gt;docs&lt;/a&gt; for more information.
     */
    public SourceAmazonAds withClientId(String clientId) {
        Utils.checkNotNull(clientId, "clientId");
        this.clientId = clientId;
        return this;
    }

    /**
     * The client secret of your Amazon Ads developer application. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret"&gt;docs&lt;/a&gt; for more information.
     */
    public SourceAmazonAds withClientSecret(String clientSecret) {
        Utils.checkNotNull(clientSecret, "clientSecret");
        this.clientSecret = clientSecret;
        return this;
    }

    /**
     * The amount of days to go back in time to get the updated data from Amazon Ads
     */
    public SourceAmazonAds withLookBackWindow(long lookBackWindow) {
        Utils.checkNotNull(lookBackWindow, "lookBackWindow");
        this.lookBackWindow = Optional.ofNullable(lookBackWindow);
        return this;
    }

    /**
     * The amount of days to go back in time to get the updated data from Amazon Ads
     */
    public SourceAmazonAds withLookBackWindow(Optional<? extends Long> lookBackWindow) {
        Utils.checkNotNull(lookBackWindow, "lookBackWindow");
        this.lookBackWindow = lookBackWindow;
        return this;
    }

    /**
     * Marketplace IDs you want to fetch data for. Note: If Profile IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
     */
    public SourceAmazonAds withMarketplaceIds(java.util.List<String> marketplaceIds) {
        Utils.checkNotNull(marketplaceIds, "marketplaceIds");
        this.marketplaceIds = Optional.ofNullable(marketplaceIds);
        return this;
    }

    /**
     * Marketplace IDs you want to fetch data for. Note: If Profile IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
     */
    public SourceAmazonAds withMarketplaceIds(Optional<? extends java.util.List<String>> marketplaceIds) {
        Utils.checkNotNull(marketplaceIds, "marketplaceIds");
        this.marketplaceIds = marketplaceIds;
        return this;
    }

    /**
     * Profile IDs you want to fetch data for. See &lt;a href="https://advertising.amazon.com/API/docs/en-us/concepts/authorization/profiles"&gt;docs&lt;/a&gt; for more details. Note: If Marketplace IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
     */
    public SourceAmazonAds withProfiles(java.util.List<Long> profiles) {
        Utils.checkNotNull(profiles, "profiles");
        this.profiles = Optional.ofNullable(profiles);
        return this;
    }

    /**
     * Profile IDs you want to fetch data for. See &lt;a href="https://advertising.amazon.com/API/docs/en-us/concepts/authorization/profiles"&gt;docs&lt;/a&gt; for more details. Note: If Marketplace IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
     */
    public SourceAmazonAds withProfiles(Optional<? extends java.util.List<Long>> profiles) {
        Utils.checkNotNull(profiles, "profiles");
        this.profiles = profiles;
        return this;
    }

    /**
     * Amazon Ads refresh token. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens"&gt;docs&lt;/a&gt; for more information on how to obtain this token.
     */
    public SourceAmazonAds withRefreshToken(String refreshToken) {
        Utils.checkNotNull(refreshToken, "refreshToken");
        this.refreshToken = refreshToken;
        return this;
    }

    /**
     * Region to pull data from (EU/NA/FE). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints"&gt;docs&lt;/a&gt; for more details.
     */
    public SourceAmazonAds withRegion(Region region) {
        Utils.checkNotNull(region, "region");
        this.region = Optional.ofNullable(region);
        return this;
    }

    /**
     * Region to pull data from (EU/NA/FE). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints"&gt;docs&lt;/a&gt; for more details.
     */
    public SourceAmazonAds withRegion(Optional<? extends Region> region) {
        Utils.checkNotNull(region, "region");
        this.region = region;
        return this;
    }

    /**
     * Optional configuration which accepts an array of string of record types. Leave blank for default behaviour to pull all report types. Use this config option only if you want to pull specific report type(s). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/reporting/v2/report-types"&gt;docs&lt;/a&gt; for more details
     */
    public SourceAmazonAds withReportRecordTypes(java.util.List<ReportRecordTypes> reportRecordTypes) {
        Utils.checkNotNull(reportRecordTypes, "reportRecordTypes");
        this.reportRecordTypes = Optional.ofNullable(reportRecordTypes);
        return this;
    }

    /**
     * Optional configuration which accepts an array of string of record types. Leave blank for default behaviour to pull all report types. Use this config option only if you want to pull specific report type(s). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/reporting/v2/report-types"&gt;docs&lt;/a&gt; for more details
     */
    public SourceAmazonAds withReportRecordTypes(Optional<? extends java.util.List<ReportRecordTypes>> reportRecordTypes) {
        Utils.checkNotNull(reportRecordTypes, "reportRecordTypes");
        this.reportRecordTypes = reportRecordTypes;
        return this;
    }

    /**
     * The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format
     */
    public SourceAmazonAds withStartDate(LocalDate startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = Optional.ofNullable(startDate);
        return this;
    }

    /**
     * The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format
     */
    public SourceAmazonAds withStartDate(Optional<? extends LocalDate> startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = startDate;
        return this;
    }

    /**
     * Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.
     */
    public SourceAmazonAds withStateFilter(java.util.List<StateFilter> stateFilter) {
        Utils.checkNotNull(stateFilter, "stateFilter");
        this.stateFilter = Optional.ofNullable(stateFilter);
        return this;
    }

    /**
     * Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.
     */
    public SourceAmazonAds withStateFilter(Optional<? extends java.util.List<StateFilter>> stateFilter) {
        Utils.checkNotNull(stateFilter, "stateFilter");
        this.stateFilter = stateFilter;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceAmazonAds other = (SourceAmazonAds) o;
        return 
            java.util.Objects.deepEquals(this.authType, other.authType) &&
            java.util.Objects.deepEquals(this.clientId, other.clientId) &&
            java.util.Objects.deepEquals(this.clientSecret, other.clientSecret) &&
            java.util.Objects.deepEquals(this.lookBackWindow, other.lookBackWindow) &&
            java.util.Objects.deepEquals(this.marketplaceIds, other.marketplaceIds) &&
            java.util.Objects.deepEquals(this.profiles, other.profiles) &&
            java.util.Objects.deepEquals(this.refreshToken, other.refreshToken) &&
            java.util.Objects.deepEquals(this.region, other.region) &&
            java.util.Objects.deepEquals(this.reportRecordTypes, other.reportRecordTypes) &&
            java.util.Objects.deepEquals(this.sourceType, other.sourceType) &&
            java.util.Objects.deepEquals(this.startDate, other.startDate) &&
            java.util.Objects.deepEquals(this.stateFilter, other.stateFilter);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            authType,
            clientId,
            clientSecret,
            lookBackWindow,
            marketplaceIds,
            profiles,
            refreshToken,
            region,
            reportRecordTypes,
            sourceType,
            startDate,
            stateFilter);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceAmazonAds.class,
                "authType", authType,
                "clientId", clientId,
                "clientSecret", clientSecret,
                "lookBackWindow", lookBackWindow,
                "marketplaceIds", marketplaceIds,
                "profiles", profiles,
                "refreshToken", refreshToken,
                "region", region,
                "reportRecordTypes", reportRecordTypes,
                "sourceType", sourceType,
                "startDate", startDate,
                "stateFilter", stateFilter);
    }
    
    public final static class Builder {
 
        private String clientId;
 
        private String clientSecret;
 
        private Optional<? extends Long> lookBackWindow;
 
        private Optional<? extends java.util.List<String>> marketplaceIds = Optional.empty();
 
        private Optional<? extends java.util.List<Long>> profiles = Optional.empty();
 
        private String refreshToken;
 
        private Optional<? extends Region> region;
 
        private Optional<? extends java.util.List<ReportRecordTypes>> reportRecordTypes = Optional.empty();
 
        private Optional<? extends LocalDate> startDate = Optional.empty();
 
        private Optional<? extends java.util.List<StateFilter>> stateFilter = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The client ID of your Amazon Ads developer application. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret"&gt;docs&lt;/a&gt; for more information.
         */
        public Builder clientId(String clientId) {
            Utils.checkNotNull(clientId, "clientId");
            this.clientId = clientId;
            return this;
        }

        /**
         * The client secret of your Amazon Ads developer application. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret"&gt;docs&lt;/a&gt; for more information.
         */
        public Builder clientSecret(String clientSecret) {
            Utils.checkNotNull(clientSecret, "clientSecret");
            this.clientSecret = clientSecret;
            return this;
        }

        /**
         * The amount of days to go back in time to get the updated data from Amazon Ads
         */
        public Builder lookBackWindow(long lookBackWindow) {
            Utils.checkNotNull(lookBackWindow, "lookBackWindow");
            this.lookBackWindow = Optional.ofNullable(lookBackWindow);
            return this;
        }

        /**
         * The amount of days to go back in time to get the updated data from Amazon Ads
         */
        public Builder lookBackWindow(Optional<? extends Long> lookBackWindow) {
            Utils.checkNotNull(lookBackWindow, "lookBackWindow");
            this.lookBackWindow = lookBackWindow;
            return this;
        }

        /**
         * Marketplace IDs you want to fetch data for. Note: If Profile IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
         */
        public Builder marketplaceIds(java.util.List<String> marketplaceIds) {
            Utils.checkNotNull(marketplaceIds, "marketplaceIds");
            this.marketplaceIds = Optional.ofNullable(marketplaceIds);
            return this;
        }

        /**
         * Marketplace IDs you want to fetch data for. Note: If Profile IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
         */
        public Builder marketplaceIds(Optional<? extends java.util.List<String>> marketplaceIds) {
            Utils.checkNotNull(marketplaceIds, "marketplaceIds");
            this.marketplaceIds = marketplaceIds;
            return this;
        }

        /**
         * Profile IDs you want to fetch data for. See &lt;a href="https://advertising.amazon.com/API/docs/en-us/concepts/authorization/profiles"&gt;docs&lt;/a&gt; for more details. Note: If Marketplace IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
         */
        public Builder profiles(java.util.List<Long> profiles) {
            Utils.checkNotNull(profiles, "profiles");
            this.profiles = Optional.ofNullable(profiles);
            return this;
        }

        /**
         * Profile IDs you want to fetch data for. See &lt;a href="https://advertising.amazon.com/API/docs/en-us/concepts/authorization/profiles"&gt;docs&lt;/a&gt; for more details. Note: If Marketplace IDs are also selected, profiles will be selected if they match the Profile ID OR the Marketplace ID.
         */
        public Builder profiles(Optional<? extends java.util.List<Long>> profiles) {
            Utils.checkNotNull(profiles, "profiles");
            this.profiles = profiles;
            return this;
        }

        /**
         * Amazon Ads refresh token. See the &lt;a href="https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens"&gt;docs&lt;/a&gt; for more information on how to obtain this token.
         */
        public Builder refreshToken(String refreshToken) {
            Utils.checkNotNull(refreshToken, "refreshToken");
            this.refreshToken = refreshToken;
            return this;
        }

        /**
         * Region to pull data from (EU/NA/FE). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints"&gt;docs&lt;/a&gt; for more details.
         */
        public Builder region(Region region) {
            Utils.checkNotNull(region, "region");
            this.region = Optional.ofNullable(region);
            return this;
        }

        /**
         * Region to pull data from (EU/NA/FE). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints"&gt;docs&lt;/a&gt; for more details.
         */
        public Builder region(Optional<? extends Region> region) {
            Utils.checkNotNull(region, "region");
            this.region = region;
            return this;
        }

        /**
         * Optional configuration which accepts an array of string of record types. Leave blank for default behaviour to pull all report types. Use this config option only if you want to pull specific report type(s). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/reporting/v2/report-types"&gt;docs&lt;/a&gt; for more details
         */
        public Builder reportRecordTypes(java.util.List<ReportRecordTypes> reportRecordTypes) {
            Utils.checkNotNull(reportRecordTypes, "reportRecordTypes");
            this.reportRecordTypes = Optional.ofNullable(reportRecordTypes);
            return this;
        }

        /**
         * Optional configuration which accepts an array of string of record types. Leave blank for default behaviour to pull all report types. Use this config option only if you want to pull specific report type(s). See &lt;a href="https://advertising.amazon.com/API/docs/en-us/reporting/v2/report-types"&gt;docs&lt;/a&gt; for more details
         */
        public Builder reportRecordTypes(Optional<? extends java.util.List<ReportRecordTypes>> reportRecordTypes) {
            Utils.checkNotNull(reportRecordTypes, "reportRecordTypes");
            this.reportRecordTypes = reportRecordTypes;
            return this;
        }

        /**
         * The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format
         */
        public Builder startDate(LocalDate startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = Optional.ofNullable(startDate);
            return this;
        }

        /**
         * The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format
         */
        public Builder startDate(Optional<? extends LocalDate> startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = startDate;
            return this;
        }

        /**
         * Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.
         */
        public Builder stateFilter(java.util.List<StateFilter> stateFilter) {
            Utils.checkNotNull(stateFilter, "stateFilter");
            this.stateFilter = Optional.ofNullable(stateFilter);
            return this;
        }

        /**
         * Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.
         */
        public Builder stateFilter(Optional<? extends java.util.List<StateFilter>> stateFilter) {
            Utils.checkNotNull(stateFilter, "stateFilter");
            this.stateFilter = stateFilter;
            return this;
        }
        
        public SourceAmazonAds build() {
            if (lookBackWindow == null) {
                lookBackWindow = _SINGLETON_VALUE_LookBackWindow.value();
            }
            if (region == null) {
                region = _SINGLETON_VALUE_Region.value();
            }
            return new SourceAmazonAds(
                clientId,
                clientSecret,
                lookBackWindow,
                marketplaceIds,
                profiles,
                refreshToken,
                region,
                reportRecordTypes,
                startDate,
                stateFilter);
        }

        private static final LazySingletonValue<Optional<? extends SourceAmazonAdsAuthType>> _SINGLETON_VALUE_AuthType =
                new LazySingletonValue<>(
                        "auth_type",
                        "\"oauth2.0\"",
                        new TypeReference<Optional<? extends SourceAmazonAdsAuthType>>() {});

        private static final LazySingletonValue<Optional<? extends Long>> _SINGLETON_VALUE_LookBackWindow =
                new LazySingletonValue<>(
                        "look_back_window",
                        "3",
                        new TypeReference<Optional<? extends Long>>() {});

        private static final LazySingletonValue<Optional<? extends Region>> _SINGLETON_VALUE_Region =
                new LazySingletonValue<>(
                        "region",
                        "\"NA\"",
                        new TypeReference<Optional<? extends Region>>() {});

        private static final LazySingletonValue<SourceAmazonAdsAmazonAds> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"amazon-ads\"",
                        new TypeReference<SourceAmazonAdsAmazonAds>() {});
    }
}

