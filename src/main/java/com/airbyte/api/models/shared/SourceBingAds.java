/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;


import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.time.LocalDate;
import java.util.List;
import java.util.Objects;
import java.util.Optional;


public class SourceBingAds {

    /**
     * Predicates that will be used to sync data by specific accounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_names")
    private Optional<? extends List<AccountNames>> accountNames;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_method")
    private Optional<? extends AuthMethod> authMethod;

    /**
     * The Client ID of your Microsoft Advertising developer application.
     */
    @JsonProperty("client_id")
    private String clientId;

    /**
     * The Client Secret of your Microsoft Advertising developer application.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_secret")
    private Optional<String> clientSecret;

    /**
     * You can add your Custom Bing Ads report by creating one.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_reports")
    private Optional<? extends List<CustomReportConfig>> customReports;

    /**
     * Developer token associated with user. See more info &lt;a href="https://docs.microsoft.com/en-us/advertising/guides/get-started?view=bingads-13#get-developer-token"&gt; in the docs&lt;/a&gt;.
     */
    @JsonProperty("developer_token")
    private String developerToken;

    /**
     * Also known as attribution or conversion window. How far into the past to look for records (in days). If your conversion window has an hours/minutes granularity, round it up to the number of days exceeding. Used only for performance report streams in incremental mode without specified Reports Start Date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lookback_window")
    private Optional<Long> lookbackWindow;

    /**
     * Refresh Token to renew the expired Access Token.
     */
    @JsonProperty("refresh_token")
    private String refreshToken;

    /**
     * The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format. If not set, data from previous and current calendar year will be replicated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reports_start_date")
    private Optional<LocalDate> reportsStartDate;

    @JsonProperty("sourceType")
    private SourceBingAdsBingAds sourceType;

    /**
     * The Tenant ID of your Microsoft Advertising developer application. Set this to "common" unless you know you need a different value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tenant_id")
    private Optional<String> tenantId;

    @JsonCreator
    public SourceBingAds(
            @JsonProperty("account_names") Optional<? extends List<AccountNames>> accountNames,
            @JsonProperty("client_id") String clientId,
            @JsonProperty("client_secret") Optional<String> clientSecret,
            @JsonProperty("custom_reports") Optional<? extends List<CustomReportConfig>> customReports,
            @JsonProperty("developer_token") String developerToken,
            @JsonProperty("lookback_window") Optional<Long> lookbackWindow,
            @JsonProperty("refresh_token") String refreshToken,
            @JsonProperty("reports_start_date") Optional<LocalDate> reportsStartDate,
            @JsonProperty("tenant_id") Optional<String> tenantId) {
        Utils.checkNotNull(accountNames, "accountNames");
        Utils.checkNotNull(clientId, "clientId");
        Utils.checkNotNull(clientSecret, "clientSecret");
        Utils.checkNotNull(customReports, "customReports");
        Utils.checkNotNull(developerToken, "developerToken");
        Utils.checkNotNull(lookbackWindow, "lookbackWindow");
        Utils.checkNotNull(refreshToken, "refreshToken");
        Utils.checkNotNull(reportsStartDate, "reportsStartDate");
        Utils.checkNotNull(tenantId, "tenantId");
        this.accountNames = accountNames;
        this.authMethod = Builder._SINGLETON_VALUE_AuthMethod.value();
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.customReports = customReports;
        this.developerToken = developerToken;
        this.lookbackWindow = lookbackWindow;
        this.refreshToken = refreshToken;
        this.reportsStartDate = reportsStartDate;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
        this.tenantId = tenantId;
    }
    
    public SourceBingAds(
            String clientId,
            String developerToken,
            String refreshToken) {
        this(Optional.empty(), clientId, Optional.empty(), Optional.empty(), developerToken, Optional.empty(), refreshToken, Optional.empty(), Optional.empty());
    }

    /**
     * Predicates that will be used to sync data by specific accounts.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<AccountNames>> accountNames() {
        return (Optional<List<AccountNames>>) accountNames;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AuthMethod> authMethod() {
        return (Optional<AuthMethod>) authMethod;
    }

    /**
     * The Client ID of your Microsoft Advertising developer application.
     */
    @JsonIgnore
    public String clientId() {
        return clientId;
    }

    /**
     * The Client Secret of your Microsoft Advertising developer application.
     */
    @JsonIgnore
    public Optional<String> clientSecret() {
        return clientSecret;
    }

    /**
     * You can add your Custom Bing Ads report by creating one.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<CustomReportConfig>> customReports() {
        return (Optional<List<CustomReportConfig>>) customReports;
    }

    /**
     * Developer token associated with user. See more info &lt;a href="https://docs.microsoft.com/en-us/advertising/guides/get-started?view=bingads-13#get-developer-token"&gt; in the docs&lt;/a&gt;.
     */
    @JsonIgnore
    public String developerToken() {
        return developerToken;
    }

    /**
     * Also known as attribution or conversion window. How far into the past to look for records (in days). If your conversion window has an hours/minutes granularity, round it up to the number of days exceeding. Used only for performance report streams in incremental mode without specified Reports Start Date.
     */
    @JsonIgnore
    public Optional<Long> lookbackWindow() {
        return lookbackWindow;
    }

    /**
     * Refresh Token to renew the expired Access Token.
     */
    @JsonIgnore
    public String refreshToken() {
        return refreshToken;
    }

    /**
     * The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format. If not set, data from previous and current calendar year will be replicated.
     */
    @JsonIgnore
    public Optional<LocalDate> reportsStartDate() {
        return reportsStartDate;
    }

    @JsonIgnore
    public SourceBingAdsBingAds sourceType() {
        return sourceType;
    }

    /**
     * The Tenant ID of your Microsoft Advertising developer application. Set this to "common" unless you know you need a different value.
     */
    @JsonIgnore
    public Optional<String> tenantId() {
        return tenantId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Predicates that will be used to sync data by specific accounts.
     */
    public SourceBingAds withAccountNames(List<AccountNames> accountNames) {
        Utils.checkNotNull(accountNames, "accountNames");
        this.accountNames = Optional.ofNullable(accountNames);
        return this;
    }

    /**
     * Predicates that will be used to sync data by specific accounts.
     */
    public SourceBingAds withAccountNames(Optional<? extends List<AccountNames>> accountNames) {
        Utils.checkNotNull(accountNames, "accountNames");
        this.accountNames = accountNames;
        return this;
    }

    /**
     * The Client ID of your Microsoft Advertising developer application.
     */
    public SourceBingAds withClientId(String clientId) {
        Utils.checkNotNull(clientId, "clientId");
        this.clientId = clientId;
        return this;
    }

    /**
     * The Client Secret of your Microsoft Advertising developer application.
     */
    public SourceBingAds withClientSecret(String clientSecret) {
        Utils.checkNotNull(clientSecret, "clientSecret");
        this.clientSecret = Optional.ofNullable(clientSecret);
        return this;
    }

    /**
     * The Client Secret of your Microsoft Advertising developer application.
     */
    public SourceBingAds withClientSecret(Optional<String> clientSecret) {
        Utils.checkNotNull(clientSecret, "clientSecret");
        this.clientSecret = clientSecret;
        return this;
    }

    /**
     * You can add your Custom Bing Ads report by creating one.
     */
    public SourceBingAds withCustomReports(List<CustomReportConfig> customReports) {
        Utils.checkNotNull(customReports, "customReports");
        this.customReports = Optional.ofNullable(customReports);
        return this;
    }

    /**
     * You can add your Custom Bing Ads report by creating one.
     */
    public SourceBingAds withCustomReports(Optional<? extends List<CustomReportConfig>> customReports) {
        Utils.checkNotNull(customReports, "customReports");
        this.customReports = customReports;
        return this;
    }

    /**
     * Developer token associated with user. See more info &lt;a href="https://docs.microsoft.com/en-us/advertising/guides/get-started?view=bingads-13#get-developer-token"&gt; in the docs&lt;/a&gt;.
     */
    public SourceBingAds withDeveloperToken(String developerToken) {
        Utils.checkNotNull(developerToken, "developerToken");
        this.developerToken = developerToken;
        return this;
    }

    /**
     * Also known as attribution or conversion window. How far into the past to look for records (in days). If your conversion window has an hours/minutes granularity, round it up to the number of days exceeding. Used only for performance report streams in incremental mode without specified Reports Start Date.
     */
    public SourceBingAds withLookbackWindow(long lookbackWindow) {
        Utils.checkNotNull(lookbackWindow, "lookbackWindow");
        this.lookbackWindow = Optional.ofNullable(lookbackWindow);
        return this;
    }

    /**
     * Also known as attribution or conversion window. How far into the past to look for records (in days). If your conversion window has an hours/minutes granularity, round it up to the number of days exceeding. Used only for performance report streams in incremental mode without specified Reports Start Date.
     */
    public SourceBingAds withLookbackWindow(Optional<Long> lookbackWindow) {
        Utils.checkNotNull(lookbackWindow, "lookbackWindow");
        this.lookbackWindow = lookbackWindow;
        return this;
    }

    /**
     * Refresh Token to renew the expired Access Token.
     */
    public SourceBingAds withRefreshToken(String refreshToken) {
        Utils.checkNotNull(refreshToken, "refreshToken");
        this.refreshToken = refreshToken;
        return this;
    }

    /**
     * The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format. If not set, data from previous and current calendar year will be replicated.
     */
    public SourceBingAds withReportsStartDate(LocalDate reportsStartDate) {
        Utils.checkNotNull(reportsStartDate, "reportsStartDate");
        this.reportsStartDate = Optional.ofNullable(reportsStartDate);
        return this;
    }

    /**
     * The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format. If not set, data from previous and current calendar year will be replicated.
     */
    public SourceBingAds withReportsStartDate(Optional<LocalDate> reportsStartDate) {
        Utils.checkNotNull(reportsStartDate, "reportsStartDate");
        this.reportsStartDate = reportsStartDate;
        return this;
    }

    /**
     * The Tenant ID of your Microsoft Advertising developer application. Set this to "common" unless you know you need a different value.
     */
    public SourceBingAds withTenantId(String tenantId) {
        Utils.checkNotNull(tenantId, "tenantId");
        this.tenantId = Optional.ofNullable(tenantId);
        return this;
    }

    /**
     * The Tenant ID of your Microsoft Advertising developer application. Set this to "common" unless you know you need a different value.
     */
    public SourceBingAds withTenantId(Optional<String> tenantId) {
        Utils.checkNotNull(tenantId, "tenantId");
        this.tenantId = tenantId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceBingAds other = (SourceBingAds) o;
        return 
            Objects.deepEquals(this.accountNames, other.accountNames) &&
            Objects.deepEquals(this.authMethod, other.authMethod) &&
            Objects.deepEquals(this.clientId, other.clientId) &&
            Objects.deepEquals(this.clientSecret, other.clientSecret) &&
            Objects.deepEquals(this.customReports, other.customReports) &&
            Objects.deepEquals(this.developerToken, other.developerToken) &&
            Objects.deepEquals(this.lookbackWindow, other.lookbackWindow) &&
            Objects.deepEquals(this.refreshToken, other.refreshToken) &&
            Objects.deepEquals(this.reportsStartDate, other.reportsStartDate) &&
            Objects.deepEquals(this.sourceType, other.sourceType) &&
            Objects.deepEquals(this.tenantId, other.tenantId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            accountNames,
            authMethod,
            clientId,
            clientSecret,
            customReports,
            developerToken,
            lookbackWindow,
            refreshToken,
            reportsStartDate,
            sourceType,
            tenantId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceBingAds.class,
                "accountNames", accountNames,
                "authMethod", authMethod,
                "clientId", clientId,
                "clientSecret", clientSecret,
                "customReports", customReports,
                "developerToken", developerToken,
                "lookbackWindow", lookbackWindow,
                "refreshToken", refreshToken,
                "reportsStartDate", reportsStartDate,
                "sourceType", sourceType,
                "tenantId", tenantId);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<AccountNames>> accountNames = Optional.empty();
 
        private String clientId;
 
        private Optional<String> clientSecret;
 
        private Optional<? extends List<CustomReportConfig>> customReports = Optional.empty();
 
        private String developerToken;
 
        private Optional<Long> lookbackWindow;
 
        private String refreshToken;
 
        private Optional<LocalDate> reportsStartDate = Optional.empty();
 
        private Optional<String> tenantId;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Predicates that will be used to sync data by specific accounts.
         */
        public Builder accountNames(List<AccountNames> accountNames) {
            Utils.checkNotNull(accountNames, "accountNames");
            this.accountNames = Optional.ofNullable(accountNames);
            return this;
        }

        /**
         * Predicates that will be used to sync data by specific accounts.
         */
        public Builder accountNames(Optional<? extends List<AccountNames>> accountNames) {
            Utils.checkNotNull(accountNames, "accountNames");
            this.accountNames = accountNames;
            return this;
        }

        /**
         * The Client ID of your Microsoft Advertising developer application.
         */
        public Builder clientId(String clientId) {
            Utils.checkNotNull(clientId, "clientId");
            this.clientId = clientId;
            return this;
        }

        /**
         * The Client Secret of your Microsoft Advertising developer application.
         */
        public Builder clientSecret(String clientSecret) {
            Utils.checkNotNull(clientSecret, "clientSecret");
            this.clientSecret = Optional.ofNullable(clientSecret);
            return this;
        }

        /**
         * The Client Secret of your Microsoft Advertising developer application.
         */
        public Builder clientSecret(Optional<String> clientSecret) {
            Utils.checkNotNull(clientSecret, "clientSecret");
            this.clientSecret = clientSecret;
            return this;
        }

        /**
         * You can add your Custom Bing Ads report by creating one.
         */
        public Builder customReports(List<CustomReportConfig> customReports) {
            Utils.checkNotNull(customReports, "customReports");
            this.customReports = Optional.ofNullable(customReports);
            return this;
        }

        /**
         * You can add your Custom Bing Ads report by creating one.
         */
        public Builder customReports(Optional<? extends List<CustomReportConfig>> customReports) {
            Utils.checkNotNull(customReports, "customReports");
            this.customReports = customReports;
            return this;
        }

        /**
         * Developer token associated with user. See more info &lt;a href="https://docs.microsoft.com/en-us/advertising/guides/get-started?view=bingads-13#get-developer-token"&gt; in the docs&lt;/a&gt;.
         */
        public Builder developerToken(String developerToken) {
            Utils.checkNotNull(developerToken, "developerToken");
            this.developerToken = developerToken;
            return this;
        }

        /**
         * Also known as attribution or conversion window. How far into the past to look for records (in days). If your conversion window has an hours/minutes granularity, round it up to the number of days exceeding. Used only for performance report streams in incremental mode without specified Reports Start Date.
         */
        public Builder lookbackWindow(long lookbackWindow) {
            Utils.checkNotNull(lookbackWindow, "lookbackWindow");
            this.lookbackWindow = Optional.ofNullable(lookbackWindow);
            return this;
        }

        /**
         * Also known as attribution or conversion window. How far into the past to look for records (in days). If your conversion window has an hours/minutes granularity, round it up to the number of days exceeding. Used only for performance report streams in incremental mode without specified Reports Start Date.
         */
        public Builder lookbackWindow(Optional<Long> lookbackWindow) {
            Utils.checkNotNull(lookbackWindow, "lookbackWindow");
            this.lookbackWindow = lookbackWindow;
            return this;
        }

        /**
         * Refresh Token to renew the expired Access Token.
         */
        public Builder refreshToken(String refreshToken) {
            Utils.checkNotNull(refreshToken, "refreshToken");
            this.refreshToken = refreshToken;
            return this;
        }

        /**
         * The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format. If not set, data from previous and current calendar year will be replicated.
         */
        public Builder reportsStartDate(LocalDate reportsStartDate) {
            Utils.checkNotNull(reportsStartDate, "reportsStartDate");
            this.reportsStartDate = Optional.ofNullable(reportsStartDate);
            return this;
        }

        /**
         * The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format. If not set, data from previous and current calendar year will be replicated.
         */
        public Builder reportsStartDate(Optional<LocalDate> reportsStartDate) {
            Utils.checkNotNull(reportsStartDate, "reportsStartDate");
            this.reportsStartDate = reportsStartDate;
            return this;
        }

        /**
         * The Tenant ID of your Microsoft Advertising developer application. Set this to "common" unless you know you need a different value.
         */
        public Builder tenantId(String tenantId) {
            Utils.checkNotNull(tenantId, "tenantId");
            this.tenantId = Optional.ofNullable(tenantId);
            return this;
        }

        /**
         * The Tenant ID of your Microsoft Advertising developer application. Set this to "common" unless you know you need a different value.
         */
        public Builder tenantId(Optional<String> tenantId) {
            Utils.checkNotNull(tenantId, "tenantId");
            this.tenantId = tenantId;
            return this;
        }
        
        public SourceBingAds build() {
            if (clientSecret == null) {
                clientSecret = _SINGLETON_VALUE_ClientSecret.value();
            }
            if (lookbackWindow == null) {
                lookbackWindow = _SINGLETON_VALUE_LookbackWindow.value();
            }
            if (tenantId == null) {
                tenantId = _SINGLETON_VALUE_TenantId.value();
            }            return new SourceBingAds(
                accountNames,
                clientId,
                clientSecret,
                customReports,
                developerToken,
                lookbackWindow,
                refreshToken,
                reportsStartDate,
                tenantId);
        }

        private static final LazySingletonValue<Optional<? extends AuthMethod>> _SINGLETON_VALUE_AuthMethod =
                new LazySingletonValue<>(
                        "auth_method",
                        "\"oauth2.0\"",
                        new TypeReference<Optional<? extends AuthMethod>>() {});

        private static final LazySingletonValue<Optional<String>> _SINGLETON_VALUE_ClientSecret =
                new LazySingletonValue<>(
                        "client_secret",
                        "\"\"",
                        new TypeReference<Optional<String>>() {});

        private static final LazySingletonValue<Optional<Long>> _SINGLETON_VALUE_LookbackWindow =
                new LazySingletonValue<>(
                        "lookback_window",
                        "0",
                        new TypeReference<Optional<Long>>() {});

        private static final LazySingletonValue<SourceBingAdsBingAds> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"bing-ads\"",
                        new TypeReference<SourceBingAdsBingAds>() {});

        private static final LazySingletonValue<Optional<String>> _SINGLETON_VALUE_TenantId =
                new LazySingletonValue<>(
                        "tenant_id",
                        "\"common\"",
                        new TypeReference<Optional<String>>() {});
    }
}

