/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;


import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

/**
 * UserResponse - Provides details of a single user in an organization.
 */

public class UserResponse {

    @JsonProperty("email")
    private String email;

    /**
     * Internal Airbyte user ID
     */
    @JsonProperty("id")
    private String id;

    /**
     * Name of the user
     */
    @JsonProperty("name")
    private String name;

    @JsonCreator
    public UserResponse(
            @JsonProperty("email") String email,
            @JsonProperty("id") String id,
            @JsonProperty("name") String name) {
        Utils.checkNotNull(email, "email");
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(name, "name");
        this.email = email;
        this.id = id;
        this.name = name;
    }

    @JsonIgnore
    public String email() {
        return email;
    }

    /**
     * Internal Airbyte user ID
     */
    @JsonIgnore
    public String id() {
        return id;
    }

    /**
     * Name of the user
     */
    @JsonIgnore
    public String name() {
        return name;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public UserResponse withEmail(String email) {
        Utils.checkNotNull(email, "email");
        this.email = email;
        return this;
    }

    /**
     * Internal Airbyte user ID
     */
    public UserResponse withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * Name of the user
     */
    public UserResponse withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserResponse other = (UserResponse) o;
        return 
            Objects.deepEquals(this.email, other.email) &&
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.name, other.name);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            email,
            id,
            name);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UserResponse.class,
                "email", email,
                "id", id,
                "name", name);
    }
    
    public final static class Builder {
 
        private String email;
 
        private String id;
 
        private String name;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder email(String email) {
            Utils.checkNotNull(email, "email");
            this.email = email;
            return this;
        }

        /**
         * Internal Airbyte user ID
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * Name of the user
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }
        
        public UserResponse build() {
            return new UserResponse(
                email,
                id,
                name);
        }
    }
}

