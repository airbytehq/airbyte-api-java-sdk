/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.Objects;

public class SourceRevolutMerchant {

    /**
     * Specify the API version to use. This is required for certain API calls. Example: '2024-09-01'.
     */
    @JsonProperty("api_version")
    private String apiVersion;

    /**
     * The base url of your environment. Either sandbox or production
     */
    @JsonProperty("environment")
    private SourceRevolutMerchantEnvironment environment;

    /**
     * Secret API key to use for authenticating with the Revolut Merchant API. Find it in your Revolut Business account under APIs &gt; Merchant API.
     */
    @JsonProperty("secret_api_key")
    private String secretApiKey;

    @JsonProperty("sourceType")
    private RevolutMerchant sourceType;

    @JsonProperty("start_date")
    private OffsetDateTime startDate;

    @JsonCreator
    public SourceRevolutMerchant(
            @JsonProperty("api_version") String apiVersion,
            @JsonProperty("environment") SourceRevolutMerchantEnvironment environment,
            @JsonProperty("secret_api_key") String secretApiKey,
            @JsonProperty("start_date") OffsetDateTime startDate) {
        Utils.checkNotNull(apiVersion, "apiVersion");
        Utils.checkNotNull(environment, "environment");
        Utils.checkNotNull(secretApiKey, "secretApiKey");
        Utils.checkNotNull(startDate, "startDate");
        this.apiVersion = apiVersion;
        this.environment = environment;
        this.secretApiKey = secretApiKey;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
        this.startDate = startDate;
    }

    /**
     * Specify the API version to use. This is required for certain API calls. Example: '2024-09-01'.
     */
    @JsonIgnore
    public String apiVersion() {
        return apiVersion;
    }

    /**
     * The base url of your environment. Either sandbox or production
     */
    @JsonIgnore
    public SourceRevolutMerchantEnvironment environment() {
        return environment;
    }

    /**
     * Secret API key to use for authenticating with the Revolut Merchant API. Find it in your Revolut Business account under APIs &gt; Merchant API.
     */
    @JsonIgnore
    public String secretApiKey() {
        return secretApiKey;
    }

    @JsonIgnore
    public RevolutMerchant sourceType() {
        return sourceType;
    }

    @JsonIgnore
    public OffsetDateTime startDate() {
        return startDate;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Specify the API version to use. This is required for certain API calls. Example: '2024-09-01'.
     */
    public SourceRevolutMerchant withApiVersion(String apiVersion) {
        Utils.checkNotNull(apiVersion, "apiVersion");
        this.apiVersion = apiVersion;
        return this;
    }

    /**
     * The base url of your environment. Either sandbox or production
     */
    public SourceRevolutMerchant withEnvironment(SourceRevolutMerchantEnvironment environment) {
        Utils.checkNotNull(environment, "environment");
        this.environment = environment;
        return this;
    }

    /**
     * Secret API key to use for authenticating with the Revolut Merchant API. Find it in your Revolut Business account under APIs &gt; Merchant API.
     */
    public SourceRevolutMerchant withSecretApiKey(String secretApiKey) {
        Utils.checkNotNull(secretApiKey, "secretApiKey");
        this.secretApiKey = secretApiKey;
        return this;
    }

    public SourceRevolutMerchant withStartDate(OffsetDateTime startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = startDate;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceRevolutMerchant other = (SourceRevolutMerchant) o;
        return 
            Objects.deepEquals(this.apiVersion, other.apiVersion) &&
            Objects.deepEquals(this.environment, other.environment) &&
            Objects.deepEquals(this.secretApiKey, other.secretApiKey) &&
            Objects.deepEquals(this.sourceType, other.sourceType) &&
            Objects.deepEquals(this.startDate, other.startDate);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            apiVersion,
            environment,
            secretApiKey,
            sourceType,
            startDate);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceRevolutMerchant.class,
                "apiVersion", apiVersion,
                "environment", environment,
                "secretApiKey", secretApiKey,
                "sourceType", sourceType,
                "startDate", startDate);
    }
    
    public final static class Builder {
 
        private String apiVersion;
 
        private SourceRevolutMerchantEnvironment environment;
 
        private String secretApiKey;
 
        private OffsetDateTime startDate;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Specify the API version to use. This is required for certain API calls. Example: '2024-09-01'.
         */
        public Builder apiVersion(String apiVersion) {
            Utils.checkNotNull(apiVersion, "apiVersion");
            this.apiVersion = apiVersion;
            return this;
        }

        /**
         * The base url of your environment. Either sandbox or production
         */
        public Builder environment(SourceRevolutMerchantEnvironment environment) {
            Utils.checkNotNull(environment, "environment");
            this.environment = environment;
            return this;
        }

        /**
         * Secret API key to use for authenticating with the Revolut Merchant API. Find it in your Revolut Business account under APIs &gt; Merchant API.
         */
        public Builder secretApiKey(String secretApiKey) {
            Utils.checkNotNull(secretApiKey, "secretApiKey");
            this.secretApiKey = secretApiKey;
            return this;
        }

        public Builder startDate(OffsetDateTime startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = startDate;
            return this;
        }
        
        public SourceRevolutMerchant build() {
            return new SourceRevolutMerchant(
                apiVersion,
                environment,
                secretApiKey,
                startDate);
        }

        private static final LazySingletonValue<RevolutMerchant> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"revolut-merchant\"",
                        new TypeReference<RevolutMerchant>() {});
    }
}
