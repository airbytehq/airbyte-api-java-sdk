/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class SourceJira {

    /**
     * Jira API Token. See the &lt;a href="https://docs.airbyte.com/integrations/sources/jira"&gt;docs&lt;/a&gt; for more information on how to generate this key. API Token is used for Authorization to your account by BasicAuth.
     */
    @JsonProperty("api_token")
    private String apiToken;

    /**
     * The Domain for your Jira account, e.g. airbyteio.atlassian.net, airbyteio.jira.com, jira.your-domain.com
     */
    @JsonProperty("domain")
    private String domain;

    /**
     * The user email for your Jira account which you used to generate the API token. This field is used for Authorization to your account by BasicAuth.
     */
    @JsonProperty("email")
    private String email;

    /**
     * When set to N, the connector will always refresh resources created within the past N minutes. By default, updated objects that are not newly created are not incrementally synced.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lookback_window_minutes")
    private Optional<Long> lookbackWindowMinutes;

    /**
     * The number of worker threads to use for the sync.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("num_workers")
    private Optional<Long> numWorkers;

    /**
     * List of Jira project keys to replicate data for, or leave it empty if you want to replicate data for all projects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projects")
    private Optional<? extends List<String>> projects;

    @JsonProperty("sourceType")
    private Jira sourceType;

    /**
     * The date from which you want to replicate data from Jira, use the format YYYY-MM-DDT00:00:00Z. Note that this field only applies to certain streams, and only data generated on or after the start date will be replicated. Or leave it empty if you want to replicate all data. For more information, refer to the &lt;a href="https://docs.airbyte.com/integrations/sources/jira/"&gt;documentation&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_date")
    private Optional<OffsetDateTime> startDate;

    @JsonCreator
    public SourceJira(
            @JsonProperty("api_token") String apiToken,
            @JsonProperty("domain") String domain,
            @JsonProperty("email") String email,
            @JsonProperty("lookback_window_minutes") Optional<Long> lookbackWindowMinutes,
            @JsonProperty("num_workers") Optional<Long> numWorkers,
            @JsonProperty("projects") Optional<? extends List<String>> projects,
            @JsonProperty("start_date") Optional<OffsetDateTime> startDate) {
        Utils.checkNotNull(apiToken, "apiToken");
        Utils.checkNotNull(domain, "domain");
        Utils.checkNotNull(email, "email");
        Utils.checkNotNull(lookbackWindowMinutes, "lookbackWindowMinutes");
        Utils.checkNotNull(numWorkers, "numWorkers");
        Utils.checkNotNull(projects, "projects");
        Utils.checkNotNull(startDate, "startDate");
        this.apiToken = apiToken;
        this.domain = domain;
        this.email = email;
        this.lookbackWindowMinutes = lookbackWindowMinutes;
        this.numWorkers = numWorkers;
        this.projects = projects;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
        this.startDate = startDate;
    }
    
    public SourceJira(
            String apiToken,
            String domain,
            String email) {
        this(apiToken, domain, email, Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty());
    }

    /**
     * Jira API Token. See the &lt;a href="https://docs.airbyte.com/integrations/sources/jira"&gt;docs&lt;/a&gt; for more information on how to generate this key. API Token is used for Authorization to your account by BasicAuth.
     */
    @JsonIgnore
    public String apiToken() {
        return apiToken;
    }

    /**
     * The Domain for your Jira account, e.g. airbyteio.atlassian.net, airbyteio.jira.com, jira.your-domain.com
     */
    @JsonIgnore
    public String domain() {
        return domain;
    }

    /**
     * The user email for your Jira account which you used to generate the API token. This field is used for Authorization to your account by BasicAuth.
     */
    @JsonIgnore
    public String email() {
        return email;
    }

    /**
     * When set to N, the connector will always refresh resources created within the past N minutes. By default, updated objects that are not newly created are not incrementally synced.
     */
    @JsonIgnore
    public Optional<Long> lookbackWindowMinutes() {
        return lookbackWindowMinutes;
    }

    /**
     * The number of worker threads to use for the sync.
     */
    @JsonIgnore
    public Optional<Long> numWorkers() {
        return numWorkers;
    }

    /**
     * List of Jira project keys to replicate data for, or leave it empty if you want to replicate data for all projects.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<String>> projects() {
        return (Optional<List<String>>) projects;
    }

    @JsonIgnore
    public Jira sourceType() {
        return sourceType;
    }

    /**
     * The date from which you want to replicate data from Jira, use the format YYYY-MM-DDT00:00:00Z. Note that this field only applies to certain streams, and only data generated on or after the start date will be replicated. Or leave it empty if you want to replicate all data. For more information, refer to the &lt;a href="https://docs.airbyte.com/integrations/sources/jira/"&gt;documentation&lt;/a&gt;.
     */
    @JsonIgnore
    public Optional<OffsetDateTime> startDate() {
        return startDate;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Jira API Token. See the &lt;a href="https://docs.airbyte.com/integrations/sources/jira"&gt;docs&lt;/a&gt; for more information on how to generate this key. API Token is used for Authorization to your account by BasicAuth.
     */
    public SourceJira withApiToken(String apiToken) {
        Utils.checkNotNull(apiToken, "apiToken");
        this.apiToken = apiToken;
        return this;
    }

    /**
     * The Domain for your Jira account, e.g. airbyteio.atlassian.net, airbyteio.jira.com, jira.your-domain.com
     */
    public SourceJira withDomain(String domain) {
        Utils.checkNotNull(domain, "domain");
        this.domain = domain;
        return this;
    }

    /**
     * The user email for your Jira account which you used to generate the API token. This field is used for Authorization to your account by BasicAuth.
     */
    public SourceJira withEmail(String email) {
        Utils.checkNotNull(email, "email");
        this.email = email;
        return this;
    }

    /**
     * When set to N, the connector will always refresh resources created within the past N minutes. By default, updated objects that are not newly created are not incrementally synced.
     */
    public SourceJira withLookbackWindowMinutes(long lookbackWindowMinutes) {
        Utils.checkNotNull(lookbackWindowMinutes, "lookbackWindowMinutes");
        this.lookbackWindowMinutes = Optional.ofNullable(lookbackWindowMinutes);
        return this;
    }

    /**
     * When set to N, the connector will always refresh resources created within the past N minutes. By default, updated objects that are not newly created are not incrementally synced.
     */
    public SourceJira withLookbackWindowMinutes(Optional<Long> lookbackWindowMinutes) {
        Utils.checkNotNull(lookbackWindowMinutes, "lookbackWindowMinutes");
        this.lookbackWindowMinutes = lookbackWindowMinutes;
        return this;
    }

    /**
     * The number of worker threads to use for the sync.
     */
    public SourceJira withNumWorkers(long numWorkers) {
        Utils.checkNotNull(numWorkers, "numWorkers");
        this.numWorkers = Optional.ofNullable(numWorkers);
        return this;
    }

    /**
     * The number of worker threads to use for the sync.
     */
    public SourceJira withNumWorkers(Optional<Long> numWorkers) {
        Utils.checkNotNull(numWorkers, "numWorkers");
        this.numWorkers = numWorkers;
        return this;
    }

    /**
     * List of Jira project keys to replicate data for, or leave it empty if you want to replicate data for all projects.
     */
    public SourceJira withProjects(List<String> projects) {
        Utils.checkNotNull(projects, "projects");
        this.projects = Optional.ofNullable(projects);
        return this;
    }

    /**
     * List of Jira project keys to replicate data for, or leave it empty if you want to replicate data for all projects.
     */
    public SourceJira withProjects(Optional<? extends List<String>> projects) {
        Utils.checkNotNull(projects, "projects");
        this.projects = projects;
        return this;
    }

    /**
     * The date from which you want to replicate data from Jira, use the format YYYY-MM-DDT00:00:00Z. Note that this field only applies to certain streams, and only data generated on or after the start date will be replicated. Or leave it empty if you want to replicate all data. For more information, refer to the &lt;a href="https://docs.airbyte.com/integrations/sources/jira/"&gt;documentation&lt;/a&gt;.
     */
    public SourceJira withStartDate(OffsetDateTime startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = Optional.ofNullable(startDate);
        return this;
    }

    /**
     * The date from which you want to replicate data from Jira, use the format YYYY-MM-DDT00:00:00Z. Note that this field only applies to certain streams, and only data generated on or after the start date will be replicated. Or leave it empty if you want to replicate all data. For more information, refer to the &lt;a href="https://docs.airbyte.com/integrations/sources/jira/"&gt;documentation&lt;/a&gt;.
     */
    public SourceJira withStartDate(Optional<OffsetDateTime> startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = startDate;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceJira other = (SourceJira) o;
        return 
            Objects.deepEquals(this.apiToken, other.apiToken) &&
            Objects.deepEquals(this.domain, other.domain) &&
            Objects.deepEquals(this.email, other.email) &&
            Objects.deepEquals(this.lookbackWindowMinutes, other.lookbackWindowMinutes) &&
            Objects.deepEquals(this.numWorkers, other.numWorkers) &&
            Objects.deepEquals(this.projects, other.projects) &&
            Objects.deepEquals(this.sourceType, other.sourceType) &&
            Objects.deepEquals(this.startDate, other.startDate);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            apiToken,
            domain,
            email,
            lookbackWindowMinutes,
            numWorkers,
            projects,
            sourceType,
            startDate);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceJira.class,
                "apiToken", apiToken,
                "domain", domain,
                "email", email,
                "lookbackWindowMinutes", lookbackWindowMinutes,
                "numWorkers", numWorkers,
                "projects", projects,
                "sourceType", sourceType,
                "startDate", startDate);
    }
    
    public final static class Builder {
 
        private String apiToken;
 
        private String domain;
 
        private String email;
 
        private Optional<Long> lookbackWindowMinutes;
 
        private Optional<Long> numWorkers;
 
        private Optional<? extends List<String>> projects = Optional.empty();
 
        private Optional<OffsetDateTime> startDate = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Jira API Token. See the &lt;a href="https://docs.airbyte.com/integrations/sources/jira"&gt;docs&lt;/a&gt; for more information on how to generate this key. API Token is used for Authorization to your account by BasicAuth.
         */
        public Builder apiToken(String apiToken) {
            Utils.checkNotNull(apiToken, "apiToken");
            this.apiToken = apiToken;
            return this;
        }

        /**
         * The Domain for your Jira account, e.g. airbyteio.atlassian.net, airbyteio.jira.com, jira.your-domain.com
         */
        public Builder domain(String domain) {
            Utils.checkNotNull(domain, "domain");
            this.domain = domain;
            return this;
        }

        /**
         * The user email for your Jira account which you used to generate the API token. This field is used for Authorization to your account by BasicAuth.
         */
        public Builder email(String email) {
            Utils.checkNotNull(email, "email");
            this.email = email;
            return this;
        }

        /**
         * When set to N, the connector will always refresh resources created within the past N minutes. By default, updated objects that are not newly created are not incrementally synced.
         */
        public Builder lookbackWindowMinutes(long lookbackWindowMinutes) {
            Utils.checkNotNull(lookbackWindowMinutes, "lookbackWindowMinutes");
            this.lookbackWindowMinutes = Optional.ofNullable(lookbackWindowMinutes);
            return this;
        }

        /**
         * When set to N, the connector will always refresh resources created within the past N minutes. By default, updated objects that are not newly created are not incrementally synced.
         */
        public Builder lookbackWindowMinutes(Optional<Long> lookbackWindowMinutes) {
            Utils.checkNotNull(lookbackWindowMinutes, "lookbackWindowMinutes");
            this.lookbackWindowMinutes = lookbackWindowMinutes;
            return this;
        }

        /**
         * The number of worker threads to use for the sync.
         */
        public Builder numWorkers(long numWorkers) {
            Utils.checkNotNull(numWorkers, "numWorkers");
            this.numWorkers = Optional.ofNullable(numWorkers);
            return this;
        }

        /**
         * The number of worker threads to use for the sync.
         */
        public Builder numWorkers(Optional<Long> numWorkers) {
            Utils.checkNotNull(numWorkers, "numWorkers");
            this.numWorkers = numWorkers;
            return this;
        }

        /**
         * List of Jira project keys to replicate data for, or leave it empty if you want to replicate data for all projects.
         */
        public Builder projects(List<String> projects) {
            Utils.checkNotNull(projects, "projects");
            this.projects = Optional.ofNullable(projects);
            return this;
        }

        /**
         * List of Jira project keys to replicate data for, or leave it empty if you want to replicate data for all projects.
         */
        public Builder projects(Optional<? extends List<String>> projects) {
            Utils.checkNotNull(projects, "projects");
            this.projects = projects;
            return this;
        }

        /**
         * The date from which you want to replicate data from Jira, use the format YYYY-MM-DDT00:00:00Z. Note that this field only applies to certain streams, and only data generated on or after the start date will be replicated. Or leave it empty if you want to replicate all data. For more information, refer to the &lt;a href="https://docs.airbyte.com/integrations/sources/jira/"&gt;documentation&lt;/a&gt;.
         */
        public Builder startDate(OffsetDateTime startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = Optional.ofNullable(startDate);
            return this;
        }

        /**
         * The date from which you want to replicate data from Jira, use the format YYYY-MM-DDT00:00:00Z. Note that this field only applies to certain streams, and only data generated on or after the start date will be replicated. Or leave it empty if you want to replicate all data. For more information, refer to the &lt;a href="https://docs.airbyte.com/integrations/sources/jira/"&gt;documentation&lt;/a&gt;.
         */
        public Builder startDate(Optional<OffsetDateTime> startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = startDate;
            return this;
        }
        
        public SourceJira build() {
            if (lookbackWindowMinutes == null) {
                lookbackWindowMinutes = _SINGLETON_VALUE_LookbackWindowMinutes.value();
            }
            if (numWorkers == null) {
                numWorkers = _SINGLETON_VALUE_NumWorkers.value();
            }
            return new SourceJira(
                apiToken,
                domain,
                email,
                lookbackWindowMinutes,
                numWorkers,
                projects,
                startDate);
        }

        private static final LazySingletonValue<Optional<Long>> _SINGLETON_VALUE_LookbackWindowMinutes =
                new LazySingletonValue<>(
                        "lookback_window_minutes",
                        "0",
                        new TypeReference<Optional<Long>>() {});

        private static final LazySingletonValue<Optional<Long>> _SINGLETON_VALUE_NumWorkers =
                new LazySingletonValue<>(
                        "num_workers",
                        "3",
                        new TypeReference<Optional<Long>>() {});

        private static final LazySingletonValue<Jira> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"jira\"",
                        new TypeReference<Jira>() {});
    }
}
