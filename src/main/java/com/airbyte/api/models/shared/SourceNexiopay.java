/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.time.OffsetDateTime;
import java.util.Objects;
import java.util.Optional;

public class SourceNexiopay {

    /**
     * Your Nexio API key (password). You can find it in the Nexio Dashboard under Settings &gt; User Management. Select the API user and copy the API key.
     */
    @JsonProperty("api_key")
    private String apiKey;

    @JsonProperty("sourceType")
    private Nexiopay sourceType;

    @JsonProperty("start_date")
    private OffsetDateTime startDate;

    /**
     * The subdomain for the Nexio API environment, such as 'nexiopaysandbox' or 'nexiopay'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subdomain")
    private Optional<? extends Subdomain> subdomain;

    /**
     * Your Nexio API username. You can find it in the Nexio Dashboard under Settings &gt; User Management. Select the API user and copy the username.
     */
    @JsonProperty("username")
    private String username;

    @JsonCreator
    public SourceNexiopay(
            @JsonProperty("api_key") String apiKey,
            @JsonProperty("start_date") OffsetDateTime startDate,
            @JsonProperty("subdomain") Optional<? extends Subdomain> subdomain,
            @JsonProperty("username") String username) {
        Utils.checkNotNull(apiKey, "apiKey");
        Utils.checkNotNull(startDate, "startDate");
        Utils.checkNotNull(subdomain, "subdomain");
        Utils.checkNotNull(username, "username");
        this.apiKey = apiKey;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
        this.startDate = startDate;
        this.subdomain = subdomain;
        this.username = username;
    }
    
    public SourceNexiopay(
            String apiKey,
            OffsetDateTime startDate,
            String username) {
        this(apiKey, startDate, Optional.empty(), username);
    }

    /**
     * Your Nexio API key (password). You can find it in the Nexio Dashboard under Settings &gt; User Management. Select the API user and copy the API key.
     */
    @JsonIgnore
    public String apiKey() {
        return apiKey;
    }

    @JsonIgnore
    public Nexiopay sourceType() {
        return sourceType;
    }

    @JsonIgnore
    public OffsetDateTime startDate() {
        return startDate;
    }

    /**
     * The subdomain for the Nexio API environment, such as 'nexiopaysandbox' or 'nexiopay'.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<Subdomain> subdomain() {
        return (Optional<Subdomain>) subdomain;
    }

    /**
     * Your Nexio API username. You can find it in the Nexio Dashboard under Settings &gt; User Management. Select the API user and copy the username.
     */
    @JsonIgnore
    public String username() {
        return username;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Your Nexio API key (password). You can find it in the Nexio Dashboard under Settings &gt; User Management. Select the API user and copy the API key.
     */
    public SourceNexiopay withApiKey(String apiKey) {
        Utils.checkNotNull(apiKey, "apiKey");
        this.apiKey = apiKey;
        return this;
    }

    public SourceNexiopay withStartDate(OffsetDateTime startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = startDate;
        return this;
    }

    /**
     * The subdomain for the Nexio API environment, such as 'nexiopaysandbox' or 'nexiopay'.
     */
    public SourceNexiopay withSubdomain(Subdomain subdomain) {
        Utils.checkNotNull(subdomain, "subdomain");
        this.subdomain = Optional.ofNullable(subdomain);
        return this;
    }

    /**
     * The subdomain for the Nexio API environment, such as 'nexiopaysandbox' or 'nexiopay'.
     */
    public SourceNexiopay withSubdomain(Optional<? extends Subdomain> subdomain) {
        Utils.checkNotNull(subdomain, "subdomain");
        this.subdomain = subdomain;
        return this;
    }

    /**
     * Your Nexio API username. You can find it in the Nexio Dashboard under Settings &gt; User Management. Select the API user and copy the username.
     */
    public SourceNexiopay withUsername(String username) {
        Utils.checkNotNull(username, "username");
        this.username = username;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceNexiopay other = (SourceNexiopay) o;
        return 
            Objects.deepEquals(this.apiKey, other.apiKey) &&
            Objects.deepEquals(this.sourceType, other.sourceType) &&
            Objects.deepEquals(this.startDate, other.startDate) &&
            Objects.deepEquals(this.subdomain, other.subdomain) &&
            Objects.deepEquals(this.username, other.username);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            apiKey,
            sourceType,
            startDate,
            subdomain,
            username);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceNexiopay.class,
                "apiKey", apiKey,
                "sourceType", sourceType,
                "startDate", startDate,
                "subdomain", subdomain,
                "username", username);
    }
    
    public final static class Builder {
 
        private String apiKey;
 
        private OffsetDateTime startDate;
 
        private Optional<? extends Subdomain> subdomain;
 
        private String username;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Your Nexio API key (password). You can find it in the Nexio Dashboard under Settings &gt; User Management. Select the API user and copy the API key.
         */
        public Builder apiKey(String apiKey) {
            Utils.checkNotNull(apiKey, "apiKey");
            this.apiKey = apiKey;
            return this;
        }

        public Builder startDate(OffsetDateTime startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = startDate;
            return this;
        }

        /**
         * The subdomain for the Nexio API environment, such as 'nexiopaysandbox' or 'nexiopay'.
         */
        public Builder subdomain(Subdomain subdomain) {
            Utils.checkNotNull(subdomain, "subdomain");
            this.subdomain = Optional.ofNullable(subdomain);
            return this;
        }

        /**
         * The subdomain for the Nexio API environment, such as 'nexiopaysandbox' or 'nexiopay'.
         */
        public Builder subdomain(Optional<? extends Subdomain> subdomain) {
            Utils.checkNotNull(subdomain, "subdomain");
            this.subdomain = subdomain;
            return this;
        }

        /**
         * Your Nexio API username. You can find it in the Nexio Dashboard under Settings &gt; User Management. Select the API user and copy the username.
         */
        public Builder username(String username) {
            Utils.checkNotNull(username, "username");
            this.username = username;
            return this;
        }
        
        public SourceNexiopay build() {
            if (subdomain == null) {
                subdomain = _SINGLETON_VALUE_Subdomain.value();
            }
            return new SourceNexiopay(
                apiKey,
                startDate,
                subdomain,
                username);
        }

        private static final LazySingletonValue<Nexiopay> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"nexiopay\"",
                        new TypeReference<Nexiopay>() {});

        private static final LazySingletonValue<Optional<? extends Subdomain>> _SINGLETON_VALUE_Subdomain =
                new LazySingletonValue<>(
                        "subdomain",
                        "\"nexiopay\"",
                        new TypeReference<Optional<? extends Subdomain>>() {});
    }
}
