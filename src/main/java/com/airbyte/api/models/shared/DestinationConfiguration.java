/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

import java.time.OffsetDateTime;
import java.time.LocalDate;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.airbyte.api.utils.TypedObject;
import com.airbyte.api.utils.Utils.JsonShape;

/**
 * DestinationConfiguration - The values required to configure the destination.
 */

@JsonDeserialize(using = DestinationConfiguration._Deserializer.class)
public class DestinationConfiguration {

    @com.fasterxml.jackson.annotation.JsonValue
    private TypedObject value;
    
    private DestinationConfiguration(TypedObject value) {
        this.value = value;
    }

    public static DestinationConfiguration of(DestinationGoogleSheets value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationGoogleSheets>(){}));
    }

    public static DestinationConfiguration of(DestinationAstra value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationAstra>(){}));
    }

    public static DestinationConfiguration of(DestinationAwsDatalake value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationAwsDatalake>(){}));
    }

    public static DestinationConfiguration of(DestinationAzureBlobStorage value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationAzureBlobStorage>(){}));
    }

    public static DestinationConfiguration of(DestinationBigquery value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationBigquery>(){}));
    }

    public static DestinationConfiguration of(DestinationClickhouse value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationClickhouse>(){}));
    }

    public static DestinationConfiguration of(DestinationConvex value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationConvex>(){}));
    }

    public static DestinationConfiguration of(DestinationDatabricks value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationDatabricks>(){}));
    }

    public static DestinationConfiguration of(DestinationDevNull value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationDevNull>(){}));
    }

    public static DestinationConfiguration of(DestinationDuckdb value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationDuckdb>(){}));
    }

    public static DestinationConfiguration of(DestinationDynamodb value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationDynamodb>(){}));
    }

    public static DestinationConfiguration of(DestinationElasticsearch value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationElasticsearch>(){}));
    }

    public static DestinationConfiguration of(DestinationFirestore value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationFirestore>(){}));
    }

    public static DestinationConfiguration of(DestinationGcs value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationGcs>(){}));
    }

    public static DestinationConfiguration of(DestinationLangchain value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationLangchain>(){}));
    }

    public static DestinationConfiguration of(DestinationMilvus value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationMilvus>(){}));
    }

    public static DestinationConfiguration of(DestinationMongodb value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationMongodb>(){}));
    }

    public static DestinationConfiguration of(DestinationMssql value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationMssql>(){}));
    }

    public static DestinationConfiguration of(DestinationMysql value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationMysql>(){}));
    }

    public static DestinationConfiguration of(DestinationOracle value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationOracle>(){}));
    }

    public static DestinationConfiguration of(DestinationPinecone value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationPinecone>(){}));
    }

    public static DestinationConfiguration of(DestinationPostgres value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationPostgres>(){}));
    }

    public static DestinationConfiguration of(DestinationPubsub value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationPubsub>(){}));
    }

    public static DestinationConfiguration of(DestinationQdrant value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationQdrant>(){}));
    }

    public static DestinationConfiguration of(DestinationRedis value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationRedis>(){}));
    }

    public static DestinationConfiguration of(DestinationRedshift value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationRedshift>(){}));
    }

    public static DestinationConfiguration of(DestinationS3 value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationS3>(){}));
    }

    public static DestinationConfiguration of(DestinationS3Glue value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationS3Glue>(){}));
    }

    public static DestinationConfiguration of(DestinationSftpJson value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationSftpJson>(){}));
    }

    public static DestinationConfiguration of(DestinationSnowflake value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationSnowflake>(){}));
    }

    public static DestinationConfiguration of(DestinationTeradata value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationTeradata>(){}));
    }

    public static DestinationConfiguration of(DestinationTypesense value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationTypesense>(){}));
    }

    public static DestinationConfiguration of(DestinationVectara value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationVectara>(){}));
    }

    public static DestinationConfiguration of(DestinationWeaviate value) {
        Utils.checkNotNull(value, "value");
        return new DestinationConfiguration(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationWeaviate>(){}));
    }
    
    /**
     * Returns an instance of one of these types:
     * <ul>
     * <li>{@code DestinationGoogleSheets}</li>
     * <li>{@code DestinationAstra}</li>
     * <li>{@code DestinationAwsDatalake}</li>
     * <li>{@code DestinationAzureBlobStorage}</li>
     * <li>{@code DestinationBigquery}</li>
     * <li>{@code DestinationClickhouse}</li>
     * <li>{@code DestinationConvex}</li>
     * <li>{@code DestinationDatabricks}</li>
     * <li>{@code DestinationDevNull}</li>
     * <li>{@code DestinationDuckdb}</li>
     * <li>{@code DestinationDynamodb}</li>
     * <li>{@code DestinationElasticsearch}</li>
     * <li>{@code DestinationFirestore}</li>
     * <li>{@code DestinationGcs}</li>
     * <li>{@code DestinationLangchain}</li>
     * <li>{@code DestinationMilvus}</li>
     * <li>{@code DestinationMongodb}</li>
     * <li>{@code DestinationMssql}</li>
     * <li>{@code DestinationMysql}</li>
     * <li>{@code DestinationOracle}</li>
     * <li>{@code DestinationPinecone}</li>
     * <li>{@code DestinationPostgres}</li>
     * <li>{@code DestinationPubsub}</li>
     * <li>{@code DestinationQdrant}</li>
     * <li>{@code DestinationRedis}</li>
     * <li>{@code DestinationRedshift}</li>
     * <li>{@code DestinationS3}</li>
     * <li>{@code DestinationS3Glue}</li>
     * <li>{@code DestinationSftpJson}</li>
     * <li>{@code DestinationSnowflake}</li>
     * <li>{@code DestinationTeradata}</li>
     * <li>{@code DestinationTypesense}</li>
     * <li>{@code DestinationVectara}</li>
     * <li>{@code DestinationWeaviate}</li>
     * </ul>
     * 
     * <p>Use {@code instanceof} to determine what type is returned. For example:
     * 
     * <pre>
     * if (obj.value() instanceof String) {
     *     String answer = (String) obj.value();
     *     System.out.println("answer=" + answer);
     * }
     * </pre>
     * 
     * @return value of oneOf type
     **/ 
    public java.lang.Object value() {
        return value.value();
    }    
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DestinationConfiguration other = (DestinationConfiguration) o;
        return java.util.Objects.deepEquals(this.value.value(), other.value.value()); 
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(value.value());
    }
    
    @SuppressWarnings("serial")
    public static final class _Deserializer extends com.airbyte.api.utils.OneOfDeserializer<DestinationConfiguration> {

        public _Deserializer() {
            super(DestinationConfiguration.class,
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationGoogleSheets>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationAstra>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationAwsDatalake>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationAzureBlobStorage>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationBigquery>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationClickhouse>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationConvex>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationDatabricks>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationDevNull>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationDuckdb>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationDynamodb>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationElasticsearch>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationFirestore>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationGcs>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationLangchain>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationMilvus>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationMongodb>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationMssql>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationMysql>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationOracle>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationPinecone>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationPostgres>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationPubsub>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationQdrant>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationRedis>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationRedshift>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationS3>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationS3Glue>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationSftpJson>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationSnowflake>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationTeradata>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationTypesense>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationVectara>() {}, Utils.JsonShape.DEFAULT),
                  Utils.TypeReferenceWithShape.of(new TypeReference<DestinationWeaviate>() {}, Utils.JsonShape.DEFAULT));
        }
    }
    
    @Override
    public String toString() {
        return Utils.toString(DestinationConfiguration.class,
                "value", value);
    }
 
}
