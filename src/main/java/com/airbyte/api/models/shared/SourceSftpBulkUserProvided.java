/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class SourceSftpBulkUserProvided {

    /**
     * The column names that will be used while emitting the CSV records
     */
    @JsonProperty("column_names")
    private java.util.List<String> columnNames;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("header_definition_type")
    private Optional<? extends SourceSftpBulkSchemasStreamsHeaderDefinitionType> headerDefinitionType;

    @JsonCreator
    public SourceSftpBulkUserProvided(
            @JsonProperty("column_names") java.util.List<String> columnNames) {
        Utils.checkNotNull(columnNames, "columnNames");
        this.columnNames = columnNames;
        this.headerDefinitionType = Builder._SINGLETON_VALUE_HeaderDefinitionType.value();
    }

    /**
     * The column names that will be used while emitting the CSV records
     */
    @JsonIgnore
    public java.util.List<String> columnNames() {
        return columnNames;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<SourceSftpBulkSchemasStreamsHeaderDefinitionType> headerDefinitionType() {
        return (Optional<SourceSftpBulkSchemasStreamsHeaderDefinitionType>) headerDefinitionType;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The column names that will be used while emitting the CSV records
     */
    public SourceSftpBulkUserProvided withColumnNames(java.util.List<String> columnNames) {
        Utils.checkNotNull(columnNames, "columnNames");
        this.columnNames = columnNames;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceSftpBulkUserProvided other = (SourceSftpBulkUserProvided) o;
        return 
            java.util.Objects.deepEquals(this.columnNames, other.columnNames) &&
            java.util.Objects.deepEquals(this.headerDefinitionType, other.headerDefinitionType);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            columnNames,
            headerDefinitionType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceSftpBulkUserProvided.class,
                "columnNames", columnNames,
                "headerDefinitionType", headerDefinitionType);
    }
    
    public final static class Builder {
 
        private java.util.List<String> columnNames;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The column names that will be used while emitting the CSV records
         */
        public Builder columnNames(java.util.List<String> columnNames) {
            Utils.checkNotNull(columnNames, "columnNames");
            this.columnNames = columnNames;
            return this;
        }
        
        public SourceSftpBulkUserProvided build() {
            return new SourceSftpBulkUserProvided(
                columnNames);
        }

        private static final LazySingletonValue<Optional<? extends SourceSftpBulkSchemasStreamsHeaderDefinitionType>> _SINGLETON_VALUE_HeaderDefinitionType =
                new LazySingletonValue<>(
                        "header_definition_type",
                        "\"User Provided\"",
                        new TypeReference<Optional<? extends SourceSftpBulkSchemasStreamsHeaderDefinitionType>>() {});
    }
}

