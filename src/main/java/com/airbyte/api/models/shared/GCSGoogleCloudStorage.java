/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class GCSGoogleCloudStorage {

    /**
     * In order to access private Buckets stored on Google Cloud, this connector would need a service account json credentials with the proper permissions as described &lt;a href="https://cloud.google.com/iam/docs/service-accounts" target="_blank"&gt;here&lt;/a&gt;. Please generate the credentials.json file and copy/paste its content to this field (expecting JSON formats). If accessing publicly available data, this field is not necessary.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service_account_json")
    private Optional<? extends String> serviceAccountJson;

    @JsonProperty("storage")
    private SourceFileStorage storage;

    @JsonCreator
    public GCSGoogleCloudStorage(
            @JsonProperty("service_account_json") Optional<? extends String> serviceAccountJson) {
        Utils.checkNotNull(serviceAccountJson, "serviceAccountJson");
        this.serviceAccountJson = serviceAccountJson;
        this.storage = Builder._SINGLETON_VALUE_Storage.value();
    }
    
    public GCSGoogleCloudStorage() {
        this(Optional.empty());
    }

    /**
     * In order to access private Buckets stored on Google Cloud, this connector would need a service account json credentials with the proper permissions as described &lt;a href="https://cloud.google.com/iam/docs/service-accounts" target="_blank"&gt;here&lt;/a&gt;. Please generate the credentials.json file and copy/paste its content to this field (expecting JSON formats). If accessing publicly available data, this field is not necessary.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<String> serviceAccountJson() {
        return (Optional<String>) serviceAccountJson;
    }

    @JsonIgnore
    public SourceFileStorage storage() {
        return storage;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * In order to access private Buckets stored on Google Cloud, this connector would need a service account json credentials with the proper permissions as described &lt;a href="https://cloud.google.com/iam/docs/service-accounts" target="_blank"&gt;here&lt;/a&gt;. Please generate the credentials.json file and copy/paste its content to this field (expecting JSON formats). If accessing publicly available data, this field is not necessary.
     */
    public GCSGoogleCloudStorage withServiceAccountJson(String serviceAccountJson) {
        Utils.checkNotNull(serviceAccountJson, "serviceAccountJson");
        this.serviceAccountJson = Optional.ofNullable(serviceAccountJson);
        return this;
    }

    /**
     * In order to access private Buckets stored on Google Cloud, this connector would need a service account json credentials with the proper permissions as described &lt;a href="https://cloud.google.com/iam/docs/service-accounts" target="_blank"&gt;here&lt;/a&gt;. Please generate the credentials.json file and copy/paste its content to this field (expecting JSON formats). If accessing publicly available data, this field is not necessary.
     */
    public GCSGoogleCloudStorage withServiceAccountJson(Optional<? extends String> serviceAccountJson) {
        Utils.checkNotNull(serviceAccountJson, "serviceAccountJson");
        this.serviceAccountJson = serviceAccountJson;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GCSGoogleCloudStorage other = (GCSGoogleCloudStorage) o;
        return 
            java.util.Objects.deepEquals(this.serviceAccountJson, other.serviceAccountJson) &&
            java.util.Objects.deepEquals(this.storage, other.storage);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            serviceAccountJson,
            storage);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GCSGoogleCloudStorage.class,
                "serviceAccountJson", serviceAccountJson,
                "storage", storage);
    }
    
    public final static class Builder {
 
        private Optional<? extends String> serviceAccountJson = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * In order to access private Buckets stored on Google Cloud, this connector would need a service account json credentials with the proper permissions as described &lt;a href="https://cloud.google.com/iam/docs/service-accounts" target="_blank"&gt;here&lt;/a&gt;. Please generate the credentials.json file and copy/paste its content to this field (expecting JSON formats). If accessing publicly available data, this field is not necessary.
         */
        public Builder serviceAccountJson(String serviceAccountJson) {
            Utils.checkNotNull(serviceAccountJson, "serviceAccountJson");
            this.serviceAccountJson = Optional.ofNullable(serviceAccountJson);
            return this;
        }

        /**
         * In order to access private Buckets stored on Google Cloud, this connector would need a service account json credentials with the proper permissions as described &lt;a href="https://cloud.google.com/iam/docs/service-accounts" target="_blank"&gt;here&lt;/a&gt;. Please generate the credentials.json file and copy/paste its content to this field (expecting JSON formats). If accessing publicly available data, this field is not necessary.
         */
        public Builder serviceAccountJson(Optional<? extends String> serviceAccountJson) {
            Utils.checkNotNull(serviceAccountJson, "serviceAccountJson");
            this.serviceAccountJson = serviceAccountJson;
            return this;
        }
        
        public GCSGoogleCloudStorage build() {
            return new GCSGoogleCloudStorage(
                serviceAccountJson);
        }

        private static final LazySingletonValue<SourceFileStorage> _SINGLETON_VALUE_Storage =
                new LazySingletonValue<>(
                        "storage",
                        "\"GCS\"",
                        new TypeReference<SourceFileStorage>() {});
    }
}

