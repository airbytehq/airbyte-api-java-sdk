/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;


import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class SourceZohoCampaign {

    @JsonProperty("client_id_2")
    private String clientId2;

    @JsonProperty("client_refresh_token")
    private String clientRefreshToken;

    @JsonProperty("client_secret_2")
    private String clientSecret2;

    @JsonProperty("data_center")
    private SourceZohoCampaignDataCenter dataCenter;

    @JsonProperty("sourceType")
    private ZohoCampaign sourceType;

    @JsonCreator
    public SourceZohoCampaign(
            @JsonProperty("client_id_2") String clientId2,
            @JsonProperty("client_refresh_token") String clientRefreshToken,
            @JsonProperty("client_secret_2") String clientSecret2,
            @JsonProperty("data_center") SourceZohoCampaignDataCenter dataCenter) {
        Utils.checkNotNull(clientId2, "clientId2");
        Utils.checkNotNull(clientRefreshToken, "clientRefreshToken");
        Utils.checkNotNull(clientSecret2, "clientSecret2");
        Utils.checkNotNull(dataCenter, "dataCenter");
        this.clientId2 = clientId2;
        this.clientRefreshToken = clientRefreshToken;
        this.clientSecret2 = clientSecret2;
        this.dataCenter = dataCenter;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
    }

    @JsonIgnore
    public String clientId2() {
        return clientId2;
    }

    @JsonIgnore
    public String clientRefreshToken() {
        return clientRefreshToken;
    }

    @JsonIgnore
    public String clientSecret2() {
        return clientSecret2;
    }

    @JsonIgnore
    public SourceZohoCampaignDataCenter dataCenter() {
        return dataCenter;
    }

    @JsonIgnore
    public ZohoCampaign sourceType() {
        return sourceType;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public SourceZohoCampaign withClientId2(String clientId2) {
        Utils.checkNotNull(clientId2, "clientId2");
        this.clientId2 = clientId2;
        return this;
    }

    public SourceZohoCampaign withClientRefreshToken(String clientRefreshToken) {
        Utils.checkNotNull(clientRefreshToken, "clientRefreshToken");
        this.clientRefreshToken = clientRefreshToken;
        return this;
    }

    public SourceZohoCampaign withClientSecret2(String clientSecret2) {
        Utils.checkNotNull(clientSecret2, "clientSecret2");
        this.clientSecret2 = clientSecret2;
        return this;
    }

    public SourceZohoCampaign withDataCenter(SourceZohoCampaignDataCenter dataCenter) {
        Utils.checkNotNull(dataCenter, "dataCenter");
        this.dataCenter = dataCenter;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceZohoCampaign other = (SourceZohoCampaign) o;
        return 
            Objects.deepEquals(this.clientId2, other.clientId2) &&
            Objects.deepEquals(this.clientRefreshToken, other.clientRefreshToken) &&
            Objects.deepEquals(this.clientSecret2, other.clientSecret2) &&
            Objects.deepEquals(this.dataCenter, other.dataCenter) &&
            Objects.deepEquals(this.sourceType, other.sourceType);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            clientId2,
            clientRefreshToken,
            clientSecret2,
            dataCenter,
            sourceType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceZohoCampaign.class,
                "clientId2", clientId2,
                "clientRefreshToken", clientRefreshToken,
                "clientSecret2", clientSecret2,
                "dataCenter", dataCenter,
                "sourceType", sourceType);
    }
    
    public final static class Builder {
 
        private String clientId2;
 
        private String clientRefreshToken;
 
        private String clientSecret2;
 
        private SourceZohoCampaignDataCenter dataCenter;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder clientId2(String clientId2) {
            Utils.checkNotNull(clientId2, "clientId2");
            this.clientId2 = clientId2;
            return this;
        }

        public Builder clientRefreshToken(String clientRefreshToken) {
            Utils.checkNotNull(clientRefreshToken, "clientRefreshToken");
            this.clientRefreshToken = clientRefreshToken;
            return this;
        }

        public Builder clientSecret2(String clientSecret2) {
            Utils.checkNotNull(clientSecret2, "clientSecret2");
            this.clientSecret2 = clientSecret2;
            return this;
        }

        public Builder dataCenter(SourceZohoCampaignDataCenter dataCenter) {
            Utils.checkNotNull(dataCenter, "dataCenter");
            this.dataCenter = dataCenter;
            return this;
        }
        
        public SourceZohoCampaign build() {
            return new SourceZohoCampaign(
                clientId2,
                clientRefreshToken,
                clientSecret2,
                dataCenter);
        }

        private static final LazySingletonValue<ZohoCampaign> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"zoho-campaign\"",
                        new TypeReference<ZohoCampaign>() {});
    }
}

