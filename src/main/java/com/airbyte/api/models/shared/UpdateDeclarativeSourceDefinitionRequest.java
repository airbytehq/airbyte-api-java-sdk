/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class UpdateDeclarativeSourceDefinitionRequest {

    /**
     * Low code CDK manifest JSON object
     */
    @JsonProperty("manifest")
    private Object manifest;

    @JsonCreator
    public UpdateDeclarativeSourceDefinitionRequest(
            @JsonProperty("manifest") Object manifest) {
        Utils.checkNotNull(manifest, "manifest");
        this.manifest = manifest;
    }

    /**
     * Low code CDK manifest JSON object
     */
    @JsonIgnore
    public Object manifest() {
        return manifest;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Low code CDK manifest JSON object
     */
    public UpdateDeclarativeSourceDefinitionRequest withManifest(Object manifest) {
        Utils.checkNotNull(manifest, "manifest");
        this.manifest = manifest;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateDeclarativeSourceDefinitionRequest other = (UpdateDeclarativeSourceDefinitionRequest) o;
        return 
            Objects.deepEquals(this.manifest, other.manifest);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            manifest);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateDeclarativeSourceDefinitionRequest.class,
                "manifest", manifest);
    }
    
    public final static class Builder {
 
        private Object manifest;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Low code CDK manifest JSON object
         */
        public Builder manifest(Object manifest) {
            Utils.checkNotNull(manifest, "manifest");
            this.manifest = manifest;
            return this;
        }
        
        public UpdateDeclarativeSourceDefinitionRequest build() {
            return new UpdateDeclarativeSourceDefinitionRequest(
                manifest);
        }
    }
}
