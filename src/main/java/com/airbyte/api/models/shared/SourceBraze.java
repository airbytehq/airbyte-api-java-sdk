/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDate;
import java.util.Objects;

public class SourceBraze {

    /**
     * Braze REST API key
     */
    @JsonProperty("api_key")
    private String apiKey;

    @JsonProperty("sourceType")
    private Braze sourceType;

    /**
     * Rows after this date will be synced
     */
    @JsonProperty("start_date")
    private LocalDate startDate;

    /**
     * Braze REST API endpoint
     */
    @JsonProperty("url")
    private String url;

    @JsonCreator
    public SourceBraze(
            @JsonProperty("api_key") String apiKey,
            @JsonProperty("start_date") LocalDate startDate,
            @JsonProperty("url") String url) {
        Utils.checkNotNull(apiKey, "apiKey");
        Utils.checkNotNull(startDate, "startDate");
        Utils.checkNotNull(url, "url");
        this.apiKey = apiKey;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
        this.startDate = startDate;
        this.url = url;
    }

    /**
     * Braze REST API key
     */
    @JsonIgnore
    public String apiKey() {
        return apiKey;
    }

    @JsonIgnore
    public Braze sourceType() {
        return sourceType;
    }

    /**
     * Rows after this date will be synced
     */
    @JsonIgnore
    public LocalDate startDate() {
        return startDate;
    }

    /**
     * Braze REST API endpoint
     */
    @JsonIgnore
    public String url() {
        return url;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Braze REST API key
     */
    public SourceBraze withApiKey(String apiKey) {
        Utils.checkNotNull(apiKey, "apiKey");
        this.apiKey = apiKey;
        return this;
    }

    /**
     * Rows after this date will be synced
     */
    public SourceBraze withStartDate(LocalDate startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = startDate;
        return this;
    }

    /**
     * Braze REST API endpoint
     */
    public SourceBraze withUrl(String url) {
        Utils.checkNotNull(url, "url");
        this.url = url;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceBraze other = (SourceBraze) o;
        return 
            Objects.deepEquals(this.apiKey, other.apiKey) &&
            Objects.deepEquals(this.sourceType, other.sourceType) &&
            Objects.deepEquals(this.startDate, other.startDate) &&
            Objects.deepEquals(this.url, other.url);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            apiKey,
            sourceType,
            startDate,
            url);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceBraze.class,
                "apiKey", apiKey,
                "sourceType", sourceType,
                "startDate", startDate,
                "url", url);
    }
    
    public final static class Builder {
 
        private String apiKey;
 
        private LocalDate startDate;
 
        private String url;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Braze REST API key
         */
        public Builder apiKey(String apiKey) {
            Utils.checkNotNull(apiKey, "apiKey");
            this.apiKey = apiKey;
            return this;
        }

        /**
         * Rows after this date will be synced
         */
        public Builder startDate(LocalDate startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = startDate;
            return this;
        }

        /**
         * Braze REST API endpoint
         */
        public Builder url(String url) {
            Utils.checkNotNull(url, "url");
            this.url = url;
            return this;
        }
        
        public SourceBraze build() {
            return new SourceBraze(
                apiKey,
                startDate,
                url);
        }

        private static final LazySingletonValue<Braze> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"braze\"",
                        new TypeReference<Braze>() {});
    }
}
