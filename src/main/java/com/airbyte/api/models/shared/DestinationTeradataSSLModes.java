/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.OneOfDeserializer;
import com.airbyte.api.utils.TypedObject;
import com.airbyte.api.utils.Utils.JsonShape;
import com.airbyte.api.utils.Utils.TypeReferenceWithShape;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;

/**
 * DestinationTeradataSSLModes
 * 
 * <p>SSL connection modes. 
 *  &lt;b&gt;disable&lt;/b&gt; - Chose this mode to disable encryption of communication between Airbyte and destination database
 *  &lt;b&gt;allow&lt;/b&gt; - Chose this mode to enable encryption only when required by the destination database
 *  &lt;b&gt;prefer&lt;/b&gt; - Chose this mode to allow unencrypted connection only if the destination database does not support encryption
 *  &lt;b&gt;require&lt;/b&gt; - Chose this mode to always require encryption. If the destination database server does not support encryption, connection will fail
 *   &lt;b&gt;verify-ca&lt;/b&gt; - Chose this mode to always require encryption and to verify that the destination database server has a valid SSL certificate
 *   &lt;b&gt;verify-full&lt;/b&gt; - This is the most secure mode. Chose this mode to always require encryption and to verify the identity of the destination database server
 *  See more information - &lt;a href="https://teradata-docs.s3.amazonaws.com/doc/connectivity/jdbc/reference/current/jdbcug_chapter_2.html#URL_SSLMODE"&gt; in the docs&lt;/a&gt;.
 */
@JsonDeserialize(using = DestinationTeradataSSLModes._Deserializer.class)
public class DestinationTeradataSSLModes {

    @JsonValue
    private TypedObject value;
    
    private DestinationTeradataSSLModes(TypedObject value) {
        this.value = value;
    }

    public static DestinationTeradataSSLModes of(DestinationTeradataDisable value) {
        Utils.checkNotNull(value, "value");
        return new DestinationTeradataSSLModes(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationTeradataDisable>(){}));
    }

    public static DestinationTeradataSSLModes of(DestinationTeradataAllow value) {
        Utils.checkNotNull(value, "value");
        return new DestinationTeradataSSLModes(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationTeradataAllow>(){}));
    }

    public static DestinationTeradataSSLModes of(DestinationTeradataPrefer value) {
        Utils.checkNotNull(value, "value");
        return new DestinationTeradataSSLModes(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationTeradataPrefer>(){}));
    }

    public static DestinationTeradataSSLModes of(DestinationTeradataRequire value) {
        Utils.checkNotNull(value, "value");
        return new DestinationTeradataSSLModes(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationTeradataRequire>(){}));
    }

    public static DestinationTeradataSSLModes of(DestinationTeradataVerifyCa value) {
        Utils.checkNotNull(value, "value");
        return new DestinationTeradataSSLModes(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationTeradataVerifyCa>(){}));
    }

    public static DestinationTeradataSSLModes of(DestinationTeradataVerifyFull value) {
        Utils.checkNotNull(value, "value");
        return new DestinationTeradataSSLModes(TypedObject.of(value, JsonShape.DEFAULT, new TypeReference<DestinationTeradataVerifyFull>(){}));
    }
    
    /**
     * Returns an instance of one of these types:
     * <ul>
     * <li>{@code com.airbyte.api.models.shared.DestinationTeradataDisable}</li>
     * <li>{@code com.airbyte.api.models.shared.DestinationTeradataAllow}</li>
     * <li>{@code com.airbyte.api.models.shared.DestinationTeradataPrefer}</li>
     * <li>{@code com.airbyte.api.models.shared.DestinationTeradataRequire}</li>
     * <li>{@code com.airbyte.api.models.shared.DestinationTeradataVerifyCa}</li>
     * <li>{@code com.airbyte.api.models.shared.DestinationTeradataVerifyFull}</li>
     * </ul>
     * 
     * <p>Use {@code instanceof} to determine what type is returned. For example:
     * 
     * <pre>
     * if (obj.value() instanceof String) {
     *     String answer = (String) obj.value();
     *     System.out.println("answer=" + answer);
     * }
     * </pre>
     * 
     * @return value of oneOf type
     **/ 
    public java.lang.Object value() {
        return value.value();
    }    
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DestinationTeradataSSLModes other = (DestinationTeradataSSLModes) o;
        return Objects.deepEquals(this.value.value(), other.value.value()); 
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(value.value());
    }
    
    @SuppressWarnings("serial")
    public static final class _Deserializer extends OneOfDeserializer<DestinationTeradataSSLModes> {

        public _Deserializer() {
            super(DestinationTeradataSSLModes.class, false,
                  TypeReferenceWithShape.of(new TypeReference<DestinationTeradataVerifyFull>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<DestinationTeradataVerifyCa>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<DestinationTeradataRequire>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<DestinationTeradataPrefer>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<DestinationTeradataAllow>() {}, JsonShape.DEFAULT),
                  TypeReferenceWithShape.of(new TypeReference<DestinationTeradataDisable>() {}, JsonShape.DEFAULT));
        }
    }
    
    @Override
    public String toString() {
        return Utils.toString(DestinationTeradataSSLModes.class,
                "value", value);
    }
 
}

