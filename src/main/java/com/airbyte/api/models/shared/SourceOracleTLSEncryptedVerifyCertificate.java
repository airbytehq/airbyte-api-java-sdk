/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
/**
 * SourceOracleTLSEncryptedVerifyCertificate - Verify and use the certificate provided by the server.
 */

public class SourceOracleTLSEncryptedVerifyCertificate {

    @JsonProperty("encryption_method")
    private SourceOracleSchemasEncryptionEncryptionMethod encryptionMethod;

    /**
     * Privacy Enhanced Mail (PEM) files are concatenated certificate containers frequently used in certificate installations.
     */
    @JsonProperty("ssl_certificate")
    private String sslCertificate;

    @JsonCreator
    public SourceOracleTLSEncryptedVerifyCertificate(
            @JsonProperty("ssl_certificate") String sslCertificate) {
        Utils.checkNotNull(sslCertificate, "sslCertificate");
        this.encryptionMethod = Builder._SINGLETON_VALUE_EncryptionMethod.value();
        this.sslCertificate = sslCertificate;
    }

    @JsonIgnore
    public SourceOracleSchemasEncryptionEncryptionMethod encryptionMethod() {
        return encryptionMethod;
    }

    /**
     * Privacy Enhanced Mail (PEM) files are concatenated certificate containers frequently used in certificate installations.
     */
    @JsonIgnore
    public String sslCertificate() {
        return sslCertificate;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Privacy Enhanced Mail (PEM) files are concatenated certificate containers frequently used in certificate installations.
     */
    public SourceOracleTLSEncryptedVerifyCertificate withSslCertificate(String sslCertificate) {
        Utils.checkNotNull(sslCertificate, "sslCertificate");
        this.sslCertificate = sslCertificate;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceOracleTLSEncryptedVerifyCertificate other = (SourceOracleTLSEncryptedVerifyCertificate) o;
        return 
            java.util.Objects.deepEquals(this.encryptionMethod, other.encryptionMethod) &&
            java.util.Objects.deepEquals(this.sslCertificate, other.sslCertificate);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            encryptionMethod,
            sslCertificate);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceOracleTLSEncryptedVerifyCertificate.class,
                "encryptionMethod", encryptionMethod,
                "sslCertificate", sslCertificate);
    }
    
    public final static class Builder {
 
        private String sslCertificate;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Privacy Enhanced Mail (PEM) files are concatenated certificate containers frequently used in certificate installations.
         */
        public Builder sslCertificate(String sslCertificate) {
            Utils.checkNotNull(sslCertificate, "sslCertificate");
            this.sslCertificate = sslCertificate;
            return this;
        }
        
        public SourceOracleTLSEncryptedVerifyCertificate build() {
            return new SourceOracleTLSEncryptedVerifyCertificate(
                sslCertificate);
        }

        private static final LazySingletonValue<SourceOracleSchemasEncryptionEncryptionMethod> _SINGLETON_VALUE_EncryptionMethod =
                new LazySingletonValue<>(
                        "encryption_method",
                        "\"encrypted_verify_certificate\"",
                        new TypeReference<SourceOracleSchemasEncryptionEncryptionMethod>() {});
    }
}

