/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public class SourceTrackPms {

    @JsonProperty("api_key")
    private String apiKey;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("api_secret")
    private Optional<String> apiSecret;

    @JsonProperty("customer_domain")
    private String customerDomain;

    @JsonProperty("sourceType")
    private TrackPms sourceType;

    @JsonCreator
    public SourceTrackPms(
            @JsonProperty("api_key") String apiKey,
            @JsonProperty("api_secret") Optional<String> apiSecret,
            @JsonProperty("customer_domain") String customerDomain) {
        Utils.checkNotNull(apiKey, "apiKey");
        Utils.checkNotNull(apiSecret, "apiSecret");
        Utils.checkNotNull(customerDomain, "customerDomain");
        this.apiKey = apiKey;
        this.apiSecret = apiSecret;
        this.customerDomain = customerDomain;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
    }
    
    public SourceTrackPms(
            String apiKey,
            String customerDomain) {
        this(apiKey, Optional.empty(), customerDomain);
    }

    @JsonIgnore
    public String apiKey() {
        return apiKey;
    }

    @JsonIgnore
    public Optional<String> apiSecret() {
        return apiSecret;
    }

    @JsonIgnore
    public String customerDomain() {
        return customerDomain;
    }

    @JsonIgnore
    public TrackPms sourceType() {
        return sourceType;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public SourceTrackPms withApiKey(String apiKey) {
        Utils.checkNotNull(apiKey, "apiKey");
        this.apiKey = apiKey;
        return this;
    }

    public SourceTrackPms withApiSecret(String apiSecret) {
        Utils.checkNotNull(apiSecret, "apiSecret");
        this.apiSecret = Optional.ofNullable(apiSecret);
        return this;
    }

    public SourceTrackPms withApiSecret(Optional<String> apiSecret) {
        Utils.checkNotNull(apiSecret, "apiSecret");
        this.apiSecret = apiSecret;
        return this;
    }

    public SourceTrackPms withCustomerDomain(String customerDomain) {
        Utils.checkNotNull(customerDomain, "customerDomain");
        this.customerDomain = customerDomain;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceTrackPms other = (SourceTrackPms) o;
        return 
            Objects.deepEquals(this.apiKey, other.apiKey) &&
            Objects.deepEquals(this.apiSecret, other.apiSecret) &&
            Objects.deepEquals(this.customerDomain, other.customerDomain) &&
            Objects.deepEquals(this.sourceType, other.sourceType);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            apiKey,
            apiSecret,
            customerDomain,
            sourceType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceTrackPms.class,
                "apiKey", apiKey,
                "apiSecret", apiSecret,
                "customerDomain", customerDomain,
                "sourceType", sourceType);
    }
    
    public final static class Builder {
 
        private String apiKey;
 
        private Optional<String> apiSecret = Optional.empty();
 
        private String customerDomain;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder apiKey(String apiKey) {
            Utils.checkNotNull(apiKey, "apiKey");
            this.apiKey = apiKey;
            return this;
        }

        public Builder apiSecret(String apiSecret) {
            Utils.checkNotNull(apiSecret, "apiSecret");
            this.apiSecret = Optional.ofNullable(apiSecret);
            return this;
        }

        public Builder apiSecret(Optional<String> apiSecret) {
            Utils.checkNotNull(apiSecret, "apiSecret");
            this.apiSecret = apiSecret;
            return this;
        }

        public Builder customerDomain(String customerDomain) {
            Utils.checkNotNull(customerDomain, "customerDomain");
            this.customerDomain = customerDomain;
            return this;
        }
        
        public SourceTrackPms build() {
            return new SourceTrackPms(
                apiKey,
                apiSecret,
                customerDomain);
        }

        private static final LazySingletonValue<TrackPms> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"track-pms\"",
                        new TypeReference<TrackPms>() {});
    }
}
