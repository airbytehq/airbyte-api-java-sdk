/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

public class DestinationBigqueryHMACKey {

    @JsonProperty("credential_type")
    private DestinationBigqueryCredentialType credentialType;

    /**
     * HMAC key access ID. When linked to a service account, this ID is 61 characters long; when linked to a user account, it is 24 characters long.
     */
    @JsonProperty("hmac_key_access_id")
    private String hmacKeyAccessId;

    /**
     * The corresponding secret for the access ID. It is a 40-character base-64 encoded string.
     */
    @JsonProperty("hmac_key_secret")
    private String hmacKeySecret;

    @JsonCreator
    public DestinationBigqueryHMACKey(
            @JsonProperty("hmac_key_access_id") String hmacKeyAccessId,
            @JsonProperty("hmac_key_secret") String hmacKeySecret) {
        Utils.checkNotNull(hmacKeyAccessId, "hmacKeyAccessId");
        Utils.checkNotNull(hmacKeySecret, "hmacKeySecret");
        this.credentialType = Builder._SINGLETON_VALUE_CredentialType.value();
        this.hmacKeyAccessId = hmacKeyAccessId;
        this.hmacKeySecret = hmacKeySecret;
    }

    @JsonIgnore
    public DestinationBigqueryCredentialType credentialType() {
        return credentialType;
    }

    /**
     * HMAC key access ID. When linked to a service account, this ID is 61 characters long; when linked to a user account, it is 24 characters long.
     */
    @JsonIgnore
    public String hmacKeyAccessId() {
        return hmacKeyAccessId;
    }

    /**
     * The corresponding secret for the access ID. It is a 40-character base-64 encoded string.
     */
    @JsonIgnore
    public String hmacKeySecret() {
        return hmacKeySecret;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * HMAC key access ID. When linked to a service account, this ID is 61 characters long; when linked to a user account, it is 24 characters long.
     */
    public DestinationBigqueryHMACKey withHmacKeyAccessId(String hmacKeyAccessId) {
        Utils.checkNotNull(hmacKeyAccessId, "hmacKeyAccessId");
        this.hmacKeyAccessId = hmacKeyAccessId;
        return this;
    }

    /**
     * The corresponding secret for the access ID. It is a 40-character base-64 encoded string.
     */
    public DestinationBigqueryHMACKey withHmacKeySecret(String hmacKeySecret) {
        Utils.checkNotNull(hmacKeySecret, "hmacKeySecret");
        this.hmacKeySecret = hmacKeySecret;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DestinationBigqueryHMACKey other = (DestinationBigqueryHMACKey) o;
        return 
            java.util.Objects.deepEquals(this.credentialType, other.credentialType) &&
            java.util.Objects.deepEquals(this.hmacKeyAccessId, other.hmacKeyAccessId) &&
            java.util.Objects.deepEquals(this.hmacKeySecret, other.hmacKeySecret);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            credentialType,
            hmacKeyAccessId,
            hmacKeySecret);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DestinationBigqueryHMACKey.class,
                "credentialType", credentialType,
                "hmacKeyAccessId", hmacKeyAccessId,
                "hmacKeySecret", hmacKeySecret);
    }
    
    public final static class Builder {
 
        private String hmacKeyAccessId;
 
        private String hmacKeySecret;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * HMAC key access ID. When linked to a service account, this ID is 61 characters long; when linked to a user account, it is 24 characters long.
         */
        public Builder hmacKeyAccessId(String hmacKeyAccessId) {
            Utils.checkNotNull(hmacKeyAccessId, "hmacKeyAccessId");
            this.hmacKeyAccessId = hmacKeyAccessId;
            return this;
        }

        /**
         * The corresponding secret for the access ID. It is a 40-character base-64 encoded string.
         */
        public Builder hmacKeySecret(String hmacKeySecret) {
            Utils.checkNotNull(hmacKeySecret, "hmacKeySecret");
            this.hmacKeySecret = hmacKeySecret;
            return this;
        }
        
        public DestinationBigqueryHMACKey build() {
            return new DestinationBigqueryHMACKey(
                hmacKeyAccessId,
                hmacKeySecret);
        }

        private static final LazySingletonValue<DestinationBigqueryCredentialType> _SINGLETON_VALUE_CredentialType =
                new LazySingletonValue<>(
                        "credential_type",
                        "\"HMAC_KEY\"",
                        new TypeReference<DestinationBigqueryCredentialType>() {});
    }
}

