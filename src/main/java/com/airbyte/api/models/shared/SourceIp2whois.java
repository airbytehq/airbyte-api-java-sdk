/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public class SourceIp2whois {

    /**
     * Your API Key. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("api_key")
    private Optional<String> apiKey;

    /**
     * Domain name. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domain")
    private Optional<String> domain;

    @JsonProperty("sourceType")
    private Ip2whois sourceType;

    @JsonCreator
    public SourceIp2whois(
            @JsonProperty("api_key") Optional<String> apiKey,
            @JsonProperty("domain") Optional<String> domain) {
        Utils.checkNotNull(apiKey, "apiKey");
        Utils.checkNotNull(domain, "domain");
        this.apiKey = apiKey;
        this.domain = domain;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
    }
    
    public SourceIp2whois() {
        this(Optional.empty(), Optional.empty());
    }

    /**
     * Your API Key. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
     */
    @JsonIgnore
    public Optional<String> apiKey() {
        return apiKey;
    }

    /**
     * Domain name. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
     */
    @JsonIgnore
    public Optional<String> domain() {
        return domain;
    }

    @JsonIgnore
    public Ip2whois sourceType() {
        return sourceType;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Your API Key. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
     */
    public SourceIp2whois withApiKey(String apiKey) {
        Utils.checkNotNull(apiKey, "apiKey");
        this.apiKey = Optional.ofNullable(apiKey);
        return this;
    }

    /**
     * Your API Key. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
     */
    public SourceIp2whois withApiKey(Optional<String> apiKey) {
        Utils.checkNotNull(apiKey, "apiKey");
        this.apiKey = apiKey;
        return this;
    }

    /**
     * Domain name. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
     */
    public SourceIp2whois withDomain(String domain) {
        Utils.checkNotNull(domain, "domain");
        this.domain = Optional.ofNullable(domain);
        return this;
    }

    /**
     * Domain name. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
     */
    public SourceIp2whois withDomain(Optional<String> domain) {
        Utils.checkNotNull(domain, "domain");
        this.domain = domain;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceIp2whois other = (SourceIp2whois) o;
        return 
            Objects.deepEquals(this.apiKey, other.apiKey) &&
            Objects.deepEquals(this.domain, other.domain) &&
            Objects.deepEquals(this.sourceType, other.sourceType);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            apiKey,
            domain,
            sourceType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceIp2whois.class,
                "apiKey", apiKey,
                "domain", domain,
                "sourceType", sourceType);
    }
    
    public final static class Builder {
 
        private Optional<String> apiKey = Optional.empty();
 
        private Optional<String> domain = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Your API Key. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
         */
        public Builder apiKey(String apiKey) {
            Utils.checkNotNull(apiKey, "apiKey");
            this.apiKey = Optional.ofNullable(apiKey);
            return this;
        }

        /**
         * Your API Key. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
         */
        public Builder apiKey(Optional<String> apiKey) {
            Utils.checkNotNull(apiKey, "apiKey");
            this.apiKey = apiKey;
            return this;
        }

        /**
         * Domain name. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
         */
        public Builder domain(String domain) {
            Utils.checkNotNull(domain, "domain");
            this.domain = Optional.ofNullable(domain);
            return this;
        }

        /**
         * Domain name. See &lt;a href="https://www.ip2whois.com/developers-api"&gt;here&lt;/a&gt;.
         */
        public Builder domain(Optional<String> domain) {
            Utils.checkNotNull(domain, "domain");
            this.domain = domain;
            return this;
        }
        
        public SourceIp2whois build() {
            return new SourceIp2whois(
                apiKey,
                domain);
        }

        private static final LazySingletonValue<Ip2whois> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"ip2whois\"",
                        new TypeReference<Ip2whois>() {});
    }
}
