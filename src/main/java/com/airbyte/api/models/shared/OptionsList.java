/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class OptionsList {

    @JsonProperty("option_name")
    private String optionName;

    @JsonProperty("option_value")
    private String optionValue;

    @JsonCreator
    public OptionsList(
            @JsonProperty("option_name") String optionName,
            @JsonProperty("option_value") String optionValue) {
        Utils.checkNotNull(optionName, "optionName");
        Utils.checkNotNull(optionValue, "optionValue");
        this.optionName = optionName;
        this.optionValue = optionValue;
    }

    @JsonIgnore
    public String optionName() {
        return optionName;
    }

    @JsonIgnore
    public String optionValue() {
        return optionValue;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public OptionsList withOptionName(String optionName) {
        Utils.checkNotNull(optionName, "optionName");
        this.optionName = optionName;
        return this;
    }

    public OptionsList withOptionValue(String optionValue) {
        Utils.checkNotNull(optionValue, "optionValue");
        this.optionValue = optionValue;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OptionsList other = (OptionsList) o;
        return 
            java.util.Objects.deepEquals(this.optionName, other.optionName) &&
            java.util.Objects.deepEquals(this.optionValue, other.optionValue);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            optionName,
            optionValue);
    }
    
    @Override
    public String toString() {
        return Utils.toString(OptionsList.class,
                "optionName", optionName,
                "optionValue", optionValue);
    }
    
    public final static class Builder {
 
        private String optionName;
 
        private String optionValue;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder optionName(String optionName) {
            Utils.checkNotNull(optionName, "optionName");
            this.optionName = optionName;
            return this;
        }

        public Builder optionValue(String optionValue) {
            Utils.checkNotNull(optionValue, "optionValue");
            this.optionValue = optionValue;
            return this;
        }
        
        public OptionsList build() {
            return new OptionsList(
                optionName,
                optionValue);
        }
    }
}

