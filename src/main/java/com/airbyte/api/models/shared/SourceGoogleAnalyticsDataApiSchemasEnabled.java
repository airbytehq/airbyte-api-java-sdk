/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class SourceGoogleAnalyticsDataApiSchemasEnabled {

    /**
     * Optional settings for a cohort report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cohortReportSettings")
    private Optional<? extends CohortReportSettings> cohortReportSettings;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cohorts")
    private Optional<? extends java.util.List<Cohorts>> cohorts;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cohortsRange")
    private Optional<? extends CohortsRange> cohortsRange;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    private Optional<? extends SourceGoogleAnalyticsDataApiSchemasCustomReportsArrayEnabled> enabled;

    @JsonCreator
    public SourceGoogleAnalyticsDataApiSchemasEnabled(
            @JsonProperty("cohortReportSettings") Optional<? extends CohortReportSettings> cohortReportSettings,
            @JsonProperty("cohorts") Optional<? extends java.util.List<Cohorts>> cohorts,
            @JsonProperty("cohortsRange") Optional<? extends CohortsRange> cohortsRange) {
        Utils.checkNotNull(cohortReportSettings, "cohortReportSettings");
        Utils.checkNotNull(cohorts, "cohorts");
        Utils.checkNotNull(cohortsRange, "cohortsRange");
        this.cohortReportSettings = cohortReportSettings;
        this.cohorts = cohorts;
        this.cohortsRange = cohortsRange;
        this.enabled = Builder._SINGLETON_VALUE_Enabled.value();
    }
    
    public SourceGoogleAnalyticsDataApiSchemasEnabled() {
        this(Optional.empty(), Optional.empty(), Optional.empty());
    }

    /**
     * Optional settings for a cohort report.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CohortReportSettings> cohortReportSettings() {
        return (Optional<CohortReportSettings>) cohortReportSettings;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<java.util.List<Cohorts>> cohorts() {
        return (Optional<java.util.List<Cohorts>>) cohorts;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CohortsRange> cohortsRange() {
        return (Optional<CohortsRange>) cohortsRange;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<SourceGoogleAnalyticsDataApiSchemasCustomReportsArrayEnabled> enabled() {
        return (Optional<SourceGoogleAnalyticsDataApiSchemasCustomReportsArrayEnabled>) enabled;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Optional settings for a cohort report.
     */
    public SourceGoogleAnalyticsDataApiSchemasEnabled withCohortReportSettings(CohortReportSettings cohortReportSettings) {
        Utils.checkNotNull(cohortReportSettings, "cohortReportSettings");
        this.cohortReportSettings = Optional.ofNullable(cohortReportSettings);
        return this;
    }

    /**
     * Optional settings for a cohort report.
     */
    public SourceGoogleAnalyticsDataApiSchemasEnabled withCohortReportSettings(Optional<? extends CohortReportSettings> cohortReportSettings) {
        Utils.checkNotNull(cohortReportSettings, "cohortReportSettings");
        this.cohortReportSettings = cohortReportSettings;
        return this;
    }

    public SourceGoogleAnalyticsDataApiSchemasEnabled withCohorts(java.util.List<Cohorts> cohorts) {
        Utils.checkNotNull(cohorts, "cohorts");
        this.cohorts = Optional.ofNullable(cohorts);
        return this;
    }

    public SourceGoogleAnalyticsDataApiSchemasEnabled withCohorts(Optional<? extends java.util.List<Cohorts>> cohorts) {
        Utils.checkNotNull(cohorts, "cohorts");
        this.cohorts = cohorts;
        return this;
    }

    public SourceGoogleAnalyticsDataApiSchemasEnabled withCohortsRange(CohortsRange cohortsRange) {
        Utils.checkNotNull(cohortsRange, "cohortsRange");
        this.cohortsRange = Optional.ofNullable(cohortsRange);
        return this;
    }

    public SourceGoogleAnalyticsDataApiSchemasEnabled withCohortsRange(Optional<? extends CohortsRange> cohortsRange) {
        Utils.checkNotNull(cohortsRange, "cohortsRange");
        this.cohortsRange = cohortsRange;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceGoogleAnalyticsDataApiSchemasEnabled other = (SourceGoogleAnalyticsDataApiSchemasEnabled) o;
        return 
            java.util.Objects.deepEquals(this.cohortReportSettings, other.cohortReportSettings) &&
            java.util.Objects.deepEquals(this.cohorts, other.cohorts) &&
            java.util.Objects.deepEquals(this.cohortsRange, other.cohortsRange) &&
            java.util.Objects.deepEquals(this.enabled, other.enabled);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            cohortReportSettings,
            cohorts,
            cohortsRange,
            enabled);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceGoogleAnalyticsDataApiSchemasEnabled.class,
                "cohortReportSettings", cohortReportSettings,
                "cohorts", cohorts,
                "cohortsRange", cohortsRange,
                "enabled", enabled);
    }
    
    public final static class Builder {
 
        private Optional<? extends CohortReportSettings> cohortReportSettings = Optional.empty();
 
        private Optional<? extends java.util.List<Cohorts>> cohorts = Optional.empty();
 
        private Optional<? extends CohortsRange> cohortsRange = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Optional settings for a cohort report.
         */
        public Builder cohortReportSettings(CohortReportSettings cohortReportSettings) {
            Utils.checkNotNull(cohortReportSettings, "cohortReportSettings");
            this.cohortReportSettings = Optional.ofNullable(cohortReportSettings);
            return this;
        }

        /**
         * Optional settings for a cohort report.
         */
        public Builder cohortReportSettings(Optional<? extends CohortReportSettings> cohortReportSettings) {
            Utils.checkNotNull(cohortReportSettings, "cohortReportSettings");
            this.cohortReportSettings = cohortReportSettings;
            return this;
        }

        public Builder cohorts(java.util.List<Cohorts> cohorts) {
            Utils.checkNotNull(cohorts, "cohorts");
            this.cohorts = Optional.ofNullable(cohorts);
            return this;
        }

        public Builder cohorts(Optional<? extends java.util.List<Cohorts>> cohorts) {
            Utils.checkNotNull(cohorts, "cohorts");
            this.cohorts = cohorts;
            return this;
        }

        public Builder cohortsRange(CohortsRange cohortsRange) {
            Utils.checkNotNull(cohortsRange, "cohortsRange");
            this.cohortsRange = Optional.ofNullable(cohortsRange);
            return this;
        }

        public Builder cohortsRange(Optional<? extends CohortsRange> cohortsRange) {
            Utils.checkNotNull(cohortsRange, "cohortsRange");
            this.cohortsRange = cohortsRange;
            return this;
        }
        
        public SourceGoogleAnalyticsDataApiSchemasEnabled build() {
            return new SourceGoogleAnalyticsDataApiSchemasEnabled(
                cohortReportSettings,
                cohorts,
                cohortsRange);
        }

        private static final LazySingletonValue<Optional<? extends SourceGoogleAnalyticsDataApiSchemasCustomReportsArrayEnabled>> _SINGLETON_VALUE_Enabled =
                new LazySingletonValue<>(
                        "enabled",
                        "\"true\"",
                        new TypeReference<Optional<? extends SourceGoogleAnalyticsDataApiSchemasCustomReportsArrayEnabled>>() {});
    }
}

