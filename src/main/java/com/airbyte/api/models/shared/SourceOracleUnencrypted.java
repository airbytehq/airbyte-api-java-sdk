/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
/**
 * SourceOracleUnencrypted - Data transfer will not be encrypted.
 */

public class SourceOracleUnencrypted {

    @JsonProperty("encryption_method")
    private SourceOracleEncryptionMethod encryptionMethod;

    @JsonCreator
    public SourceOracleUnencrypted() {
        
        this.encryptionMethod = Builder._SINGLETON_VALUE_EncryptionMethod.value();
    }

    @JsonIgnore
    public SourceOracleEncryptionMethod encryptionMethod() {
        return encryptionMethod;
    }

    public final static Builder builder() {
        return new Builder();
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceOracleUnencrypted other = (SourceOracleUnencrypted) o;
        return 
            java.util.Objects.deepEquals(this.encryptionMethod, other.encryptionMethod);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            encryptionMethod);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceOracleUnencrypted.class,
                "encryptionMethod", encryptionMethod);
    }
    
    public final static class Builder {  
        
        private Builder() {
          // force use of static builder() method
        }
        
        public SourceOracleUnencrypted build() {
            return new SourceOracleUnencrypted(
                );
        }

        private static final LazySingletonValue<SourceOracleEncryptionMethod> _SINGLETON_VALUE_EncryptionMethod =
                new LazySingletonValue<>(
                        "encryption_method",
                        "\"unencrypted\"",
                        new TypeReference<SourceOracleEncryptionMethod>() {});
    }
}

