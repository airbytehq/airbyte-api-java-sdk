/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

/**
 * SourceSharepointEnterpriseReplicatePermissionsACL
 * 
 * <p>Sends one identity stream and one for more permissions (ACL) streams to the destination. This data can be used in downstream systems to recreate permission restrictions mirroring the original source.
 */
public class SourceSharepointEnterpriseReplicatePermissionsACL {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delivery_type")
    private Optional<? extends SourceSharepointEnterpriseSchemasDeliveryMethodDeliveryType> deliveryType;

    /**
     * This data can be used in downstream systems to recreate permission restrictions mirroring the original source
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("include_identities_stream")
    private Optional<Boolean> includeIdentitiesStream;

    @JsonCreator
    public SourceSharepointEnterpriseReplicatePermissionsACL(
            @JsonProperty("include_identities_stream") Optional<Boolean> includeIdentitiesStream) {
        Utils.checkNotNull(includeIdentitiesStream, "includeIdentitiesStream");
        this.deliveryType = Builder._SINGLETON_VALUE_DeliveryType.value();
        this.includeIdentitiesStream = includeIdentitiesStream;
    }
    
    public SourceSharepointEnterpriseReplicatePermissionsACL() {
        this(Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<SourceSharepointEnterpriseSchemasDeliveryMethodDeliveryType> deliveryType() {
        return (Optional<SourceSharepointEnterpriseSchemasDeliveryMethodDeliveryType>) deliveryType;
    }

    /**
     * This data can be used in downstream systems to recreate permission restrictions mirroring the original source
     */
    @JsonIgnore
    public Optional<Boolean> includeIdentitiesStream() {
        return includeIdentitiesStream;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * This data can be used in downstream systems to recreate permission restrictions mirroring the original source
     */
    public SourceSharepointEnterpriseReplicatePermissionsACL withIncludeIdentitiesStream(boolean includeIdentitiesStream) {
        Utils.checkNotNull(includeIdentitiesStream, "includeIdentitiesStream");
        this.includeIdentitiesStream = Optional.ofNullable(includeIdentitiesStream);
        return this;
    }

    /**
     * This data can be used in downstream systems to recreate permission restrictions mirroring the original source
     */
    public SourceSharepointEnterpriseReplicatePermissionsACL withIncludeIdentitiesStream(Optional<Boolean> includeIdentitiesStream) {
        Utils.checkNotNull(includeIdentitiesStream, "includeIdentitiesStream");
        this.includeIdentitiesStream = includeIdentitiesStream;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceSharepointEnterpriseReplicatePermissionsACL other = (SourceSharepointEnterpriseReplicatePermissionsACL) o;
        return 
            Objects.deepEquals(this.deliveryType, other.deliveryType) &&
            Objects.deepEquals(this.includeIdentitiesStream, other.includeIdentitiesStream);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            deliveryType,
            includeIdentitiesStream);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceSharepointEnterpriseReplicatePermissionsACL.class,
                "deliveryType", deliveryType,
                "includeIdentitiesStream", includeIdentitiesStream);
    }
    
    public final static class Builder {
 
        private Optional<Boolean> includeIdentitiesStream;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * This data can be used in downstream systems to recreate permission restrictions mirroring the original source
         */
        public Builder includeIdentitiesStream(boolean includeIdentitiesStream) {
            Utils.checkNotNull(includeIdentitiesStream, "includeIdentitiesStream");
            this.includeIdentitiesStream = Optional.ofNullable(includeIdentitiesStream);
            return this;
        }

        /**
         * This data can be used in downstream systems to recreate permission restrictions mirroring the original source
         */
        public Builder includeIdentitiesStream(Optional<Boolean> includeIdentitiesStream) {
            Utils.checkNotNull(includeIdentitiesStream, "includeIdentitiesStream");
            this.includeIdentitiesStream = includeIdentitiesStream;
            return this;
        }
        
        public SourceSharepointEnterpriseReplicatePermissionsACL build() {
            if (includeIdentitiesStream == null) {
                includeIdentitiesStream = _SINGLETON_VALUE_IncludeIdentitiesStream.value();
            }
            return new SourceSharepointEnterpriseReplicatePermissionsACL(
                includeIdentitiesStream);
        }

        private static final LazySingletonValue<Optional<? extends SourceSharepointEnterpriseSchemasDeliveryMethodDeliveryType>> _SINGLETON_VALUE_DeliveryType =
                new LazySingletonValue<>(
                        "delivery_type",
                        "\"use_permissions_transfer\"",
                        new TypeReference<Optional<? extends SourceSharepointEnterpriseSchemasDeliveryMethodDeliveryType>>() {});

        private static final LazySingletonValue<Optional<Boolean>> _SINGLETON_VALUE_IncludeIdentitiesStream =
                new LazySingletonValue<>(
                        "include_identities_stream",
                        "true",
                        new TypeReference<Optional<Boolean>>() {});
    }
}
