/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.time.LocalDate;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class SourceGoogleSearchConsole {

    @JsonProperty("authorization")
    private AuthenticationType authorization;

    /**
     * You can add your Custom Analytics report by creating one.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_reports_array")
    private Optional<? extends List<SourceGoogleSearchConsoleCustomReportConfig>> customReportsArray;

    /**
     * If set to 'final', the returned data will include only finalized, stable data. If set to 'all', fresh data will be included. When using Incremental sync mode, we do not recommend setting this parameter to 'all' as it may cause data loss. More information can be found in our &lt;a href='https://docs.airbyte.com/integrations/source/google-search-console'&gt;full documentation&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data_state")
    private Optional<? extends DataFreshness> dataState;

    /**
     * UTC date in the format YYYY-MM-DD. Any data created after this date will not be replicated. Must be greater or equal to the start date field. Leaving this field blank will replicate all data from the start date onward.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end_date")
    private Optional<LocalDate> endDate;

    /**
     * The URLs of the website property attached to your GSC account. Learn more about properties &lt;a href="https://support.google.com/webmasters/answer/34592?hl=en"&gt;here&lt;/a&gt;.
     */
    @JsonProperty("site_urls")
    private List<String> siteUrls;

    @JsonProperty("sourceType")
    private SourceGoogleSearchConsoleGoogleSearchConsole sourceType;

    /**
     * UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_date")
    private Optional<LocalDate> startDate;

    @JsonCreator
    public SourceGoogleSearchConsole(
            @JsonProperty("authorization") AuthenticationType authorization,
            @JsonProperty("custom_reports_array") Optional<? extends List<SourceGoogleSearchConsoleCustomReportConfig>> customReportsArray,
            @JsonProperty("data_state") Optional<? extends DataFreshness> dataState,
            @JsonProperty("end_date") Optional<LocalDate> endDate,
            @JsonProperty("site_urls") List<String> siteUrls,
            @JsonProperty("start_date") Optional<LocalDate> startDate) {
        Utils.checkNotNull(authorization, "authorization");
        Utils.checkNotNull(customReportsArray, "customReportsArray");
        Utils.checkNotNull(dataState, "dataState");
        Utils.checkNotNull(endDate, "endDate");
        Utils.checkNotNull(siteUrls, "siteUrls");
        Utils.checkNotNull(startDate, "startDate");
        this.authorization = authorization;
        this.customReportsArray = customReportsArray;
        this.dataState = dataState;
        this.endDate = endDate;
        this.siteUrls = siteUrls;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
        this.startDate = startDate;
    }
    
    public SourceGoogleSearchConsole(
            AuthenticationType authorization,
            List<String> siteUrls) {
        this(authorization, Optional.empty(), Optional.empty(), Optional.empty(), siteUrls, Optional.empty());
    }

    @JsonIgnore
    public AuthenticationType authorization() {
        return authorization;
    }

    /**
     * You can add your Custom Analytics report by creating one.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<SourceGoogleSearchConsoleCustomReportConfig>> customReportsArray() {
        return (Optional<List<SourceGoogleSearchConsoleCustomReportConfig>>) customReportsArray;
    }

    /**
     * If set to 'final', the returned data will include only finalized, stable data. If set to 'all', fresh data will be included. When using Incremental sync mode, we do not recommend setting this parameter to 'all' as it may cause data loss. More information can be found in our &lt;a href='https://docs.airbyte.com/integrations/source/google-search-console'&gt;full documentation&lt;/a&gt;.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<DataFreshness> dataState() {
        return (Optional<DataFreshness>) dataState;
    }

    /**
     * UTC date in the format YYYY-MM-DD. Any data created after this date will not be replicated. Must be greater or equal to the start date field. Leaving this field blank will replicate all data from the start date onward.
     */
    @JsonIgnore
    public Optional<LocalDate> endDate() {
        return endDate;
    }

    /**
     * The URLs of the website property attached to your GSC account. Learn more about properties &lt;a href="https://support.google.com/webmasters/answer/34592?hl=en"&gt;here&lt;/a&gt;.
     */
    @JsonIgnore
    public List<String> siteUrls() {
        return siteUrls;
    }

    @JsonIgnore
    public SourceGoogleSearchConsoleGoogleSearchConsole sourceType() {
        return sourceType;
    }

    /**
     * UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated.
     */
    @JsonIgnore
    public Optional<LocalDate> startDate() {
        return startDate;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public SourceGoogleSearchConsole withAuthorization(AuthenticationType authorization) {
        Utils.checkNotNull(authorization, "authorization");
        this.authorization = authorization;
        return this;
    }

    /**
     * You can add your Custom Analytics report by creating one.
     */
    public SourceGoogleSearchConsole withCustomReportsArray(List<SourceGoogleSearchConsoleCustomReportConfig> customReportsArray) {
        Utils.checkNotNull(customReportsArray, "customReportsArray");
        this.customReportsArray = Optional.ofNullable(customReportsArray);
        return this;
    }

    /**
     * You can add your Custom Analytics report by creating one.
     */
    public SourceGoogleSearchConsole withCustomReportsArray(Optional<? extends List<SourceGoogleSearchConsoleCustomReportConfig>> customReportsArray) {
        Utils.checkNotNull(customReportsArray, "customReportsArray");
        this.customReportsArray = customReportsArray;
        return this;
    }

    /**
     * If set to 'final', the returned data will include only finalized, stable data. If set to 'all', fresh data will be included. When using Incremental sync mode, we do not recommend setting this parameter to 'all' as it may cause data loss. More information can be found in our &lt;a href='https://docs.airbyte.com/integrations/source/google-search-console'&gt;full documentation&lt;/a&gt;.
     */
    public SourceGoogleSearchConsole withDataState(DataFreshness dataState) {
        Utils.checkNotNull(dataState, "dataState");
        this.dataState = Optional.ofNullable(dataState);
        return this;
    }

    /**
     * If set to 'final', the returned data will include only finalized, stable data. If set to 'all', fresh data will be included. When using Incremental sync mode, we do not recommend setting this parameter to 'all' as it may cause data loss. More information can be found in our &lt;a href='https://docs.airbyte.com/integrations/source/google-search-console'&gt;full documentation&lt;/a&gt;.
     */
    public SourceGoogleSearchConsole withDataState(Optional<? extends DataFreshness> dataState) {
        Utils.checkNotNull(dataState, "dataState");
        this.dataState = dataState;
        return this;
    }

    /**
     * UTC date in the format YYYY-MM-DD. Any data created after this date will not be replicated. Must be greater or equal to the start date field. Leaving this field blank will replicate all data from the start date onward.
     */
    public SourceGoogleSearchConsole withEndDate(LocalDate endDate) {
        Utils.checkNotNull(endDate, "endDate");
        this.endDate = Optional.ofNullable(endDate);
        return this;
    }

    /**
     * UTC date in the format YYYY-MM-DD. Any data created after this date will not be replicated. Must be greater or equal to the start date field. Leaving this field blank will replicate all data from the start date onward.
     */
    public SourceGoogleSearchConsole withEndDate(Optional<LocalDate> endDate) {
        Utils.checkNotNull(endDate, "endDate");
        this.endDate = endDate;
        return this;
    }

    /**
     * The URLs of the website property attached to your GSC account. Learn more about properties &lt;a href="https://support.google.com/webmasters/answer/34592?hl=en"&gt;here&lt;/a&gt;.
     */
    public SourceGoogleSearchConsole withSiteUrls(List<String> siteUrls) {
        Utils.checkNotNull(siteUrls, "siteUrls");
        this.siteUrls = siteUrls;
        return this;
    }

    /**
     * UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated.
     */
    public SourceGoogleSearchConsole withStartDate(LocalDate startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = Optional.ofNullable(startDate);
        return this;
    }

    /**
     * UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated.
     */
    public SourceGoogleSearchConsole withStartDate(Optional<LocalDate> startDate) {
        Utils.checkNotNull(startDate, "startDate");
        this.startDate = startDate;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceGoogleSearchConsole other = (SourceGoogleSearchConsole) o;
        return 
            Objects.deepEquals(this.authorization, other.authorization) &&
            Objects.deepEquals(this.customReportsArray, other.customReportsArray) &&
            Objects.deepEquals(this.dataState, other.dataState) &&
            Objects.deepEquals(this.endDate, other.endDate) &&
            Objects.deepEquals(this.siteUrls, other.siteUrls) &&
            Objects.deepEquals(this.sourceType, other.sourceType) &&
            Objects.deepEquals(this.startDate, other.startDate);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            authorization,
            customReportsArray,
            dataState,
            endDate,
            siteUrls,
            sourceType,
            startDate);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceGoogleSearchConsole.class,
                "authorization", authorization,
                "customReportsArray", customReportsArray,
                "dataState", dataState,
                "endDate", endDate,
                "siteUrls", siteUrls,
                "sourceType", sourceType,
                "startDate", startDate);
    }
    
    public final static class Builder {
 
        private AuthenticationType authorization;
 
        private Optional<? extends List<SourceGoogleSearchConsoleCustomReportConfig>> customReportsArray = Optional.empty();
 
        private Optional<? extends DataFreshness> dataState;
 
        private Optional<LocalDate> endDate = Optional.empty();
 
        private List<String> siteUrls;
 
        private Optional<LocalDate> startDate;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder authorization(AuthenticationType authorization) {
            Utils.checkNotNull(authorization, "authorization");
            this.authorization = authorization;
            return this;
        }

        /**
         * You can add your Custom Analytics report by creating one.
         */
        public Builder customReportsArray(List<SourceGoogleSearchConsoleCustomReportConfig> customReportsArray) {
            Utils.checkNotNull(customReportsArray, "customReportsArray");
            this.customReportsArray = Optional.ofNullable(customReportsArray);
            return this;
        }

        /**
         * You can add your Custom Analytics report by creating one.
         */
        public Builder customReportsArray(Optional<? extends List<SourceGoogleSearchConsoleCustomReportConfig>> customReportsArray) {
            Utils.checkNotNull(customReportsArray, "customReportsArray");
            this.customReportsArray = customReportsArray;
            return this;
        }

        /**
         * If set to 'final', the returned data will include only finalized, stable data. If set to 'all', fresh data will be included. When using Incremental sync mode, we do not recommend setting this parameter to 'all' as it may cause data loss. More information can be found in our &lt;a href='https://docs.airbyte.com/integrations/source/google-search-console'&gt;full documentation&lt;/a&gt;.
         */
        public Builder dataState(DataFreshness dataState) {
            Utils.checkNotNull(dataState, "dataState");
            this.dataState = Optional.ofNullable(dataState);
            return this;
        }

        /**
         * If set to 'final', the returned data will include only finalized, stable data. If set to 'all', fresh data will be included. When using Incremental sync mode, we do not recommend setting this parameter to 'all' as it may cause data loss. More information can be found in our &lt;a href='https://docs.airbyte.com/integrations/source/google-search-console'&gt;full documentation&lt;/a&gt;.
         */
        public Builder dataState(Optional<? extends DataFreshness> dataState) {
            Utils.checkNotNull(dataState, "dataState");
            this.dataState = dataState;
            return this;
        }

        /**
         * UTC date in the format YYYY-MM-DD. Any data created after this date will not be replicated. Must be greater or equal to the start date field. Leaving this field blank will replicate all data from the start date onward.
         */
        public Builder endDate(LocalDate endDate) {
            Utils.checkNotNull(endDate, "endDate");
            this.endDate = Optional.ofNullable(endDate);
            return this;
        }

        /**
         * UTC date in the format YYYY-MM-DD. Any data created after this date will not be replicated. Must be greater or equal to the start date field. Leaving this field blank will replicate all data from the start date onward.
         */
        public Builder endDate(Optional<LocalDate> endDate) {
            Utils.checkNotNull(endDate, "endDate");
            this.endDate = endDate;
            return this;
        }

        /**
         * The URLs of the website property attached to your GSC account. Learn more about properties &lt;a href="https://support.google.com/webmasters/answer/34592?hl=en"&gt;here&lt;/a&gt;.
         */
        public Builder siteUrls(List<String> siteUrls) {
            Utils.checkNotNull(siteUrls, "siteUrls");
            this.siteUrls = siteUrls;
            return this;
        }

        /**
         * UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated.
         */
        public Builder startDate(LocalDate startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = Optional.ofNullable(startDate);
            return this;
        }

        /**
         * UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated.
         */
        public Builder startDate(Optional<LocalDate> startDate) {
            Utils.checkNotNull(startDate, "startDate");
            this.startDate = startDate;
            return this;
        }
        
        public SourceGoogleSearchConsole build() {
            if (dataState == null) {
                dataState = _SINGLETON_VALUE_DataState.value();
            }
            if (startDate == null) {
                startDate = _SINGLETON_VALUE_StartDate.value();
            }
            return new SourceGoogleSearchConsole(
                authorization,
                customReportsArray,
                dataState,
                endDate,
                siteUrls,
                startDate);
        }

        private static final LazySingletonValue<Optional<? extends DataFreshness>> _SINGLETON_VALUE_DataState =
                new LazySingletonValue<>(
                        "data_state",
                        "\"final\"",
                        new TypeReference<Optional<? extends DataFreshness>>() {});

        private static final LazySingletonValue<SourceGoogleSearchConsoleGoogleSearchConsole> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"google-search-console\"",
                        new TypeReference<SourceGoogleSearchConsoleGoogleSearchConsole>() {});

        private static final LazySingletonValue<Optional<LocalDate>> _SINGLETON_VALUE_StartDate =
                new LazySingletonValue<>(
                        "start_date",
                        "\"2021-01-01\"",
                        new TypeReference<Optional<LocalDate>>() {});
    }
}
