/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public class DestinationAzureBlobStorage {

    /**
     * The Azure blob storage account key. If you set this value, you must not set the Shared Access Signature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("azure_blob_storage_account_key")
    private Optional<String> azureBlobStorageAccountKey;

    /**
     * The name of the Azure Blob Storage Account. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#storage-accounts"&gt;here&lt;/a&gt;.
     */
    @JsonProperty("azure_blob_storage_account_name")
    private String azureBlobStorageAccountName;

    /**
     * The name of the Azure Blob Storage Container. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#containers"&gt;here&lt;/a&gt;.
     */
    @JsonProperty("azure_blob_storage_container_name")
    private String azureBlobStorageContainerName;

    /**
     * This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("azure_blob_storage_endpoint_domain_name")
    private Optional<String> azureBlobStorageEndpointDomainName;

    /**
     * The amount of megabytes after which the connector should spill the records in a new blob object. Make sure to configure size greater than individual records. Enter 0 if not applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("azure_blob_storage_spill_size")
    private Optional<Long> azureBlobStorageSpillSize;

    @JsonProperty("destinationType")
    private DestinationAzureBlobStorageAzureBlobStorage destinationType;

    /**
     * Format of the data output.
     */
    @JsonProperty("format")
    private OutputFormat format;

    /**
     * A shared access signature (SAS) provides secure delegated access to resources in your storage account. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/common/storage-sas-overview?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&amp;bc=%2Fazure%2Fstorage%2Fblobs%2Fbreadcrumb%2Ftoc.json"&gt;here&lt;/a&gt;. If you set this value, you must not set the account key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shared_access_signature")
    private Optional<String> sharedAccessSignature;

    @JsonCreator
    public DestinationAzureBlobStorage(
            @JsonProperty("azure_blob_storage_account_key") Optional<String> azureBlobStorageAccountKey,
            @JsonProperty("azure_blob_storage_account_name") String azureBlobStorageAccountName,
            @JsonProperty("azure_blob_storage_container_name") String azureBlobStorageContainerName,
            @JsonProperty("azure_blob_storage_endpoint_domain_name") Optional<String> azureBlobStorageEndpointDomainName,
            @JsonProperty("azure_blob_storage_spill_size") Optional<Long> azureBlobStorageSpillSize,
            @JsonProperty("format") OutputFormat format,
            @JsonProperty("shared_access_signature") Optional<String> sharedAccessSignature) {
        Utils.checkNotNull(azureBlobStorageAccountKey, "azureBlobStorageAccountKey");
        Utils.checkNotNull(azureBlobStorageAccountName, "azureBlobStorageAccountName");
        Utils.checkNotNull(azureBlobStorageContainerName, "azureBlobStorageContainerName");
        Utils.checkNotNull(azureBlobStorageEndpointDomainName, "azureBlobStorageEndpointDomainName");
        Utils.checkNotNull(azureBlobStorageSpillSize, "azureBlobStorageSpillSize");
        Utils.checkNotNull(format, "format");
        Utils.checkNotNull(sharedAccessSignature, "sharedAccessSignature");
        this.azureBlobStorageAccountKey = azureBlobStorageAccountKey;
        this.azureBlobStorageAccountName = azureBlobStorageAccountName;
        this.azureBlobStorageContainerName = azureBlobStorageContainerName;
        this.azureBlobStorageEndpointDomainName = azureBlobStorageEndpointDomainName;
        this.azureBlobStorageSpillSize = azureBlobStorageSpillSize;
        this.destinationType = Builder._SINGLETON_VALUE_DestinationType.value();
        this.format = format;
        this.sharedAccessSignature = sharedAccessSignature;
    }
    
    public DestinationAzureBlobStorage(
            String azureBlobStorageAccountName,
            String azureBlobStorageContainerName,
            OutputFormat format) {
        this(Optional.empty(), azureBlobStorageAccountName, azureBlobStorageContainerName, Optional.empty(), Optional.empty(), format, Optional.empty());
    }

    /**
     * The Azure blob storage account key. If you set this value, you must not set the Shared Access Signature.
     */
    @JsonIgnore
    public Optional<String> azureBlobStorageAccountKey() {
        return azureBlobStorageAccountKey;
    }

    /**
     * The name of the Azure Blob Storage Account. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#storage-accounts"&gt;here&lt;/a&gt;.
     */
    @JsonIgnore
    public String azureBlobStorageAccountName() {
        return azureBlobStorageAccountName;
    }

    /**
     * The name of the Azure Blob Storage Container. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#containers"&gt;here&lt;/a&gt;.
     */
    @JsonIgnore
    public String azureBlobStorageContainerName() {
        return azureBlobStorageContainerName;
    }

    /**
     * This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.
     */
    @JsonIgnore
    public Optional<String> azureBlobStorageEndpointDomainName() {
        return azureBlobStorageEndpointDomainName;
    }

    /**
     * The amount of megabytes after which the connector should spill the records in a new blob object. Make sure to configure size greater than individual records. Enter 0 if not applicable.
     */
    @JsonIgnore
    public Optional<Long> azureBlobStorageSpillSize() {
        return azureBlobStorageSpillSize;
    }

    @JsonIgnore
    public DestinationAzureBlobStorageAzureBlobStorage destinationType() {
        return destinationType;
    }

    /**
     * Format of the data output.
     */
    @JsonIgnore
    public OutputFormat format() {
        return format;
    }

    /**
     * A shared access signature (SAS) provides secure delegated access to resources in your storage account. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/common/storage-sas-overview?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&amp;bc=%2Fazure%2Fstorage%2Fblobs%2Fbreadcrumb%2Ftoc.json"&gt;here&lt;/a&gt;. If you set this value, you must not set the account key.
     */
    @JsonIgnore
    public Optional<String> sharedAccessSignature() {
        return sharedAccessSignature;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The Azure blob storage account key. If you set this value, you must not set the Shared Access Signature.
     */
    public DestinationAzureBlobStorage withAzureBlobStorageAccountKey(String azureBlobStorageAccountKey) {
        Utils.checkNotNull(azureBlobStorageAccountKey, "azureBlobStorageAccountKey");
        this.azureBlobStorageAccountKey = Optional.ofNullable(azureBlobStorageAccountKey);
        return this;
    }

    /**
     * The Azure blob storage account key. If you set this value, you must not set the Shared Access Signature.
     */
    public DestinationAzureBlobStorage withAzureBlobStorageAccountKey(Optional<String> azureBlobStorageAccountKey) {
        Utils.checkNotNull(azureBlobStorageAccountKey, "azureBlobStorageAccountKey");
        this.azureBlobStorageAccountKey = azureBlobStorageAccountKey;
        return this;
    }

    /**
     * The name of the Azure Blob Storage Account. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#storage-accounts"&gt;here&lt;/a&gt;.
     */
    public DestinationAzureBlobStorage withAzureBlobStorageAccountName(String azureBlobStorageAccountName) {
        Utils.checkNotNull(azureBlobStorageAccountName, "azureBlobStorageAccountName");
        this.azureBlobStorageAccountName = azureBlobStorageAccountName;
        return this;
    }

    /**
     * The name of the Azure Blob Storage Container. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#containers"&gt;here&lt;/a&gt;.
     */
    public DestinationAzureBlobStorage withAzureBlobStorageContainerName(String azureBlobStorageContainerName) {
        Utils.checkNotNull(azureBlobStorageContainerName, "azureBlobStorageContainerName");
        this.azureBlobStorageContainerName = azureBlobStorageContainerName;
        return this;
    }

    /**
     * This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.
     */
    public DestinationAzureBlobStorage withAzureBlobStorageEndpointDomainName(String azureBlobStorageEndpointDomainName) {
        Utils.checkNotNull(azureBlobStorageEndpointDomainName, "azureBlobStorageEndpointDomainName");
        this.azureBlobStorageEndpointDomainName = Optional.ofNullable(azureBlobStorageEndpointDomainName);
        return this;
    }

    /**
     * This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.
     */
    public DestinationAzureBlobStorage withAzureBlobStorageEndpointDomainName(Optional<String> azureBlobStorageEndpointDomainName) {
        Utils.checkNotNull(azureBlobStorageEndpointDomainName, "azureBlobStorageEndpointDomainName");
        this.azureBlobStorageEndpointDomainName = azureBlobStorageEndpointDomainName;
        return this;
    }

    /**
     * The amount of megabytes after which the connector should spill the records in a new blob object. Make sure to configure size greater than individual records. Enter 0 if not applicable.
     */
    public DestinationAzureBlobStorage withAzureBlobStorageSpillSize(long azureBlobStorageSpillSize) {
        Utils.checkNotNull(azureBlobStorageSpillSize, "azureBlobStorageSpillSize");
        this.azureBlobStorageSpillSize = Optional.ofNullable(azureBlobStorageSpillSize);
        return this;
    }

    /**
     * The amount of megabytes after which the connector should spill the records in a new blob object. Make sure to configure size greater than individual records. Enter 0 if not applicable.
     */
    public DestinationAzureBlobStorage withAzureBlobStorageSpillSize(Optional<Long> azureBlobStorageSpillSize) {
        Utils.checkNotNull(azureBlobStorageSpillSize, "azureBlobStorageSpillSize");
        this.azureBlobStorageSpillSize = azureBlobStorageSpillSize;
        return this;
    }

    /**
     * Format of the data output.
     */
    public DestinationAzureBlobStorage withFormat(OutputFormat format) {
        Utils.checkNotNull(format, "format");
        this.format = format;
        return this;
    }

    /**
     * A shared access signature (SAS) provides secure delegated access to resources in your storage account. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/common/storage-sas-overview?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&amp;bc=%2Fazure%2Fstorage%2Fblobs%2Fbreadcrumb%2Ftoc.json"&gt;here&lt;/a&gt;. If you set this value, you must not set the account key.
     */
    public DestinationAzureBlobStorage withSharedAccessSignature(String sharedAccessSignature) {
        Utils.checkNotNull(sharedAccessSignature, "sharedAccessSignature");
        this.sharedAccessSignature = Optional.ofNullable(sharedAccessSignature);
        return this;
    }

    /**
     * A shared access signature (SAS) provides secure delegated access to resources in your storage account. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/common/storage-sas-overview?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&amp;bc=%2Fazure%2Fstorage%2Fblobs%2Fbreadcrumb%2Ftoc.json"&gt;here&lt;/a&gt;. If you set this value, you must not set the account key.
     */
    public DestinationAzureBlobStorage withSharedAccessSignature(Optional<String> sharedAccessSignature) {
        Utils.checkNotNull(sharedAccessSignature, "sharedAccessSignature");
        this.sharedAccessSignature = sharedAccessSignature;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DestinationAzureBlobStorage other = (DestinationAzureBlobStorage) o;
        return 
            Objects.deepEquals(this.azureBlobStorageAccountKey, other.azureBlobStorageAccountKey) &&
            Objects.deepEquals(this.azureBlobStorageAccountName, other.azureBlobStorageAccountName) &&
            Objects.deepEquals(this.azureBlobStorageContainerName, other.azureBlobStorageContainerName) &&
            Objects.deepEquals(this.azureBlobStorageEndpointDomainName, other.azureBlobStorageEndpointDomainName) &&
            Objects.deepEquals(this.azureBlobStorageSpillSize, other.azureBlobStorageSpillSize) &&
            Objects.deepEquals(this.destinationType, other.destinationType) &&
            Objects.deepEquals(this.format, other.format) &&
            Objects.deepEquals(this.sharedAccessSignature, other.sharedAccessSignature);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            azureBlobStorageAccountKey,
            azureBlobStorageAccountName,
            azureBlobStorageContainerName,
            azureBlobStorageEndpointDomainName,
            azureBlobStorageSpillSize,
            destinationType,
            format,
            sharedAccessSignature);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DestinationAzureBlobStorage.class,
                "azureBlobStorageAccountKey", azureBlobStorageAccountKey,
                "azureBlobStorageAccountName", azureBlobStorageAccountName,
                "azureBlobStorageContainerName", azureBlobStorageContainerName,
                "azureBlobStorageEndpointDomainName", azureBlobStorageEndpointDomainName,
                "azureBlobStorageSpillSize", azureBlobStorageSpillSize,
                "destinationType", destinationType,
                "format", format,
                "sharedAccessSignature", sharedAccessSignature);
    }
    
    public final static class Builder {
 
        private Optional<String> azureBlobStorageAccountKey = Optional.empty();
 
        private String azureBlobStorageAccountName;
 
        private String azureBlobStorageContainerName;
 
        private Optional<String> azureBlobStorageEndpointDomainName = Optional.empty();
 
        private Optional<Long> azureBlobStorageSpillSize;
 
        private OutputFormat format;
 
        private Optional<String> sharedAccessSignature = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The Azure blob storage account key. If you set this value, you must not set the Shared Access Signature.
         */
        public Builder azureBlobStorageAccountKey(String azureBlobStorageAccountKey) {
            Utils.checkNotNull(azureBlobStorageAccountKey, "azureBlobStorageAccountKey");
            this.azureBlobStorageAccountKey = Optional.ofNullable(azureBlobStorageAccountKey);
            return this;
        }

        /**
         * The Azure blob storage account key. If you set this value, you must not set the Shared Access Signature.
         */
        public Builder azureBlobStorageAccountKey(Optional<String> azureBlobStorageAccountKey) {
            Utils.checkNotNull(azureBlobStorageAccountKey, "azureBlobStorageAccountKey");
            this.azureBlobStorageAccountKey = azureBlobStorageAccountKey;
            return this;
        }

        /**
         * The name of the Azure Blob Storage Account. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#storage-accounts"&gt;here&lt;/a&gt;.
         */
        public Builder azureBlobStorageAccountName(String azureBlobStorageAccountName) {
            Utils.checkNotNull(azureBlobStorageAccountName, "azureBlobStorageAccountName");
            this.azureBlobStorageAccountName = azureBlobStorageAccountName;
            return this;
        }

        /**
         * The name of the Azure Blob Storage Container. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/blobs/storage-blobs-introduction#containers"&gt;here&lt;/a&gt;.
         */
        public Builder azureBlobStorageContainerName(String azureBlobStorageContainerName) {
            Utils.checkNotNull(azureBlobStorageContainerName, "azureBlobStorageContainerName");
            this.azureBlobStorageContainerName = azureBlobStorageContainerName;
            return this;
        }

        /**
         * This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.
         */
        public Builder azureBlobStorageEndpointDomainName(String azureBlobStorageEndpointDomainName) {
            Utils.checkNotNull(azureBlobStorageEndpointDomainName, "azureBlobStorageEndpointDomainName");
            this.azureBlobStorageEndpointDomainName = Optional.ofNullable(azureBlobStorageEndpointDomainName);
            return this;
        }

        /**
         * This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.
         */
        public Builder azureBlobStorageEndpointDomainName(Optional<String> azureBlobStorageEndpointDomainName) {
            Utils.checkNotNull(azureBlobStorageEndpointDomainName, "azureBlobStorageEndpointDomainName");
            this.azureBlobStorageEndpointDomainName = azureBlobStorageEndpointDomainName;
            return this;
        }

        /**
         * The amount of megabytes after which the connector should spill the records in a new blob object. Make sure to configure size greater than individual records. Enter 0 if not applicable.
         */
        public Builder azureBlobStorageSpillSize(long azureBlobStorageSpillSize) {
            Utils.checkNotNull(azureBlobStorageSpillSize, "azureBlobStorageSpillSize");
            this.azureBlobStorageSpillSize = Optional.ofNullable(azureBlobStorageSpillSize);
            return this;
        }

        /**
         * The amount of megabytes after which the connector should spill the records in a new blob object. Make sure to configure size greater than individual records. Enter 0 if not applicable.
         */
        public Builder azureBlobStorageSpillSize(Optional<Long> azureBlobStorageSpillSize) {
            Utils.checkNotNull(azureBlobStorageSpillSize, "azureBlobStorageSpillSize");
            this.azureBlobStorageSpillSize = azureBlobStorageSpillSize;
            return this;
        }

        /**
         * Format of the data output.
         */
        public Builder format(OutputFormat format) {
            Utils.checkNotNull(format, "format");
            this.format = format;
            return this;
        }

        /**
         * A shared access signature (SAS) provides secure delegated access to resources in your storage account. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/common/storage-sas-overview?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&amp;bc=%2Fazure%2Fstorage%2Fblobs%2Fbreadcrumb%2Ftoc.json"&gt;here&lt;/a&gt;. If you set this value, you must not set the account key.
         */
        public Builder sharedAccessSignature(String sharedAccessSignature) {
            Utils.checkNotNull(sharedAccessSignature, "sharedAccessSignature");
            this.sharedAccessSignature = Optional.ofNullable(sharedAccessSignature);
            return this;
        }

        /**
         * A shared access signature (SAS) provides secure delegated access to resources in your storage account. Read more &lt;a href="https://learn.microsoft.com/en-gb/azure/storage/common/storage-sas-overview?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&amp;bc=%2Fazure%2Fstorage%2Fblobs%2Fbreadcrumb%2Ftoc.json"&gt;here&lt;/a&gt;. If you set this value, you must not set the account key.
         */
        public Builder sharedAccessSignature(Optional<String> sharedAccessSignature) {
            Utils.checkNotNull(sharedAccessSignature, "sharedAccessSignature");
            this.sharedAccessSignature = sharedAccessSignature;
            return this;
        }
        
        public DestinationAzureBlobStorage build() {
            if (azureBlobStorageSpillSize == null) {
                azureBlobStorageSpillSize = _SINGLETON_VALUE_AzureBlobStorageSpillSize.value();
            }
            return new DestinationAzureBlobStorage(
                azureBlobStorageAccountKey,
                azureBlobStorageAccountName,
                azureBlobStorageContainerName,
                azureBlobStorageEndpointDomainName,
                azureBlobStorageSpillSize,
                format,
                sharedAccessSignature);
        }

        private static final LazySingletonValue<Optional<Long>> _SINGLETON_VALUE_AzureBlobStorageSpillSize =
                new LazySingletonValue<>(
                        "azure_blob_storage_spill_size",
                        "500",
                        new TypeReference<Optional<Long>>() {});

        private static final LazySingletonValue<DestinationAzureBlobStorageAzureBlobStorage> _SINGLETON_VALUE_DestinationType =
                new LazySingletonValue<>(
                        "destinationType",
                        "\"azure-blob-storage\"",
                        new TypeReference<DestinationAzureBlobStorageAzureBlobStorage>() {});
    }
}
