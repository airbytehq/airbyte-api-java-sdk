/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class SourceFlexmail {

    /**
     * Your Flexmail account ID. You can find it in your Flexmail account settings.
     */
    @JsonProperty("account_id")
    private String accountId;

    /**
     * A personal access token for API authentication. Manage your tokens in Flexmail under Settings &gt; API &gt; Personal access tokens.
     */
    @JsonProperty("personal_access_token")
    private String personalAccessToken;

    @JsonProperty("sourceType")
    private Flexmail sourceType;

    @JsonCreator
    public SourceFlexmail(
            @JsonProperty("account_id") String accountId,
            @JsonProperty("personal_access_token") String personalAccessToken) {
        Utils.checkNotNull(accountId, "accountId");
        Utils.checkNotNull(personalAccessToken, "personalAccessToken");
        this.accountId = accountId;
        this.personalAccessToken = personalAccessToken;
        this.sourceType = Builder._SINGLETON_VALUE_SourceType.value();
    }

    /**
     * Your Flexmail account ID. You can find it in your Flexmail account settings.
     */
    @JsonIgnore
    public String accountId() {
        return accountId;
    }

    /**
     * A personal access token for API authentication. Manage your tokens in Flexmail under Settings &gt; API &gt; Personal access tokens.
     */
    @JsonIgnore
    public String personalAccessToken() {
        return personalAccessToken;
    }

    @JsonIgnore
    public Flexmail sourceType() {
        return sourceType;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Your Flexmail account ID. You can find it in your Flexmail account settings.
     */
    public SourceFlexmail withAccountId(String accountId) {
        Utils.checkNotNull(accountId, "accountId");
        this.accountId = accountId;
        return this;
    }

    /**
     * A personal access token for API authentication. Manage your tokens in Flexmail under Settings &gt; API &gt; Personal access tokens.
     */
    public SourceFlexmail withPersonalAccessToken(String personalAccessToken) {
        Utils.checkNotNull(personalAccessToken, "personalAccessToken");
        this.personalAccessToken = personalAccessToken;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceFlexmail other = (SourceFlexmail) o;
        return 
            Objects.deepEquals(this.accountId, other.accountId) &&
            Objects.deepEquals(this.personalAccessToken, other.personalAccessToken) &&
            Objects.deepEquals(this.sourceType, other.sourceType);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            accountId,
            personalAccessToken,
            sourceType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SourceFlexmail.class,
                "accountId", accountId,
                "personalAccessToken", personalAccessToken,
                "sourceType", sourceType);
    }
    
    public final static class Builder {
 
        private String accountId;
 
        private String personalAccessToken;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Your Flexmail account ID. You can find it in your Flexmail account settings.
         */
        public Builder accountId(String accountId) {
            Utils.checkNotNull(accountId, "accountId");
            this.accountId = accountId;
            return this;
        }

        /**
         * A personal access token for API authentication. Manage your tokens in Flexmail under Settings &gt; API &gt; Personal access tokens.
         */
        public Builder personalAccessToken(String personalAccessToken) {
            Utils.checkNotNull(personalAccessToken, "personalAccessToken");
            this.personalAccessToken = personalAccessToken;
            return this;
        }
        
        public SourceFlexmail build() {
            return new SourceFlexmail(
                accountId,
                personalAccessToken);
        }

        private static final LazySingletonValue<Flexmail> _SINGLETON_VALUE_SourceType =
                new LazySingletonValue<>(
                        "sourceType",
                        "\"flexmail\"",
                        new TypeReference<Flexmail>() {});
    }
}
