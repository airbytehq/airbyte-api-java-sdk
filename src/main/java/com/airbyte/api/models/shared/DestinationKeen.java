/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class DestinationKeen {

    /**
     * To get Keen Master API Key, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
     */
    @JsonProperty("api_key")
    private String apiKey;

    @JsonProperty("destinationType")
    private Keen destinationType;

    /**
     * Allow connector to guess keen.timestamp value based on the streamed data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("infer_timestamp")
    private Optional<? extends Boolean> inferTimestamp;

    /**
     * To get Keen Project ID, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
     */
    @JsonProperty("project_id")
    private String projectId;

    public DestinationKeen(
            @JsonProperty("api_key") String apiKey,
            @JsonProperty("infer_timestamp") Optional<? extends Boolean> inferTimestamp,
            @JsonProperty("project_id") String projectId) {
        Utils.checkNotNull(apiKey, "apiKey");
        Utils.checkNotNull(inferTimestamp, "inferTimestamp");
        Utils.checkNotNull(projectId, "projectId");
        this.apiKey = apiKey;
        this.destinationType = Builder._SINGLETON_VALUE_DestinationType.value();
        this.inferTimestamp = inferTimestamp;
        this.projectId = projectId;
    }

    /**
     * To get Keen Master API Key, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
     */
    public String apiKey() {
        return apiKey;
    }

    public Keen destinationType() {
        return destinationType;
    }

    /**
     * Allow connector to guess keen.timestamp value based on the streamed data.
     */
    public Optional<? extends Boolean> inferTimestamp() {
        return inferTimestamp;
    }

    /**
     * To get Keen Project ID, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
     */
    public String projectId() {
        return projectId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * To get Keen Master API Key, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
     */
    public DestinationKeen withApiKey(String apiKey) {
        Utils.checkNotNull(apiKey, "apiKey");
        this.apiKey = apiKey;
        return this;
    }

    /**
     * Allow connector to guess keen.timestamp value based on the streamed data.
     */
    public DestinationKeen withInferTimestamp(boolean inferTimestamp) {
        Utils.checkNotNull(inferTimestamp, "inferTimestamp");
        this.inferTimestamp = Optional.ofNullable(inferTimestamp);
        return this;
    }

    /**
     * Allow connector to guess keen.timestamp value based on the streamed data.
     */
    public DestinationKeen withInferTimestamp(Optional<? extends Boolean> inferTimestamp) {
        Utils.checkNotNull(inferTimestamp, "inferTimestamp");
        this.inferTimestamp = inferTimestamp;
        return this;
    }

    /**
     * To get Keen Project ID, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
     */
    public DestinationKeen withProjectId(String projectId) {
        Utils.checkNotNull(projectId, "projectId");
        this.projectId = projectId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DestinationKeen other = (DestinationKeen) o;
        return 
            java.util.Objects.deepEquals(this.apiKey, other.apiKey) &&
            java.util.Objects.deepEquals(this.destinationType, other.destinationType) &&
            java.util.Objects.deepEquals(this.inferTimestamp, other.inferTimestamp) &&
            java.util.Objects.deepEquals(this.projectId, other.projectId);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            apiKey,
            destinationType,
            inferTimestamp,
            projectId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DestinationKeen.class,
                "apiKey", apiKey,
                "destinationType", destinationType,
                "inferTimestamp", inferTimestamp,
                "projectId", projectId);
    }
    
    public final static class Builder {
 
        private String apiKey;
 
        private Optional<? extends Boolean> inferTimestamp;
 
        private String projectId;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * To get Keen Master API Key, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
         */
        public Builder apiKey(String apiKey) {
            Utils.checkNotNull(apiKey, "apiKey");
            this.apiKey = apiKey;
            return this;
        }

        /**
         * Allow connector to guess keen.timestamp value based on the streamed data.
         */
        public Builder inferTimestamp(boolean inferTimestamp) {
            Utils.checkNotNull(inferTimestamp, "inferTimestamp");
            this.inferTimestamp = Optional.ofNullable(inferTimestamp);
            return this;
        }

        /**
         * Allow connector to guess keen.timestamp value based on the streamed data.
         */
        public Builder inferTimestamp(Optional<? extends Boolean> inferTimestamp) {
            Utils.checkNotNull(inferTimestamp, "inferTimestamp");
            this.inferTimestamp = inferTimestamp;
            return this;
        }

        /**
         * To get Keen Project ID, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
         */
        public Builder projectId(String projectId) {
            Utils.checkNotNull(projectId, "projectId");
            this.projectId = projectId;
            return this;
        }
        
        public DestinationKeen build() {
            if (inferTimestamp == null) {
                inferTimestamp = _SINGLETON_VALUE_InferTimestamp.value();
            }
            return new DestinationKeen(
                apiKey,
                inferTimestamp,
                projectId);
        }

        private static final LazySingletonValue<Keen> _SINGLETON_VALUE_DestinationType =
                new LazySingletonValue<>(
                        "destinationType",
                        "\"keen\"",
                        new TypeReference<Keen>() {});

        private static final LazySingletonValue<Optional<? extends Boolean>> _SINGLETON_VALUE_InferTimestamp =
                new LazySingletonValue<>(
                        "infer_timestamp",
                        "true",
                        new TypeReference<Optional<? extends Boolean>>() {});
    }
}

