/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.airbyte.api.models.shared;

import com.airbyte.api.utils.LazySingletonValue;
import com.airbyte.api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

/**
 * BulkLoad
 * 
 * <p>Configuration details for using the BULK loading mechanism.
 */
public class BulkLoad {

    @JsonIgnore
    private Map<String, Object> additionalProperties;

    /**
     * The Azure blob storage account key. Mutually exclusive with a Shared Access Signature
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("azure_blob_storage_account_key")
    private Optional<String> azureBlobStorageAccountKey;

    /**
     * The name of the Azure Blob Storage account. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#storage-accounts
     */
    @JsonProperty("azure_blob_storage_account_name")
    private String azureBlobStorageAccountName;

    /**
     * The name of the Azure Blob Storage container. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#containers
     */
    @JsonProperty("azure_blob_storage_container_name")
    private String azureBlobStorageContainerName;

    /**
     * Specifies the external data source name configured in MSSQL, which references the Azure Blob container. See: https://learn.microsoft.com/sql/t-sql/statements/bulk-insert-transact-sql
     */
    @JsonProperty("bulk_load_data_source")
    private String bulkLoadDataSource;

    /**
     * When enabled, Airbyte will validate all values before loading them into the destination table. This provides stronger data integrity guarantees but may significantly impact performance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bulk_load_validate_values_pre_load")
    private Optional<Boolean> bulkLoadValidateValuesPreLoad;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("load_type")
    private Optional<? extends DestinationMssqlLoadType> loadType;

    /**
     * A shared access signature (SAS) provides secure delegated access to resources in your storage account. See: https://learn.microsoft.com/azure/storage/common/storage-sas-overview.Mutually exclusive with an account key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shared_access_signature")
    private Optional<String> sharedAccessSignature;

    @JsonCreator
    public BulkLoad(
            @JsonProperty("azure_blob_storage_account_key") Optional<String> azureBlobStorageAccountKey,
            @JsonProperty("azure_blob_storage_account_name") String azureBlobStorageAccountName,
            @JsonProperty("azure_blob_storage_container_name") String azureBlobStorageContainerName,
            @JsonProperty("bulk_load_data_source") String bulkLoadDataSource,
            @JsonProperty("bulk_load_validate_values_pre_load") Optional<Boolean> bulkLoadValidateValuesPreLoad,
            @JsonProperty("load_type") Optional<? extends DestinationMssqlLoadType> loadType,
            @JsonProperty("shared_access_signature") Optional<String> sharedAccessSignature) {
        Utils.checkNotNull(azureBlobStorageAccountKey, "azureBlobStorageAccountKey");
        Utils.checkNotNull(azureBlobStorageAccountName, "azureBlobStorageAccountName");
        Utils.checkNotNull(azureBlobStorageContainerName, "azureBlobStorageContainerName");
        Utils.checkNotNull(bulkLoadDataSource, "bulkLoadDataSource");
        Utils.checkNotNull(bulkLoadValidateValuesPreLoad, "bulkLoadValidateValuesPreLoad");
        Utils.checkNotNull(loadType, "loadType");
        Utils.checkNotNull(sharedAccessSignature, "sharedAccessSignature");
        this.additionalProperties = new HashMap<>();
        this.azureBlobStorageAccountKey = azureBlobStorageAccountKey;
        this.azureBlobStorageAccountName = azureBlobStorageAccountName;
        this.azureBlobStorageContainerName = azureBlobStorageContainerName;
        this.bulkLoadDataSource = bulkLoadDataSource;
        this.bulkLoadValidateValuesPreLoad = bulkLoadValidateValuesPreLoad;
        this.loadType = loadType;
        this.sharedAccessSignature = sharedAccessSignature;
    }
    
    public BulkLoad(
            String azureBlobStorageAccountName,
            String azureBlobStorageContainerName,
            String bulkLoadDataSource) {
        this(Optional.empty(), azureBlobStorageAccountName, azureBlobStorageContainerName, bulkLoadDataSource, Optional.empty(), Optional.empty(), Optional.empty());
    }

    @JsonAnyGetter
    public Map<String, Object> additionalProperties() {
        return additionalProperties;
    }

    /**
     * The Azure blob storage account key. Mutually exclusive with a Shared Access Signature
     */
    @JsonIgnore
    public Optional<String> azureBlobStorageAccountKey() {
        return azureBlobStorageAccountKey;
    }

    /**
     * The name of the Azure Blob Storage account. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#storage-accounts
     */
    @JsonIgnore
    public String azureBlobStorageAccountName() {
        return azureBlobStorageAccountName;
    }

    /**
     * The name of the Azure Blob Storage container. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#containers
     */
    @JsonIgnore
    public String azureBlobStorageContainerName() {
        return azureBlobStorageContainerName;
    }

    /**
     * Specifies the external data source name configured in MSSQL, which references the Azure Blob container. See: https://learn.microsoft.com/sql/t-sql/statements/bulk-insert-transact-sql
     */
    @JsonIgnore
    public String bulkLoadDataSource() {
        return bulkLoadDataSource;
    }

    /**
     * When enabled, Airbyte will validate all values before loading them into the destination table. This provides stronger data integrity guarantees but may significantly impact performance.
     */
    @JsonIgnore
    public Optional<Boolean> bulkLoadValidateValuesPreLoad() {
        return bulkLoadValidateValuesPreLoad;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<DestinationMssqlLoadType> loadType() {
        return (Optional<DestinationMssqlLoadType>) loadType;
    }

    /**
     * A shared access signature (SAS) provides secure delegated access to resources in your storage account. See: https://learn.microsoft.com/azure/storage/common/storage-sas-overview.Mutually exclusive with an account key
     */
    @JsonIgnore
    public Optional<String> sharedAccessSignature() {
        return sharedAccessSignature;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    @JsonAnySetter
    public BulkLoad withAdditionalProperty(String key, Object value) {
        // note that value can be null because of the way JsonAnySetter works
        Utils.checkNotNull(key, "key");
        additionalProperties.put(key, value); 
        return this;
    }    

    public BulkLoad withAdditionalProperties(Map<String, Object> additionalProperties) {
        Utils.checkNotNull(additionalProperties, "additionalProperties");
        this.additionalProperties = additionalProperties;
        return this;
    }

    /**
     * The Azure blob storage account key. Mutually exclusive with a Shared Access Signature
     */
    public BulkLoad withAzureBlobStorageAccountKey(String azureBlobStorageAccountKey) {
        Utils.checkNotNull(azureBlobStorageAccountKey, "azureBlobStorageAccountKey");
        this.azureBlobStorageAccountKey = Optional.ofNullable(azureBlobStorageAccountKey);
        return this;
    }

    /**
     * The Azure blob storage account key. Mutually exclusive with a Shared Access Signature
     */
    public BulkLoad withAzureBlobStorageAccountKey(Optional<String> azureBlobStorageAccountKey) {
        Utils.checkNotNull(azureBlobStorageAccountKey, "azureBlobStorageAccountKey");
        this.azureBlobStorageAccountKey = azureBlobStorageAccountKey;
        return this;
    }

    /**
     * The name of the Azure Blob Storage account. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#storage-accounts
     */
    public BulkLoad withAzureBlobStorageAccountName(String azureBlobStorageAccountName) {
        Utils.checkNotNull(azureBlobStorageAccountName, "azureBlobStorageAccountName");
        this.azureBlobStorageAccountName = azureBlobStorageAccountName;
        return this;
    }

    /**
     * The name of the Azure Blob Storage container. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#containers
     */
    public BulkLoad withAzureBlobStorageContainerName(String azureBlobStorageContainerName) {
        Utils.checkNotNull(azureBlobStorageContainerName, "azureBlobStorageContainerName");
        this.azureBlobStorageContainerName = azureBlobStorageContainerName;
        return this;
    }

    /**
     * Specifies the external data source name configured in MSSQL, which references the Azure Blob container. See: https://learn.microsoft.com/sql/t-sql/statements/bulk-insert-transact-sql
     */
    public BulkLoad withBulkLoadDataSource(String bulkLoadDataSource) {
        Utils.checkNotNull(bulkLoadDataSource, "bulkLoadDataSource");
        this.bulkLoadDataSource = bulkLoadDataSource;
        return this;
    }

    /**
     * When enabled, Airbyte will validate all values before loading them into the destination table. This provides stronger data integrity guarantees but may significantly impact performance.
     */
    public BulkLoad withBulkLoadValidateValuesPreLoad(boolean bulkLoadValidateValuesPreLoad) {
        Utils.checkNotNull(bulkLoadValidateValuesPreLoad, "bulkLoadValidateValuesPreLoad");
        this.bulkLoadValidateValuesPreLoad = Optional.ofNullable(bulkLoadValidateValuesPreLoad);
        return this;
    }

    /**
     * When enabled, Airbyte will validate all values before loading them into the destination table. This provides stronger data integrity guarantees but may significantly impact performance.
     */
    public BulkLoad withBulkLoadValidateValuesPreLoad(Optional<Boolean> bulkLoadValidateValuesPreLoad) {
        Utils.checkNotNull(bulkLoadValidateValuesPreLoad, "bulkLoadValidateValuesPreLoad");
        this.bulkLoadValidateValuesPreLoad = bulkLoadValidateValuesPreLoad;
        return this;
    }

    public BulkLoad withLoadType(DestinationMssqlLoadType loadType) {
        Utils.checkNotNull(loadType, "loadType");
        this.loadType = Optional.ofNullable(loadType);
        return this;
    }

    public BulkLoad withLoadType(Optional<? extends DestinationMssqlLoadType> loadType) {
        Utils.checkNotNull(loadType, "loadType");
        this.loadType = loadType;
        return this;
    }

    /**
     * A shared access signature (SAS) provides secure delegated access to resources in your storage account. See: https://learn.microsoft.com/azure/storage/common/storage-sas-overview.Mutually exclusive with an account key
     */
    public BulkLoad withSharedAccessSignature(String sharedAccessSignature) {
        Utils.checkNotNull(sharedAccessSignature, "sharedAccessSignature");
        this.sharedAccessSignature = Optional.ofNullable(sharedAccessSignature);
        return this;
    }

    /**
     * A shared access signature (SAS) provides secure delegated access to resources in your storage account. See: https://learn.microsoft.com/azure/storage/common/storage-sas-overview.Mutually exclusive with an account key
     */
    public BulkLoad withSharedAccessSignature(Optional<String> sharedAccessSignature) {
        Utils.checkNotNull(sharedAccessSignature, "sharedAccessSignature");
        this.sharedAccessSignature = sharedAccessSignature;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BulkLoad other = (BulkLoad) o;
        return 
            Objects.deepEquals(this.additionalProperties, other.additionalProperties) &&
            Objects.deepEquals(this.azureBlobStorageAccountKey, other.azureBlobStorageAccountKey) &&
            Objects.deepEquals(this.azureBlobStorageAccountName, other.azureBlobStorageAccountName) &&
            Objects.deepEquals(this.azureBlobStorageContainerName, other.azureBlobStorageContainerName) &&
            Objects.deepEquals(this.bulkLoadDataSource, other.bulkLoadDataSource) &&
            Objects.deepEquals(this.bulkLoadValidateValuesPreLoad, other.bulkLoadValidateValuesPreLoad) &&
            Objects.deepEquals(this.loadType, other.loadType) &&
            Objects.deepEquals(this.sharedAccessSignature, other.sharedAccessSignature);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            additionalProperties,
            azureBlobStorageAccountKey,
            azureBlobStorageAccountName,
            azureBlobStorageContainerName,
            bulkLoadDataSource,
            bulkLoadValidateValuesPreLoad,
            loadType,
            sharedAccessSignature);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BulkLoad.class,
                "additionalProperties", additionalProperties,
                "azureBlobStorageAccountKey", azureBlobStorageAccountKey,
                "azureBlobStorageAccountName", azureBlobStorageAccountName,
                "azureBlobStorageContainerName", azureBlobStorageContainerName,
                "bulkLoadDataSource", bulkLoadDataSource,
                "bulkLoadValidateValuesPreLoad", bulkLoadValidateValuesPreLoad,
                "loadType", loadType,
                "sharedAccessSignature", sharedAccessSignature);
    }
    
    public final static class Builder {
 
        private Map<String, Object> additionalProperties = new HashMap<>();
 
        private Optional<String> azureBlobStorageAccountKey = Optional.empty();
 
        private String azureBlobStorageAccountName;
 
        private String azureBlobStorageContainerName;
 
        private String bulkLoadDataSource;
 
        private Optional<Boolean> bulkLoadValidateValuesPreLoad;
 
        private Optional<? extends DestinationMssqlLoadType> loadType;
 
        private Optional<String> sharedAccessSignature = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder additionalProperty(String key, Object value) {
            Utils.checkNotNull(key, "key");
            // we could be strict about null values (force the user
            // to pass `JsonNullable.of(null)`) but likely to be a bit 
            // annoying for additional properties building so we'll 
            // relax preconditions.
            this.additionalProperties.put(key, value);
            return this;
        }

        public Builder additionalProperties(Map<String, Object> additionalProperties) {
            Utils.checkNotNull(additionalProperties, "additionalProperties");
            this.additionalProperties = additionalProperties;
            return this;
        }

        /**
         * The Azure blob storage account key. Mutually exclusive with a Shared Access Signature
         */
        public Builder azureBlobStorageAccountKey(String azureBlobStorageAccountKey) {
            Utils.checkNotNull(azureBlobStorageAccountKey, "azureBlobStorageAccountKey");
            this.azureBlobStorageAccountKey = Optional.ofNullable(azureBlobStorageAccountKey);
            return this;
        }

        /**
         * The Azure blob storage account key. Mutually exclusive with a Shared Access Signature
         */
        public Builder azureBlobStorageAccountKey(Optional<String> azureBlobStorageAccountKey) {
            Utils.checkNotNull(azureBlobStorageAccountKey, "azureBlobStorageAccountKey");
            this.azureBlobStorageAccountKey = azureBlobStorageAccountKey;
            return this;
        }

        /**
         * The name of the Azure Blob Storage account. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#storage-accounts
         */
        public Builder azureBlobStorageAccountName(String azureBlobStorageAccountName) {
            Utils.checkNotNull(azureBlobStorageAccountName, "azureBlobStorageAccountName");
            this.azureBlobStorageAccountName = azureBlobStorageAccountName;
            return this;
        }

        /**
         * The name of the Azure Blob Storage container. See: https://learn.microsoft.com/azure/storage/blobs/storage-blobs-introduction#containers
         */
        public Builder azureBlobStorageContainerName(String azureBlobStorageContainerName) {
            Utils.checkNotNull(azureBlobStorageContainerName, "azureBlobStorageContainerName");
            this.azureBlobStorageContainerName = azureBlobStorageContainerName;
            return this;
        }

        /**
         * Specifies the external data source name configured in MSSQL, which references the Azure Blob container. See: https://learn.microsoft.com/sql/t-sql/statements/bulk-insert-transact-sql
         */
        public Builder bulkLoadDataSource(String bulkLoadDataSource) {
            Utils.checkNotNull(bulkLoadDataSource, "bulkLoadDataSource");
            this.bulkLoadDataSource = bulkLoadDataSource;
            return this;
        }

        /**
         * When enabled, Airbyte will validate all values before loading them into the destination table. This provides stronger data integrity guarantees but may significantly impact performance.
         */
        public Builder bulkLoadValidateValuesPreLoad(boolean bulkLoadValidateValuesPreLoad) {
            Utils.checkNotNull(bulkLoadValidateValuesPreLoad, "bulkLoadValidateValuesPreLoad");
            this.bulkLoadValidateValuesPreLoad = Optional.ofNullable(bulkLoadValidateValuesPreLoad);
            return this;
        }

        /**
         * When enabled, Airbyte will validate all values before loading them into the destination table. This provides stronger data integrity guarantees but may significantly impact performance.
         */
        public Builder bulkLoadValidateValuesPreLoad(Optional<Boolean> bulkLoadValidateValuesPreLoad) {
            Utils.checkNotNull(bulkLoadValidateValuesPreLoad, "bulkLoadValidateValuesPreLoad");
            this.bulkLoadValidateValuesPreLoad = bulkLoadValidateValuesPreLoad;
            return this;
        }

        public Builder loadType(DestinationMssqlLoadType loadType) {
            Utils.checkNotNull(loadType, "loadType");
            this.loadType = Optional.ofNullable(loadType);
            return this;
        }

        public Builder loadType(Optional<? extends DestinationMssqlLoadType> loadType) {
            Utils.checkNotNull(loadType, "loadType");
            this.loadType = loadType;
            return this;
        }

        /**
         * A shared access signature (SAS) provides secure delegated access to resources in your storage account. See: https://learn.microsoft.com/azure/storage/common/storage-sas-overview.Mutually exclusive with an account key
         */
        public Builder sharedAccessSignature(String sharedAccessSignature) {
            Utils.checkNotNull(sharedAccessSignature, "sharedAccessSignature");
            this.sharedAccessSignature = Optional.ofNullable(sharedAccessSignature);
            return this;
        }

        /**
         * A shared access signature (SAS) provides secure delegated access to resources in your storage account. See: https://learn.microsoft.com/azure/storage/common/storage-sas-overview.Mutually exclusive with an account key
         */
        public Builder sharedAccessSignature(Optional<String> sharedAccessSignature) {
            Utils.checkNotNull(sharedAccessSignature, "sharedAccessSignature");
            this.sharedAccessSignature = sharedAccessSignature;
            return this;
        }
        
        public BulkLoad build() {
            if (bulkLoadValidateValuesPreLoad == null) {
                bulkLoadValidateValuesPreLoad = _SINGLETON_VALUE_BulkLoadValidateValuesPreLoad.value();
            }
            if (loadType == null) {
                loadType = _SINGLETON_VALUE_LoadType.value();
            }
            return new BulkLoad(
                azureBlobStorageAccountKey,
                azureBlobStorageAccountName,
                azureBlobStorageContainerName,
                bulkLoadDataSource,
                bulkLoadValidateValuesPreLoad,
                loadType,
                sharedAccessSignature)
                .withAdditionalProperties(additionalProperties);
        }

        private static final LazySingletonValue<Optional<Boolean>> _SINGLETON_VALUE_BulkLoadValidateValuesPreLoad =
                new LazySingletonValue<>(
                        "bulk_load_validate_values_pre_load",
                        "false",
                        new TypeReference<Optional<Boolean>>() {});

        private static final LazySingletonValue<Optional<? extends DestinationMssqlLoadType>> _SINGLETON_VALUE_LoadType =
                new LazySingletonValue<>(
                        "load_type",
                        "\"BULK\"",
                        new TypeReference<Optional<? extends DestinationMssqlLoadType>>() {});
    }
}
